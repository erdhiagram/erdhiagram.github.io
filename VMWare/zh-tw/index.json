[{"uri":"/vmware-operations-guide/zh-tw/dashboards/chapter-1-design-considerations/3.1.1-dashboard-alert-report/","title":"1. 儀錶盤|警報 |報告","tags":[],"description":"","content":"很容易認為儀表板、警報和報告是分開的，應該獨立設計。顧全大局, 這些功能的重疊最小，因為它們形成了一個 連續體 . 它們服務於相同的目的，這是系統與用戶“溝通”的方式。\n如果您應用這個想法，您將意識到您可以減少警報風暴，因為許多警報更適合作為儀表板的一部分。報告也將被最小化並保留給沒有在線訪問權限的角色和不需要交互的用例。\n警報的性質意味著它的用例非常狹窄。您不想根據警報運行您的操作。太多了，你不知所措。太少，你缺乏大局的可見性。 Alert 僅適用於以下情況：\n 緊迫. 如果時間不是關鍵，那麼帶有儀表板的常規標準操作程序 (SOP) 會更有效，因為您可以看到全局。避免向不處理日常操作的角色發送警報。最好使用儀表板來執行諸如容量管理之類的長期操作。 問題. 如果沒有任何問題，則無需觸發警報。這就是為什麼通常您不設置庫存變化警報的原因，因為庫存只是某種事物的帳戶。 補救. 如果您無法立即採取任何措施來解決問題，為什麼要觸發警報？在這種情況下使用儀表板。 很少. Alert 關注異常，而不是大局。因此，您希望它最小化。如果整個房子都著火了，那麼警報就太遲了。  在光譜的另一端是報告。報告的性質意味著它的用例也非常狹窄。現代運營需要報告所缺乏的更豐富的交互。該報告僅適用於以下情況：\n 不互動 (例如用戶需要將其發送到他們的電子郵件收件箱) 離線 (例如，用戶在飛機上) 無法訪問 vRealize 印刷文件 持續時間（例如日曆月） 進一步處理 (例如與數據不在 vRealize 中的其他系統集成) 進一步分析和報告 (例如財務團隊希望將數據作為電子表格報告的一部分)  儀表板涵蓋了最廣泛的用例，因為它是最通用的。\n下表詳細說明了 3 種參與方式如何互補。\n如果用戶可以通過他們的桌面訪問在線，請考慮使用自助服務儀表板，因為他們不需要登錄並且更易於使用。您可以開發一個帶有這些儀表板和自定義指南鏈接的門戶。\nvRealize Operations 的最後幾個版本引入了許多改變儀表板外觀的新功能。 vRealize Operations 8.2 具有增強的儀表板到儀表板導航，因此您可以在儀表板之間創建流程。您的儀表板不再局限於獨立的儀表板。\n8.2 版附帶了一組經過改進的儀表板。它們保持簡單，旨在針對您的特定環境進行定制。在 vRealize Operations 8.4 中改進了儀表板。\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-2-cpu-metrics/2.2.1-guest-os/","title":"1. 來賓操作系統","tags":[],"description":"","content":"我們從 要衡量的競爭類型 因為這是衡量性能的主要衡量指標，其次是衡量指標的利用類型。\nESXi 無法看到來賓操作系統如何調度其進程，因此無法監控來賓操作系統。 ESXi 只能看到來賓發送的內容。在客戶操作系統內部運行的 VMware Tools 能夠查看客戶操作系統內部。為此，需要 VMware Tools 10.3.5 或更高版本以及至少 vSphere 6.0 P08、6.5 P03 和 6.7 U1。\n來賓操作系統 CPU 運行隊列 處理器隊列中的線程數。對於 Windows，此計數器不包括正在運行（正在執行）的線程。對於 Linux，它包括 CPU 管道中的線程。\n讓我們以配置有 8 個 vCPU 的 VM 為例。來賓操作系統有 8 個線程，因此最多可以調度 8 個並行進程。如果有更多的需求，它將不得不排隊。這意味著需要在來賓操作系統大小調整中考慮隊列。\n因為它報告隊列，所以這是衡量客戶操作系統性能的主要計數器。它告訴您 CPU 是否正在努力滿足需求。\n什麼是健康價值？\nWindows 性能監視器 UI 描述與 MSDN 文檔（基於 Windows Server 2016 文檔）不一致。一份文件指出，超過 2 個線程的持續處理器隊列通常表示處理器擁塞。但是，另一個聲明“每個處理器少於 10 個線程的持續處理器隊列通常是可以接受的，這取決於工作負載”。 SQL Server 文檔將 3 作為閾值。如果您看到 Microsoft 或 Linux 的其他推薦，請告訴我。\nWindows 或 Linux 利用率可能為 100%，但只要隊列較少，工作負載就會盡可能快地運行。添加更多 vCPU 實際上會降低性能，因為您有更高的上下文切換機會 上下文切換.\n即使在具有多個處理器的計算機上，處理器時間也只有一個隊列。因此，如果計算機有多個處理器，則需要將此值除以服務於工作負載的處理器數量。這就是工具報告隊列總數的原因。此計數器應在客戶機操作系統 CPU 大小調整中發揮作用。 來賓操作系統 CPU 大小調整.\n您應該分析您的環境，因為某些 VM 的數量可能很高。看看我在下面得到的數字，其中一些 VM 每個 vCPU 有超過 10 個隊列。與 VM Owner 共享發現，因為減少隊列的補救措施可能意味著更改應用程序設置。\n讓我們深入查看第一個 VM。\nCPU 運行隊列多次出現峰值。它與模式中的 CPU 使用率和 CPU 上下文切換率不匹配。我不確定如何解釋這一點，所以如果你知道給我留言。我注意到數據收集不穩定，所以讓我們看看另一個虛擬機。\n以下是運行 Photon OS 的 2 vCPU VM。 CPU 隊列很高，即使 Photon 僅以 50% 運行。會不會是應用程序配置了太多線程導致 CPU 忙於進行上下文切換？請注意 CPU 隊列映射 CPU 上下文切換率和 CPU 運行。在這種情況下，您應該提請應用程序團隊注意，因為它可能會導致性能問題，解決方案是向內查看。為了證明這不是因為底層爭用，我添加了 CPU Ready。\n此屬性僅顯示最後觀察到的值；這不是平均值。 Windows 和 Linux 也不提供最高和最低的變體。\n對於 Linux，我們使用 /proc/stat（內核/系統統計信息）中的 procs_running 值。它顯示處於可運行狀態的進程數。它與 /proc/loadavg 中的值相同。它是所有 CPU 線程運行隊列的總和。 nr_running 字段包括當前正在運行的任務和就緒但未運行的任務。\n參考: Windows 和 Linux.\n來賓操作系統 CPU 上下文切換 CPU 上下文切換 成本性能“由於運行 任務調度程序, TLB 刷新，間接由於共享 CPU 緩存 CPU 緩存 在多個任務之間”。跟踪此計數器並至少了解該特定應用程序可接受的行為是很重要的。\n根據 Windows 10 性能監視器文檔，上下文切換/秒是計算機上所有處理器從一個線程切換到另一個線程的組合速率。在其他條件相同的情況下，處理器越多，上下文切換就越高。\n線程切換可以發生在單個多線程進程內部或跨進程。線程切換可能是由一個線程向另一個線程請求信息引起的，或者是由一個線程被另一個更高優先級的線程搶占而準備運行引起的。\n System 和 Thread 對像上有上下文切換計數器。 vRealize Operations 僅報告總數。\nWindows 或 Linux 每秒切換 CPU 上下文的速率範圍很廣。以下內容取自具有 8 個物理線程的 Windows 10 桌面，它運行大約 10% 的 CPU。我觀察到該值在 10K 到 50K 之間徘徊。\n該值應該與 CPU “利用率”相關，因為理論上利用率越高，CPU 上下文切換的機會就越大。下圖顯示了近乎完美的相關性。每次 CPU 使用率上升時，CPU 上下文切換也會發生。\n即使在單線程應用程序中也可能發生 CPU 上下文切換。下面顯示了具有 4 個 vCPU 的 VDI VM。我繪製了 CPU 使用差異與 CPU 上下文切換的關係圖。您可以看到使用差異高達 78%，這意味著最繁忙的 vCPU 和最空閒的 vCPU 之間的差距為 78%。這是運行一個安全代理，它不太可能被設計為佔用多個 vCPU。\n讓我們繪製同一時期的上下文切換。同時出現一個尖峰，表示代理正忙於上下文切換。請注意，它並不總是必須如此。紅點表示即使 vCPU 使用差異上升，上下文切換也沒有峰值。\nCPU 上下文切換 的值變化很大。它可以遠遠超過 50 萬，如下表所示，因此為該特定應用程序分析和建立正常基線非常重要。對 1 個 VM 健康的內容可能對另一個 VM 不健康。\n從表中可以看出，有些虛擬機經歷了長時間的 CPU 上下文切換，而其他虛擬機則沒有。 VM #4 只有短暫的爆發，因為第 95 個百分位數的值下降到 3796。上下文切換的瞬時峰值可能不會導致性能問題，因此通常將值取在第 95 個和第 99 個百分位數之間的某個位置更為明智。\n讓我們深入查看第一個 VM。這個只有 4 個 vCPU 的 CentOS VM 不斷地達到近 100 萬次上下文切換。模式匹配 CPU 使用率。\n另一方面，大多數客戶操作系統的花費遠低於 10K。我分析了大約 2200 個生產虛擬機，這裡是它們的 CPU 上下文切換的分佈。可以看到0-12000之間的值佔了80%。\n在您的環境中，您可以進一步分析它。在以下示例中，我通過將 10K 以上的所有值分組為一個存儲桶，並將 0 - 10K 存儲桶拆分為多個存儲桶來調整存儲桶閾值。您可以看到超過一半的 CPU 上下文切換率低於 1K。\nLinux竊取時間 根據 Red Hat 文檔, Steal Time 是虛擬機管理程序未提供的 VM 所需的 CPU 時間量。它發生在主機為其自己的進程或另一個來賓分配 CPU 資源時。\n雖然 Linux 有此計數器，但它在 ESXi 上運行時為 0，因為默認情況下未啟用它。即使啟用，它也只考慮就緒時間。它不考慮其他時間，例如 CoStop、VM Wait 和內存等待。\nCPU 就緒包括限制。我還沒有驗證 Linux Steal Time 是否考慮到了它。\n其他客戶操作系統衡量指標 當 CPU 頻率高於標稱速度時，Windows 8 及更高版本將在任務管理器和性能監視器中報告 CPU 使用率 \u0026gt;100%。更改的原因與我們迄今為止所涵蓋的相同，即需要區分正在完成的工作量。更多在這裡 這裡.\n參考: Windows 和 Linux.\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/2.1.1-nuances-in-metrics/","title":"1. 衡量指標的細微差別","tags":[],"description":"","content":"相同的名稱，相同的對象，不同的公式 計數器具有相同的名稱，屬於同一個對象，但根據您在對像中測量它的位置，它們具有不同的公式。\n在 vCPU 級別使用的 VM CPU 不包括系統時間，但在 VM 級別包括。原因是系統時間不存在於 vCPU 級別，因為記帳是在 VM 級別收費的。\n同名不同配方 具有相同名稱的計數器在不同的 vSphere 對像中並不總是具有相同的公式。\n內存使用：在 VM 中，這映射到 Active，而在 ESXi Host 中，它映射到 Consumed。在集群中，這是消耗 + 開銷[^1]。 vRealize Operations 使用來賓操作系統數據進行使用，如果不可用則回退到活動狀態。\n內存消耗：在 ESXi 中，這包括 ESXi 消耗的內存，而在集群中，它僅包括 VM 消耗的內存。\n內存消耗：在 VM 中這不包括開銷，而在集群中它包含。 使用的 VM 包括超線程，但懲罰為 37.5%。使用的 ESXi 也知道 HT，但懲罰是 50%。\nLinux 中的 Steal Time 僅包括 CPU Ready，而 VM 中的 Stolen 時間包括許多其他因素，包括 CPU 頻率。\n相同的名字，不同的意思 名稱相同但含義不同的計數器。請小心，因為您可能會誤解它們。\n當 ESXi CPU 使用率 (%) 顯示 100% 時，VM CPU 使用率 (%) 顯示 62.5%。這是因為 VM CPU Usage 考慮了超線程，而 ESXi CPU Usage 沒有。當 VM vCPU 運行的 ESXi 核心也在運行另一個線程時，就會發生這種情況。\n另一個例子是延遲。磁盤延遲和內存延遲表示存在性能問題。它們實際上是衡量底層 IaaS 為 VM 服務的程度的主要計數器。但 CPU 延遲並不 總是 表示性能問題。它的值受超線程和 CPU 頻率的影響，可以上升或下降。當然，VM 以更高或更低的 CPU 速度運行，或者運行效率較低，但它不會等待服務。它相當於在較舊的 CPU 上運行。\n相同的名字，不同的行為 從監控的角度來看，內存和 CPU 預留具有不同的行為。\nVM RAM 預留是永久性的，因此會影響內存利用率。 Memory Consumed 計數器包括它，即使頁面實際上還沒有被消耗。如果將 16 GB RAM 的 VM 啟動到 BIOS 狀態，並且它有 10 GB 的內存預留，則 VM 已消耗內存計數器將跳至 10 GB。它實際上並未消耗 10 GB，但由於 ESXi 已保留該空間，因此其他 VM 無法使用該空間。\nVM CPU 預留是按需進行的，因此它不會影響 CPU 利用率。 Run、Used、Demand、Usage 不包括在內。如果來賓操作系統未運行，它們的值將為 0 或接近 0。\n同一個目的，不同的名字 您會期望如果目的相同，則標籤或名稱將相同。\n虛擬機中的 Swapped Memory 稱為 Swapped，而在 ESXi 中稱為 Swap Used。\nVM 中的靜態頻率 CPU 利用率稱為 Run，而 ESXi 稱為 Utilization。\nvCenter 所稱的邏輯處理器（在客戶端 UI 中）是 ESXi 所稱的物理 CPU（在 esxtop 面板中）\n令人困惑的名字 櫃檯名稱可能不清楚。\nVM CPU 等待計數器包括空閒時間。由於許多 VM 未以 100% 運行，您將看到 CPU 等待計數器很高。您可能認為它正在等待某些東西（例如磁盤或內存），但它只是閒置。\n在 Microsoft Windows 中，CPU 隊列只計算隊列大小，而磁盤隊列不包括正在處理的 IO 命令。\n令人困惑的測量指標 為什麼 VM CPU Ready 高於 100%？如果您查看 esxtop，許多 VM 級別計數器 \u0026gt;100%。\n混淆單元 為什麼 CPU 計數器以毫秒錶示而不是百分比或 GHz？時間計數器（在本例中為毫秒）如何計算 CPU 頻率？這是有充分理由的！\n“缺失”計數器 您會找到 VM CPU Demand，而不是 VM Memory Demand。需求不適用於內存，因為它是一種存儲形式，就像筆記本電腦磁盤空間沒有需求指標一樣。\n太多選擇 當您有兩塊顯示不同時間的手錶時，您不確定哪一塊是正確的。\nVM CPU“利用率”有五個計數器：運行、已使用、使用情況、以MHz為單位的使用情況和需求。為什麼有這麼多計數器只是為了跟踪利用率，與 Windows 或 Linux 跟踪的不同？\nESXi CPU“利用率”有 6 個計數器：Core Utilization、Utilization、Used、Usage、Uzure in MHz 和 Demand。\n您必須記住，計數器不僅僅是為 vSphere 管理員創建的。 VMkernel 調度程序本身也將它們用作輸入。 CPU 延遲就是這樣一種計數器。\nESXi 與 vCenter 雖然 ESXi 是計數器的來源，但 vCenter 可能會添加自己的計數器，並且公式在所有情況下並不總是 100% 匹配，例如已使用與使用情況。\nESXi 為 VM CPU 提供 Run (ms)、Used (ms)、Demand (MHz)。 vCenter 增加了使用率 (MHz) 和使用率 (%)，這會造成混淆，因為現在有 5 種選擇。\nESXi 顯示已使用 (%)，而 vCenter 顯示已使用 (ms)。第一個受 CPU 頻率影響，可以超過 100%。\nESXi != VMs + VMkernel ESXi 上的計數器比其 VM + VMkernel 的總和更複雜。原因是必須考慮其他參數。例如，CPU SMP（或 Intel 稱之為超線程）的影響不是在 VM 級別測量的。對 VM 計數器求和時要小心，並假設它是 ESXi 計數器。\nM:N 關係 具有多個虛擬磁盤的 VM 可以跨越多個數據存儲，甚至 RDM。另一方面，數據存儲通常託管許多 VM。一個 ESXi 可以掛載多個 LUN，一個 LUN 通常呈現在多個 ESXi 甚至多個集群中。從整體上看，這些多對多關係使得跨虛擬機、數據存儲、ESXi 和集群的計數器不一致。他們每個人都是正確的，因為每個人都必須從自己的有利位置看。\nWindows vs Linux Windows CPU 隊列不包括正在運行的線程，Linux 包括正在執行的線程。\n 複雜的東西，不是嗎？而且我們還沒有添加 AWS、Google、Azure、應用程序、網絡等。\n並非所有特定於 vSphere 的特性都能被並非專門為其構建的管理工具所充分理解。部分理解可能導致誤解，因為對計數器的錯誤解釋可能導致採取錯誤的行動。\n還有一個可擴展性問題。在 vCenter 中，VM 級別有 17 個可用的 CPU 計數器，其中 12 個在 vCPU 級別也可用。此外，每個 VM 都帶有 28 個內存計數器。這意味著具有 4 個 vCPU 的 VM 將有 93 個計數器 (17 + 4 x 12 + 28)。具有 1,000 個虛擬機和 4 個 vCPU 作為平均虛擬機大小的 vSphere 環境每次收集時將有 93K 計數器。如果您每分鐘都這樣做，您每天將收集近 1.34 億個測量指標。由於很多客戶喜歡保留至少6個月，那就是24+十億個衡量指標！\n有瞭如此多的衡量指標，獲得的商業價值的數量就成為一個值得關注的問題。\nvRealize Operations 不會重新生成 vCenter 的計數器。它首先了解 vSphere 的獨特行為，然後通過合併和標準化計數器來簡化它。例如，vRealize Operations 創建派生計數器（例如 KPI 和容量測量指標），然後根據需要將它們應用到 CPU、RAM、磁盤和網絡。\n[^1]：從技術上講，由於虛擬化中的兩級內存層次結構，將使用情況映射到 VM 的活動和 ESXi 的消耗是有意義的。在 VM 級別，我們使用 active 來顯示 VM 實際消耗的內容（與性能相關）。在主機和集群級別，我們使用了“consumed”，因為它與 VM 聲明的內容有關（與容量管理有關）。這種混亂導致客戶購買的 RAM 超出了他們的需要。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-7-availability-management/1.7.1-standalone-system/","title":"1. 獨立系統”","tags":[],"description":"","content":"可用性的最簡單表示是系統正常運行時間值與觀察窗口期間運行時間和停機時間值的總和的比率。\n讓我們舉個例子。在一年內（定義為 365.25 天），一個解決方案在繁忙的工作日有一個持續 24 小時的停機時間。\n因此，可用性可以計算為：\n可用性的另一個等式是平均故障間隔時間 (MTBF) 和平均修復時間 (MTTR) 的比率，或：\n行業慣例是用“9”來表示可用性。例如，99% 的可用性是兩個 9，99.99% 被稱為四個 9。在我們上面的示例中，即使系統停機了一整天，系統仍能交付 99.73%！\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.1-overview/","title":"1. 概述","tags":[],"description":"","content":"由於技術和相關複雜性的影響越來越大，組織確保其環境安全變得越來越具有挑戰性。監管和認證組織的預定義政策有助於降低複雜性並消除資源中不必要的工作和活動重複。此類政策的幾個例子是金融行業的 PCI-DSS 和醫療行業的 HIPAA。\n最終客戶還要求公司在提供服務時遵守全行業的安全標準。由於這些原因，企業並沒有定義自己的專有策略，而是直接採用這些既定標準，或將其作為基本策略，並進一步定制以滿足其需求。\n雖然這些指導方針確保初始配置滿足安全要求，但我們如何確保環境繼續滿足定義的標準？這就是 vRealize Operations 的幫助之處。使用它來監控環境的持續合規性。本章的其餘部分將描述我們如何實現這一目標。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-5-cost-management/1.5.1-dare-to-compare/","title":"1. 敢比較","tags":[],"description":"","content":"在雲時代，今天的應用團隊提供了更多的基礎設施選項。他們只需要一張信用卡即可開始應用程序開發。無需處理內部繁文縟節來獲得一堆硬件，因為它們都可以作為按需服務提供。\n因此，公共雲提供商是內部本地雲的競爭對手。作為內部雲提供商，您需要將公共雲提供商變成盟友。這需要改變您的業務模式，從基礎設施提供商轉變為多雲服務代理。您與最合適的提供商協調基礎設施請求。如果本地云不能滿足業務需求，您可以評估、選擇和交付多個雲。如果本地雲更符合您的業務需求，它也可以是您購買的服務（意味著您不擁有硬件和軟件）。\n一個小型而簡潔的內部 IT 基礎架構團隊確實可以補充一個更大的雲提供商。小規模，特別是因為你在現場和在同一家公司工作，可以讓你提供更好的服務。沒有人喜歡在大公司的支持組織中與 瘋狂 的官僚打交道。您可能會迷失在政策中。\n您還需要將蘋果與蘋果進行比較。列出服務的整個組件。下表提供了一個示例，您可以在其中添加私有云和外部託管雲。您應該使用另一個比較 SLA 和價格的表來補充此表。我提供了一個 SLA 表的示例 容量管理.\n成本和價格是相關的，但又是不同的。價格是您的客戶關心的，因為這是他們支付的費用。如果你因為成本太高而把價格抬得太高，你的客戶只會轉向公有云。\n與術語保持一致。你的價格就是你的客戶的成本。在向客戶描述成本時，使用術語價格更容易。否則，您可能會感到困惑，如以下句子所示：“容量足夠的集群更昂貴，因為成本僅由少數虛擬機分擔。”\n這句話的意思是每個 VM 的成本，這是一個假設成本，因為您不會產生該成本。\n您需要同時開發定價模型和成本模型，最好是同時開發。\n我們先看價格，因為我們要從客戶說起。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-4-configuration-management/1.4.1-overview/","title":"1. 概述","tags":[],"description":"","content":"作為一款運營管理軟件，vRealize Operations 關注產品對日常運營的影響，而不是產品本身的功能。被監控的產品（如vSphere、vSAN）可能有相關的功能，但對操作的影響不同。例如，vSphere 為虛擬機提供限制、預留和共享。作為函數，它們密切相關，出現在 vCenter 客戶端 UI 的同一個對話框中，並且都應該是一個。但是，它們對操作的影響是不同的。下表更詳細地描述了這一點。\nvRealize Operations 採用對操作有不同影響的原則，並應用一種方法來查看配置。它不按功能或對像對設置進行分組。相反，它從影響開始，並優先考慮可以做的事情。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.1-good-advice/","title":"1. &#34;好處&#34; 勸告","tags":[],"description":"","content":"你能弄清楚為什麼下面的陳述是錯誤的嗎？它們都是關於容量管理主題的善意建議。我們相信您已經聽說過它們，甚至提供了它們。\n關於集群內存：\n 我們建議物理 RAM 和虛擬 RAM 之間的過量使用比率為 1:2。超過這個是有風險的。 大多數集群的內存使用率很高，大約90%。您應該以 60% 為目標，因為您需要考慮 HA。 記憶活動不應超過 50-60%。您需要在 Active Memory 和 Consumed Memory 之間有一個緩衝區。 內存應該在每個主機上以高狀態運行。  關於集群 CPU：\n 集群“XYZ”上的CPU比例高達1:5，因為它是一個重要的集群。 剩餘所有集群的過量使用率看起來不錯，因為它們大約為 1:3。這為峰值和 HA 提供了一些緩衝。 將第 3 層工作負載的過載比率保持在 1:4，因為它們不是關鍵任務。 集群“ABC”上的 CPU 使用率約為 70%。因為它們是 UAT 服務器，所以不用擔心。只有當它們達到 85% 時，您才應該擔心。 集群剩餘的 CPU 利用率約為 25%。這很好！你有足夠的能力。  上述聲明的範圍顯然與 VMware vSphere 集群有關。從容量監控的角度來看，由於 HA 和 DRS，集群是最小的邏輯構建塊。因此，假設我們在集群級別而不是主機級別或數據中心級別進行容量規劃是正確的。\n你能找出錯誤在哪裡嗎？\n你現在應該注意到一個趨勢。他們有一些共同點。如果沒有，請 第 4 部分：測驗答案!\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.1-a-day-in-the-life/","title":"1. 雲管理員生活中的一天","tags":[],"description":"","content":"要了解性能實際上是什麼，從客戶開始總是好的。如前所述，您從供應商處購買的是 SDDC，但您向客戶出售的是 IaaS。我們幾乎在所有客戶身上都看到了這一點。無論應用程序團隊或 VM 所有者是否使用退款模式為服務付費，它都是一項服務。 VM Owners 不再擁有，因此關心，底層基礎設施。\n這是虛擬化社區中經常講述的一個常見故事，它會引起您作為 IaaS 提供商的共鳴。\n虛擬機所有者向您抱怨說她的虛擬機速度很慢。昨天不慢。她的應用程序架構師和首席開發人員已經證實：\n 虛擬機 CPU 和 RAM 利用率沒有增加，處於正常範圍內。 應用團隊已驗證 CPU Run Queue 也在健康範圍內。 磁盤延遲很好。它低於 5 毫秒。 沒有網絡數據包丟失。 應用程序設置沒有變化。事實上，該應用程序在過去 1 個月內沒有任何變化。 沒有在 Windows 中安裝最近的補丁。 沒有重啟。它已經運行了數週。  她說你的VMware環境是一個共享環境，也許虛擬機數量的增加和其他虛擬機工作負載的增加正在給你的IaaS帶來壓力。\n她還說她最近的另一個虛擬機 P2V 在物理上的表現要快得多。\n你是對的。她說這是你的錯。\n你做什麼工作？\n這當然是一個困難的境地。您要監督 10,000 多個 VM。您已成功將它們整合為 500 台 ESXi 主機，為公司節省了 9500 台服務器，更不用說節省了大量資金。您在此過程中建立了自己的聲譽，因此這不僅僅是她的 VM 不執行的問題。您的聲譽在這裡岌岌可​​危。\n您還記得您的團隊在過去幾個月中一直在定期添加新的 VM，因此她可能是對的。可為什麼是今天，而不是前幾天說的呢？\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/2.1.2-guest-os-vs-vm/","title":"2. 來賓操作系統與虛擬機","tags":[],"description":"","content":"來賓 OS 和 VM 是兩個密切相關但不同的實體。它們是 SDDC 堆棧中的相鄰層。這兩層是不同的，每一層都提供了另​​​​一層可能無法提供的獨特可見性。來賓操作系統消耗的資源與底層 VM 消耗的資源不同。電源管理和 CPU SMT 等其他因素也會導致差異。\n下圖使用_英語_單詞“需求”和“使用”來解釋這個概念，其中需求包括使用和未滿足的需求。這並不意味著 vSphere 和 vRealize Operations 中的需求和使用計數器，這意味著不要假設這些計數器實際上意味著這個。它們是為不同的目的而創建的。\n我嘗試將應用程序添加到上圖中，但是我刪除了它使整個圖片變得複雜。所以請注意一些應用程序，如 Java VM 和數據庫管理自己的資源。另一個虛擬化層（例如 Container）無疑將復雜性提升到另一個層次。\n我們可以從上面看到區域 A 對虛擬機管理程序不可見。\nA層 來賓操作系統內部的隊列（CPU 運行隊列、RAM 頁面文件、磁盤隊列長度、驅動程序隊列、網卡環形緩衝區）。這些隊列對底層管理程序不可見，因為它們尚未發送到內核。例如，如果 Oracle 向 Windows 發送 IO 請求，並且 Windows 存儲子系統已滿，則不會將此 IO 發送到管理程序。因此，VM 級別的磁盤 IOPS 計數器將報告，因為它尚未收到此 IO 請求。\nB層 來賓實際使用的內容。這對虛擬機管理程序是可見的，因為 VM 基本上是一個多進程應用程序。來賓操作系統 CPU 利用率以某種方式轉化為 VM CPU 運行。我添加了“以某種方式”這個詞，因為這兩個計數器是相互獨立計算的，並且可能在不同的採樣時間和匯總技術下進行。\nC層 管理程序開銷（CPU 系統、CPU MKS、CPU VMX、RAM 開銷、磁盤快照）。這種開銷顯然對來賓操作系統不可見。您可以通過安裝工具獲得一些可見性，因為它將向 Windows/Linux 添加新計數器。工具不會修改現有的 Windows/Linux 計數器，這意味著它們仍然不知道虛擬化。\n從 VMkernel 的角度來看，VM 是在 VMkernel 中運行的一組進程或用戶世界。有3種主要類型的組：\n VM Executable (VMX) 進程負責處理對性能不重要的設備的 I/O。 VMX 還負責與用戶界面、快照管理器和遠程控制台通信。 VM Monitor (VMM) 進程負責虛擬化客戶操作系統指令，並管理內存映射。 VMM 將存儲和網絡 I/O 請求傳遞給 VMkernel，並將所有其他請求傳遞給 VMX 進程。分配給 VM 的每個虛擬 CPU 都有一個 VMM。 鼠標鍵盤屏幕 (MKS) 進程負責呈現訪客視頻並處理訪客操作系統用戶輸入。當您通過 vCenter 客戶端控制台進入 VM 時，已完成的工作將計入此過程。這反過來又由 VM 收費，而不是特定的 vCPU。  如果您想查看上述過程中的錯誤示例，請查看此知識庫文章 知識庫.\nD層 未滿足的需求（CPU 就緒、CPU 同步停止、CPU 重疊、CPU VM 等待、RAM 爭用、VM 未完成 IO）。\n來賓操作系統遇到時間凍結或緩慢。它不知道它是什麼，這意味著它無法解釋它。\n 我已經用簡單的術語介紹了差異，並沒有對全部差異做出公正的判斷。如果你想讀一篇科學論文，我推薦這篇論文這篇報告 寫的Benjamin Serebrin 和Daniel Hecht.\n由於我們在本書後面的相應章節中介紹了 CPU、內存、磁盤和網絡指標，因此我們將更詳細地解釋它們之間的差異。現在，我們將提供一些示例來說明這一點。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-7-availability-management/1.7.2-multi-component-system/","title":"2. 多組分系統","tags":[],"description":"","content":"如今，我們很少處理獨立的解決方案。甚至我們認為獨立的解決方案也由多個較小的組件組​​成。例如，物理服務器由多個較小的部分組成，例如電源和磁盤。要計算服務器可用性，我們需要考慮每個組件的可用性及其對整體可用性的影響。\n系統組件系列 系列是串行連接。想想 Web 服務器 -\u0026gt; 應用程序服務器 -\u0026gt; 數據庫服務器。\n具有多個串聯子組件的整個系統的可用性按以下公式計算：\n讓我們考慮一個例子，在這種情況下，我們有三個相互串聯的獨立組件，每個組件的可用性為 99.9%。整個系統的可用性 = 99.9 * 99.9 * 99.9 = ~99.7 %\n簡而言之，我們可以看到，對於串聯組件，整體可用性會降低。\n並聯繫統組件 具有多個並行子組件的整個系統的可用性按以下公式計算：\n1 - Availability of Component i 給我們提供了組件的不可用性。\n讓我們考慮一個例子，在這種情況下，我們有三個相互並行的獨立組件，每個組件都有 99.9% 的可用性。\n整個系統的可用性：\n多組分 讓我們考慮一個更實用的系統，它同時具有串行和並行組件。對於本示例，我們以具有 4 個 Web 服務器、2 個應用程序服務器和 1 個數據庫服務器的三層應用程序為例。讓我們考慮一下所有這些的可用性為 99.9%，看看整體可用性是多少。\n首先，我們需要先計算並行組件的整體可用性。使用上面的公式，我們看到應用服務器的整體可用性為99.99%，Web服務器為99.9999%。\n接下來，我們需要計算串聯組件的整體可用性。應用上述公式，我們得到了 ~99.89% 的整體可用性。\n這就是我們避免與其他系統串聯的單點故障的原因，因為此類組件會降低整體可用性。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.2-security-approach/","title":"2. 網絡安全方法","tags":[],"description":"","content":"具體來說，組織或數據中心的網絡安全是一種可以分為兩個主要領域的方法。\n 組件的安全配置 網絡安全實踐或流程到位  第一點是關於在環境或產品中進行更改並安全地配置它們。例如，如果程序需要來自用戶的輸入，則使用適當的輸入驗證來防止不需要的輸入。另一個例子是使用不同的角色，然後 基於角色的訪問控制 (RBAC) 確保只有獲得授權的人員才能獲得對環境的適當訪問級別。\n第二點是關於過程。例如，如果要對服務器進行更改，則需要遵循相應的審批渠道，並且需要記錄更改。這樣做的目的是避免任何不必要的更改並跟踪誰做了什麼。通常，組織具有適當的“變更管理”流程。\n在這裡，我們將介紹第一個區域“組件的安全配置”。該領域有兩個不同的階段。它們詳述如下。\n第一階段是完成初始配置階段。這包括安全地配置數據中心環境（不太頻繁的任務）到為單個應用程序配置安全性（更頻繁的任務）。第二階段是關於持續維護和確保安全。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-5-cost-management/1.5.2-price/","title":"2. 價格","tags":[],"description":"","content":"價格只是調整保證金、折扣和罰款的成本。使用價格來推動正確的行為並鼓勵採用。\n作為內部雲提供商，您希望通過定價解決哪些業務問題？\n非常大的 VM 是在 VM 投入生產之前解決的最佳問題。因此，設計您的定價模型以從一開始就鼓勵正確的尺寸。大小是正確的，從一開始就是正確的。創建累進定價並為較小的 VM 大小應用折扣。下圖顯示了分層定價的示​​例。具有 16 個以上 vCPU 的虛擬機定價為高價，而少於 8 個 vCPU 的虛擬機定價為折扣價。\n您如何將上述累進定價應用於不同的服務級別？您應該在大型 VM 上投資多少溢價？你應該給小型虛擬機多少折扣？乘數效應（累進稅）不能太高，因為公有云沒有這樣的稅。他們遵循線性定價。如果你使用高倍數，你的價格就會太高，否則你會吸收深度損失。\n下表提供了乘法器的示例。\n我們將相同的原則應用於 RAM。\n保持您的定價模型簡單。你的賬單越複雜，你就越需要解釋。下表提供了收費和捆綁的建議。捆綁意味著您將其包含在總成本中，但您不會明確收取費用。您肯定是在權衡準確性和簡單性。\n過度簡化的定價可能對客戶不公平，但這在其他行業很常見。以航空業為例。我最喜歡的航空公司是新加坡航空公司。我注意到他們至少有 4 代飛機。新飛機效率更高，運營成本更低，更受客戶歡迎。另一方面，如果考慮折舊，則舊飛機已經完全折舊。但是，所有世代的價格都相同。\n收支平衡 在規劃定價時，請考慮達到盈虧平衡點所需的時間。在此期間，您應該有足夠的時間來收回您的費用。它應該在折舊結束之前。\n盈虧平衡點取決於盈虧平衡水平。您可能無法在最後完全出售所有資源。因此，如果您的計劃是基於 80% 的銷售額，那麼這個 80% 的價格必須能夠覆蓋所有成本。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-4-configuration-management/1.4.2-review-flow/","title":"2. 審核流程","tags":[],"description":"","content":"您需要管理數以千計的設置以確保安全性、性能和可用性。為確保首先跟踪和解決關鍵問題，請考慮對它們進行優先排序。 vRealize Operations 8.2 使用 4 步檢查，從最緊急的開始。\n步 1 解決不正確、不安全、不符合公司標准或違反最佳實踐的設置。你應該適當地糾正它們。\n這通常是最緊急的步驟。\n步 2 設置是正確的，但在舊版本上。很難跟上所有供應商版本，因此您應該優先考慮最舊的版本，尤其是那些不再受支持的版本。\n典型的 SDDC 或 EUC 架構跨越許多組件。雖然每個都可以運行最新版本，但它們可能不兼容或不支持。\n步 3 這些設置是正確且最新的，但它們會使您的 IaaS 操作複雜化。由於您不太可能將它們全部消除，因此應制定將它們最小化的策略作為簡化操作的一部分。\n步 4 最後一步是關於成本和容量，因為沒有問題。您希望最大限度地利用資源，同時最大限度地降低成本。這是一個平衡的行為！\n 請注意，每個客戶都以獨特的方式經營他們的業務。每一個操作都像一個人的指紋。因此，適合其他客戶的不一定適合您。即使在相同的環境中，適合開發環境的不一定適合生產。\n下表列出了一些可能性。將它們用作輸入以根據您的需要自定義配置儀表板。它提供了在 IaaS 消費者層中檢查內容的示例。該層由 VM 和在 VM 內運行的所有內容組成，例如進程、應用程序、來賓操作系統和容器。\n下表描述了 IaaS 提供商層。這一層由軟件和硬件基礎設施組成，例如 Telegraf、ESXi、計算集群、數據存儲和數據存儲集群、資源池、分佈式虛擬交換機和端口組、vSAN、NSX 和硬件。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.2-end-to-end-capacity/","title":"2. 端到端容量","tags":[],"description":"","content":"如果從規劃階段開始，容量管理將變得更加容易。您可以在此處定義產品、設定價格和性能預期。如果您不設定預期，您的客戶將需要您當前的基礎架構無法滿足的高性能。\n容量管理需要端到端的規劃和調整，因為歸根結底，它會將您面臨的現實與您設定的計劃進行比較。平衡供需需要您查看以下 6 個組成部分。步驟1和2一起完成，剩下的4個步驟可以並行完成。\n與績效管理不同，這一運營支柱不需要深厚的技術知識。如果您不信任我，讓我們檢查您的技術技能。\n 您能否構建一個性能與物理性能匹配的集群？  簡單，只是不要過度使用或為 VM 保留 100%。   你能建立一個可以處理巨大虛擬機的集群嗎？  簡單，只需為每個插槽獲取大量內核。 很簡單，在盒子裡放很多核就行了。   你能構建一個可用性非常高的架構嗎？  很簡單，只要有更多的 HA 主機，更多的 vSAN FTT，並且容錯域分佈在不同的機架上。 簡單，只要有更多的 HA 主機。   能不能搭建一個可以運行大量虛擬機的集群？  很簡單，只要得到很多大主機。   你能優化性能嗎？  當然，請遵循性能最佳實踐並針對性能進行配置。   你能降低成本嗎？  當然，盡量減少硬件和軟件的成本，選擇性價比最高的。您了解所有供應商及其技術。你知道每個人的優點和缺點。    如果從一開始就做好以上這些事情並不難，這就是為什麼我們需要從計劃階段開始。如果從第 6 步開始而忽略第 1 步和第 2 步，您將扮演 Mission Impossible 電影中的主角。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.2-the-3-realms/","title":"2. 3個領域","tags":[],"description":"","content":"一般來說，企業應用程序有三個主要領域。每個領域都有自己的一組團隊。每個團隊都有一套獨特的職責，因此需要技能。下圖解釋了三個領域，以及每個領域的典型層次和提出的問題。\n性能故障排除在很大程度上是一種消除練習。此方法對每一層進行切片並確定該層是否導致性能問題。因此，必須有一個指示符來指示是否正在執行特定層。這個主要指標被恰當地命名為關鍵績效指標。我們將在 這裡 中介紹更多。\n上層依賴於下層，因此基礎設施層通常是爭用的來源。因此，首先關注底層，因為它是上層的基礎。好的部分是，該層通常是一個水平層，它提供一組通用的基礎設施服務，而不管在其上運行什麼業務應用程序。\n現在，我們不知道當基礎設施出現延遲時對 application 的影響。這取決於應用程序。即使在相同的軟件上，例如 SQL Server 2019，影響也可能不同，因為這取決於您如何使用該軟件。即使在相同版本的軟件上，業務工作負載的不同性質（如批處理和 OLTP）也會受到不同的影響。\n根據應用程序和基礎設施架構，可以有更多的堆棧或層。以下示例顯示了 5 個圖層。性能故障排除的挑戰在於層可能不共享上下文。\nU用上面的例子，我們可以證明缺乏可見性是如何使故障排除幾乎不可能的。讓我們來看看上面的內容。故事從抱怨開始，因為這更能引起共鳴。\n在業務層，您可以看到每個業務交易的表現。您不僅知道哪個用戶受到影響，還知道哪些交易受到影響，因為指標具有交易 ID。您可以在代碼中跟踪它，因為您知道每個函數調用發生的時間，假設您記錄每個事務。\n當您超越代碼並進入貨架商業 (COTS) 軟件時，問題就開始了。軟件可能會顯示它的隊列是10000，比手冊上說它可以處理的多5000。但是您不知道用戶 Joko 事務是否在該隊列中。 COTS 軟件指標不再與用戶相關，更不用說單個交易了。紅色爆炸圖標標記上下文丟失的位置。\n從應用程序轉移到基礎設施導致了另一個上下文丟失。 Windows 或 Linux 不知道您正在運行什麼應用程序。就操作系統而言，每個應用程序只是一個進程。它將報告每個進程的基本 CPU、內存、磁盤和網絡利用率。更高級的計數器在操作系統級別、系統範圍內報告。例如，您不知道您的進程是否經歷過網絡丟包。數據包計數器丟失是一個系統範圍的指標。\n從單個 EC2 或 VM 遷移到共享基礎架構會導致另一次上下文丟失。在公共雲的情況下，您可能根本無法了解物理層。\n"},{"uri":"/vmware-operations-guide/zh-tw/dashboards/chapter-1-design-considerations/3.1.3-interaction/","title":"3. 相互作用","tags":[],"description":"","content":"充分利用互動，同時確保它們保持邏輯性和一致性。首先使用任何繪圖工具邏輯地設計儀表板，以便您可以看到信息流。\n豐富的交互將增加儀表板的功能。如果可能，請以對稱交互為目標，因為儀表板消費者更容易理解。下面顯示了驅動 4 個折線圖的 4 個熱圖。它看起來很複雜，但使用時感覺自然。\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/2.1.3-roll-up-vs-aggregation/","title":"3. 隨著時間的推移聚合 vs 更高級別對象的聚合","tags":[],"description":"","content":"在我們介紹計數器之前，您需要了解各種單位以及它們是如何獲得的：\n 隨著時間的推移聚合 (例如。從 20 秒到 5 分鐘) 更高級別對象的聚合.  一些常用單位是毫秒、MHz、百分比、KBps 和 KB。某些計數器以 MHz 顯示，這意味著您需要與 ESXi 物理 CPU _static_頻率[^1] 進行比較。在大型環境中，這在操作上可能很困難，因為您擁有來自不同代的不同 ESXi 主機（因此可能具有不同的 GHz）。這也是集群是最小的邏輯構建塊的原因。如果您的集群具有頻率不同的 ESXi 主機，這些基於 MHz 的計數器可能難以使用，因為虛擬機通過 DRS 獲得 vMotion。\nCPU的毫秒數怎麼樣？它來自哪裡，為什麼？\n要回答這個問題，我們需要深入了解 ESXi VMkernel 調度程序。考慮時間的流逝和在那段時間內完成的 CPU 週期數量。與以 1 GHz 運行的內核相比，以 2 GHz 運行的 CPU 內核將完成 2 倍的 CPU 週期。超線程也是如此。當有對等線程同時競爭時，完成的周期更少。\n你認為的利用率或使用量或需求或使用量，如果你將它們視為循環，一旦你進行了這種小的範式轉變，就會更容易。\n讓我們讓 VM CPU Ready。以下內容來自 ESXi vsish 命令。它表明原始的原始計數器實際上是一個運行數字。要計算給定時間段的 CPU 就緒，我們需要從第一個數字中減去最後一個數字。為了轉換為百分比，我們對集合進行劃分，在屏幕截圖中為 20000 毫秒。\n補充單位是統計類型。有3種類型：\n三角洲 該值來自運行計數器。你看到的是兩個時間點之間的差異。所有以毫秒為單位的單位都是增量類型。\n速度 該值衡量變化率，例如每秒的吞吐量。該速率始終是 20 秒週期內的平均值。 注：有以百分比為單位、以比率為統計類型的指標。我很困惑為什麼。\n絕對 該值是一個獨立的數字，與其他數字無關。絕對值可以是第 20 秒的最新值或 20 秒期間的平均值。\n隨著時間的推移聚合 時間列的聚合非常重要。對於 vRealize Operations，平均值是指 5 分鐘的平均值。 和 呢？為什麼在匯總數字時數字會不斷上升？\n對於那些累積更有意義的計數器，它實際上是平均值。讓我們舉個例子。 CPU 就緒時間在採樣週期內累積。 vCenter 每 20 秒報告一次計數器，即 20000 毫秒。下表顯示 VM 每秒具有不同的 CPU 就緒時間。它在第 5 秒和第 6 秒有 900 毫秒的 CPU 就緒時間，但在剩餘的 18 秒內有較低的數字。\n在 20 秒的時間段內，VM 可能會累積每秒不同的 CPU 就緒時間。 vCenter 將所有這些數字相加，然後除以 20,000。這實際上是一個平均值，因為您在此期間失去了峰值。\n最新，另一方面，是不同的。它採用採樣週期的最後一個值。例如，在 20 秒採樣中，它取第 19 秒和第 20 秒之間的值。該值可以低於或高於整個 20 秒週期的平均值。與平均值相比，最新版本不太受歡迎，因為您會錯過 95% 的數據。\n從 20 秒累積到 5 分鐘或更長時間會導致進一步平均，無論累積技術是求和還是平均。這就是為什麼對於早於 1 天的數據使用 vRealize Operations 比使用 vCenter 更好的原因，因為 vCenter 將數據進一步平均為 0.5 小時的平均值。\n由於源數據基於 20 秒，並且默認情況下 vRealize Operations 對這些數據進行平均，因此任何毫秒數據的​​“100%”都是 20,000 毫秒，而不是 300,000 毫秒。當您看到 3000 毫秒的 CPU 就緒時，實際上是 15% 而不是 1%。\n默認情況下，vRealize Operations 每 5 分鐘獲取一次數據。這意味著 不 適合對不持續 5 分鐘的性能進行故障排除。事實上，如果性能問題只持續 5 分鐘，您可能不會收到任何警報，因為收集可能恰好發生在這 5 分鐘的中間。例如，假設 CPU 從 08:00:00 到 08:02:30 空閒，從 08:02:30 到 08:07:30 出現峰值，然後從 08:07:30 到 08 再次空閒： 10:00。如果 vRealize Operations 恰好在 08:00、08:05 和 08:10 進行收集，您將不會看到峰值，因為它分佈在兩個數據點上。這意味著，要讓 vRealize Operations 在沒有任何閒置數據的情況下 *** 整個*** 地接收峰值，則峰值 **可能** 必須持續 10 分鐘。\nvRealize Operations 能夠存儲單獨的 20 秒數據。但這會導致數據量增加 15 倍。在大多數情況下，您想要的是 15 個數據點中的峰值。這是一組新的故障排除指標的用武之地。 故障排除指標\nvCenter 中的集合級別不適用於 vRealize Operations。更改收集級別不會影響 vRealize Operations 收集的計數器。它使用自己的過濾器從 vCenter 收集所有計數器，您可以通過策略對其進行自定義。\n更高級別對象的聚合 聚合到更高級別的對像很複雜，因為沒有無損解決方案。您試圖通過在其中選取 1 個值來表示一系列值，因此您往往會丟失細節。技術的選擇是平均值、中值、最大值、最小值、百分位數和計數。使用的默認技術是 average() 函數。平均的問題在於它會掩蓋問題，除非它們很普遍。到 1000 台虛擬機的平均性能不佳時，您可能有一百台虛擬機處於不良狀態。\n讓我們舉個例子。下表顯示了 ESXi 主機。第一台主機的 CPU 就緒時間為 149,116.33 毫秒。這是一個壞數字嗎？\n很難得出結論。該主機有 67 個正在運行的 VM，每個 VM 都可以有多個 vCPU。總共有 195 個 vCPU。每個 vCPU 可能會經歷 20,000 毫秒的 CPU 就緒（這是最糟糕的情況）。\n如果將 67 個 VM 的 CPU Ready 相加，您會得到多少？\n你是對的，你得到了 ESXi 主機報告的相同數字。這意味著 ESXi CPU 就緒 = Sum（VM CPU 就緒），VM CPU 就緒 = Sum（VM vCPU 就緒）。\n因為它是虛擬機的總和，轉換成 % 需要除以正在運行的虛擬機 vCPU 的數量。\nESXi CPU 就緒 (%) = ESXi CPU 就緒 (ms) / 總和（正在運行的虛擬機的 vCPU)\nCPU Ready 是否在 VM 之間平均分配？你怎麼看？\n這取決於許多設置，因此您很有可能會得到以下內容。此熱圖顯示了上述主機上的 67 個虛擬機，按 CPU 就緒著色，按虛擬機 CPU 配置調整大小。您可以看到較大的 VM 往往具有更高的 CPU 就緒狀態，因為它們具有更多的 vCPU。\n在分析數百萬個數據點時，您還需要考慮性能要求。每 5 分鐘從 100K 對像中求平均值將需要大量資源。對於 VMware Horizo​​​​n，我們應用兩步匯總技術來最小化計算成本。從數學上講，它不太準確，因為小型 VDI 池或 RDS 場與大型 VDI 池同等對待。在操作上，僅僅因為它們較小並不意味著它們不那麼重要。\n[^1]：實際上，CPU 頻率因每個內核而異。它也隨著時間而變化。為了便於記賬，我們假設整個盒子都是靜態的。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-7-availability-management/1.7.3-availability-reporting/","title":"3. 可用性狀態","tags":[],"description":"","content":"你能發現上述計算的局限性嗎？\n提示：它在 1 個月內測量。\n一個典型的月份允許 99.9% 的停機時間是多少分鐘？\n大約43分鐘，如果發生在高峰時段，這是一個很長的時間。您可能會失去很多業務，更不用說客戶的不滿了。\n上述計算的問題在於它是按月計算的。它沒有考慮到所有組件同時關閉與不同時間之間存在很大差異。查看下表，其中每 5 分鐘記錄一次正常運行時間。\n上述系統有 3 層：Web、應用程序和數據庫。\nWeb 層的大小為 8 個虛擬機，另外還有 2 個虛擬機以提高靈活性。應用層設計為3+1服務器組。數據庫採用主動/被動設計。\n讓我們逐步展示不同的場景如何影響可用性。\n9:00 - 9:05 am  1 個 Web 服務器已關閉。所有其他服務器都已啟動。為簡單起見，我們假設停機時間恰好為 300 秒。 Web 層的正常運行時間變為 9/10 = 90%。 總體而言，系統正常運行時間為 90%。 SLA 不受影響，因為 Web 層旨在處理 2 個故障。 儘管 SLA 不受影響，但重要的是要記錄正常運行時間並不完美的事實。  9:05 - 9:10 am  1 個 Web 服務器 + 1 個應用程序服務器已關閉。所有其他服務器都在線。 Web 層的正常運行時間變為 9/10 = 90%。 應用層的正常運行時間變為 3/4 = 75%。 總體而言，系統正常運行時間為 68%。 SLA 不受影響，因為兩個層都沒有違反它們的閾值。  9:10 - 9:15 am  3 個 Web 服務器已關閉。所有其他服務器都已啟動。 Web 層的正常運行時間變為 7/10 = 70%。 總體而言，系統正常運行時間為 70%。這比之前的 68% 高，但這次 SLA 受到影響，因為 Web 層不是設計來處理 3 次故障的。 從這裡您可以看到正常運行時間和 SLA 可能會有所不同。 - 前者是絕對的和技術性的，而SLA是相對於設計和任何合同的。  9:15 - 9:20 am  與之前相同，但 1 個應用程序服務器已關閉。反映這種退化很重要，因此正常運行時間從 70% -\u0026gt; 53% 減少。 SLA 不關心它，因為它只關心系統是在運行還是出現故障。在那5分鐘裡它是二進制的。  我們現在可以繼續整個月的日程安排。我正在稍微修改示例以說明 SLA 和現實可能不同的觀點。\n從上午 9:00 到上午 9:30，系統從未有 100% 的正常運行時間。在本月剩餘的時間裡，它具有完美的 100% 正常運行時間。\nSLA 僅經歷了 5 分鐘的中斷。所有其他停機時間都不會影響 SLA，因為系統已設計用於處理故障或計劃停機。\nSLA 基於日曆月。以2021年2月為例，有28天。這在 5 分鐘內轉化為 8064 次。\nSLA  (8064 - 1) / 8064 = 99.988% 如果 SLA 為 99.95，那麼您將通過 2021 年 2 月。  現實  平均值 (34% + 3.75% + 0 + 0% + 34% + 34% + 100% + 100% + 100% + \u0026hellip;) 是的，我們只是對構成 2021 年 2 月的所有 8064 個數字求平均值。 結果是 99.939%  現實與 SLA 之間的差距提供了有價值的輸入。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.3-continuous-compliance/","title":"3. 持續合規","tags":[],"description":"","content":"儘管根據網絡安全指南配置環境很重要，但這只是起點。保持相同級別的配置至關重要。配置漂移隨時間發生。我們如何確保改變後的環境仍然符合既定政策？在每個組織中，合規性測試都會定期進行，例如每週一次。檢查之間的狀態如何？考慮到以下情況，該組織每週日晚上10點安排合規檢查。因此，檢查會發現兩者之間的任何偏差並相應報告。\n在上面的示例中，在第 1 周和第 2 週之間有幾天沒有報告配置漂移，在第 3 周和第 4 週之間有幾天沒有報告配置漂移。這可能會導致嚴重的安全故障或擔憂。\nvRealize Operations 提供警報、策略和報告以根據這些基準驗證 vSphere 資源，每 5 分鐘提供一次 持續合規性 檢查警報。它提供了多種方法來根據定義的基準檢查合規性。這包括 VMware 推薦的建議、監管組織的基準測試，甚至使您能夠定義自定義策略。請注意，這些是 vRealize Operations 中可用的三個不同類別的基準測試，並且沒有相互依賴關係。它們僅出現在頁面上的順序如下所列，而不是首選項。它們的詳細信息如下：\nVMware SDDC 基準測試 這些是預定義的 VMware 基準，用於根據各種 VMware 定義的安全建議來監控環境。這些進一步分為以下三個子類別：\n vSphere 安全配置指南 vSAN 安全配置指南 NSX-T 安全配置指南  自定義基準 構建您自己的自定義基準測試策略並根據這些自定義策略檢查環境。\n監管基準 開箱即用的法規遵從性，特別是以下內容：\n CIS網絡安全標準 DISA網絡安全標準 FISMA 網絡安全標準 HIPAA 合規性 ISO網絡安全標準 PCI 網絡安全標準   儘管 VMware SDDC 基準測試為虛擬化環境的安全配置提供指導，但監管基準測試服務於不同的目的。監管基準和 VMware 基準都為相同的對象提供了類似的指導，但監管機構對要求進行了認證。\n例如，假設我是健康行業的消費者。因此，我有特定的安全要求。我怎麼知道我考慮的提供者是否有必要的安全措施？這就是監管基準派上用場的地方。這些是針對特定行業和要求的久經考驗的指南。因此，如果提供商符合 HIPAA 基準，我可以確信該提供商將滿足我的安全要求。\n現在想像一下採用 HIPAA 基準指南及其數百條建議，實施它，並不斷檢查以確保符合環境要求。這將需要大量的連續工作。接下來考慮實施 vRealize Operations 並啟用 HIPAA 基準測試。您將獲得一個顯示合規性狀態的儀表闆卡片。對於差異，您確切地知道需要修復什麼，並且可以立即修復。只需隨時與您的客戶分享報告，即可證明您符合要求。\n默認情況下，所有這些策略都未激活。對於 VMware SDDC 基準測試，您可以從同一頁面啟用它們。但是對於監管基準，您需要從存儲庫中啟用它們。\n 這些基準測試是根據 vRealize Operations 中定義的“策略”啟用的。這意味著您可以根據不同的基準檢查不同的環境。例如，考慮一個由兩個不同環境組成的組織。第一個環境需要符合HIPAA，第二個環境需要符合PCI。因此，為這兩個環境創建兩個不同的策略，然後根據這些環境及其各自的策略啟用基準測試。例如，考慮一家醫院。在醫院中，他們存儲需要符合 HIPAA 的環境的患者信息。同時，他們接受在線支付他們提供的服務。這需要一個需要符合 PCI 標準的環境。一種解決方案可能是構建一個由 vCenter 服務器管理的虛擬化環境，並設置兩個不同的集群來滿足上述要求。通過 vRealize Operations 集成，我們可以對這兩個集群應用兩種不同的策略，並分別應用兩種不同的基準測試。這將確保環境滿足所需的 HIPAA 和 PCI 合規性。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-5-cost-management/1.5.3-cost/","title":"3. 成本","tags":[],"description":"","content":"計算單位成本很重要，儘管它實際上並不存在。當您購買集群時，您沒有為每 GHz CPU 支付 1 美元。您為整個設備（包括安裝）支付了 100,000 美元。 1 美元僅用於計算目的，因此您不會以虧損告終。\n每個 VM 的單位成本取決於 過度承諾 比率, 因為硬件成本是一樣的. 如果集群 A 有 2x 過度承諾 比率, 那麼在相同的其他條件下，每個 VM 的成本要便宜 2 倍。\n過度承諾比率是您解釋更高價格的方式，因此必須提前向您的客戶披露。\n單位成本必須與 VM 相關聯，而不是與 ESXi 相關聯。它以 vCPU 表示，而不是以物理內核或 GHz 表示。您計劃打包多少個 vCPU 決定了每個 vCPU 的成本。\n單位成本取決於硬件和軟件。由於更大的硬件，新集群的成本應該更低。\n在相同的服務水平內，單價應保持不變。回到航空業的例子，價格不取決於飛機的類型。\n節約成本 從財務的角度來看，只有推遲新採購才能實現真正的成本節約。你不能節省你已經花費的，會計明智的。成本節約實際上是成本避免。\n我們舉一個簡單的例子：\n 3 年前，您在超融合基礎設施 (HCI) 解決方案上花費了 200 萬美元。 已經很好用了，現在剩餘容量為0%，需要購買新的HCI。這只會花費您 100 萬美元，因為 HCI 解決方案的成本在過去 3 年中下降了一半。 通過勤奮而艱鉅的回收過程，您設法釋放了產能。因此，您不需要花費 100 萬美元。您可以將此購買推遲到下一個財政年度。 您從這次填海中節省了多少：200 萬美元或 100 萬美元？  在會計方面，它只有100萬美元。儘管三年前 HCI 花費了您 200 萬美元，但具有相同容量的全新設備只需花費您 100 萬美元。在會計規則中，您不應該混合來自不同日期的數字，更不用說來自不同會計年度的數字。折舊在這裡不相關，因為成本基於重置成本。\n一百萬美元當然是 估計。避免或花費的實際成本取決於供應商的報價和您的談判技巧。請注意，實際成本遠高於 HCI 成本。額外的成本可能會超過硬件成本。您需要包括所有加載成本，例如數據中心設施、實施服務、備份存儲、管理服務、軟件許可、管理等。\n僅開墾就可以 不是 降低成本. 刪除筆記本中的文件可以節省多少錢？\n正確的。零。\n只有當它幫助您推遲購買新硬盤時，您才能真正節省成本。\n服務怎麼樣？我們喜歡將提高生產力稱為成本節約。儘管這提供了商業價值，但這並不是一項硬成本節約。這是一種沒有會計價值的軟收入。只有在推遲購買額外資源/員工的需要，或管理服務合同的價值下降時，才會發生硬性儲蓄。\n您可以通過關閉硬件電源來節省電力和冷卻。\n對於擁有大量基礎設施足蹟的大型組織，技術更新是降低成本的好方法。從 100 個機架減少到 50 個機架肯定會降低資本和運營成本。\nIT 需要領先於業務。在計算成本節省時，包括承諾的項目和未來的增長。您還應該考慮太小的 VM，因為應用程序團隊可能需要擴大它們。\n計算 CPU、RAM 和磁盤。如果可能，還包括網絡。計算起來比較困難，因為它本質上只是互連。對於這三個 IaaS 資源中的每一個，計算需求和恢復。對於要求，不要忘記包括所有成本。當 VM 需要 100 GB 時，它會轉化為更多，因為您將 DR、備份、快照等考慮在內。\n下表提供了一個示例。\n您需要為每個物理位置準備上表。僅僅因為您在新加坡擁有 10 TB 的 RAM 並不意味著亞美尼亞虛擬機可以使用它。\n優化成本 上述練習將有助於優化成本。當然，還有其他方法可以優化成本，因為成本涵蓋的不僅僅是容量。它涵蓋了人員、流程和架構。您可以通過提高流程效率來降低成本，通常是通過業務流程再造練習。您可以通過自動化提高流程效率來降低成本。例如。使用批准工作流刪除關閉的 VM。\n下表總結了您可以執行以優化成本的活動。\n小型集群具有更高的 HA 開銷，因此您可以通過整合它們來優化成本。\n複雜性是有代價的，但很難量化。例如，人為錯誤可能代價高昂，但您如何對其進行量化？\n請注意，標準化將降低複雜性。但這也意味著配置不夠靈活，會增加成本。\n簡化操作，例如不在同一集群中混合具有不同服務類別的 VM，將降低複雜性。但這也以更大的基礎設施為代價。 T 卹尺寸也是如此。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-4-configuration-management/1.4.3-plan-vs-reality/","title":"3. 計劃與現實","tags":[],"description":"","content":"您在生產中的實際配置應反映您當前的架構標準。多年來，您的架構或標準可能會發生變化，但應記錄在案。然後，您可以使用配置儀表板來比較實際和預期標準。如果它們不同，則其中之一是錯誤的，需要解決。\n標準使操作更簡單，並且通常是合規所必需的。例如，如果您有 VMware Tools 版本標準，您可以選擇一個版本作為標準，但您可以在您的環境中使用其他 2 個版本，因為升級需要時間。您可以創建一個餅圖來顯示 VMware Tools 版本的分佈。餅圖中的每個切片都計算特定值的出現次數。您應該只看到三個切片。如果您看到三個以上，那麼現實與您的標準不同。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.3-capacity-planning/","title":"3. 容量規劃","tags":[],"description":"","content":"對於 IaaS 或 DaaS，容量管理早在部署硬件之前就開始了。它從一個商業計劃開始，它決定了將提供什麼級別的服務。每個服務等級（例如金、銀、銅）都因服務質量而有所不同。這通常包括可用性（例如，黃金級為 99.99% 的正常運行時間，白銀級為 99.95% 的正常運行時間）、性能和安全性/合規性。這在之前的 SLA 中有介紹。\n上表是通用指南。作為 IT​​ 管理計劃的一部分，您可以幫助他們定義和決定每個服務等級。此計劃會話需要供應商輸入，因為您希望優化成本。使用供應商折扣和許可模式來補充計劃，而不是規定計劃。\n在計劃會議結束時，您可能會得到這樣的結果。\n在此示例中，IT 管理部門決定僅提供兩種業務產品：\n 白銀：33% 的折扣和 2% 的性能損失 銅獎：67% 的折扣和 5% 的性能損失  Kim Ramirez 建議，從定價心理學的角度來看，提供黃金可能是有意義的，期望沒有人會購買它，它只會起到銀色看起來很划算。這也解決了一個潛在的困惑，如果客戶只看到銀牌和銅牌優惠，他們會想知道金牌在哪裡。\n質量會產生成本，而成本反過來又會影響價格。 Gold VM 的每 vCPU 和每 GB 內存的價格更高，因為它具有更高的服務質量。需要規劃合適的定價模型。 Silver Tier 上 16 個 vCPU VM 的成本確實比 Gold Tier 上 1 個 vCPU VM 的成本高。這是您想要驅動的行為。合適的層級，合適的尺寸。\n如果您希望您的客戶提前調整大小，那麼 64 個 vCPU 虛擬機的價格需要是 1 個 vCPU 虛擬機價格的 64 倍以上。如果定價模型是一條簡單的直線，則不會有小規模的動機，也不會因過度提供而受到懲罰。您最終將在生產中強制調整規模，這是一個昂貴且耗時的過程。\n參考 成本管理 的定價示例，因為成本和價格是相輔相成的。\n因為你過度使用，所以你冒著爭用的風險。要將其最小化，一種方法是控制 VM 的大小。您希望避免龐大的虛擬機支配過度使用的 ESXi 主機。下表提供了與每個服務類別關聯的大小限制示例。\n相比之下，EC2 VM 的 AWS 免費套餐 只有 1-2 個 vCPU、1 GB RAM，因為它基於 t2.micro 和 t3.micro。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.3-plan-monitor-troubleshoot-optimize/","title":"3. 計劃 監視器 故障排除 優化","tags":[],"description":"","content":"績效管理有四個不同的過程：\n計劃 這是您設定績效目標的地方。確保目標與業務可交付成果一致。\n當您設計該 vSAN 時，您考慮過多少毫秒的磁盤延遲？例如，您將目標設置為在 VM 級別（不是 vSAN 級別和單個虛擬磁盤級別）測量的 10 毫秒。\n監視器 這是您比較計劃與實際的地方。這就是為什麼必須明確定義目標的原因。現實是否與您的架構應該提供的內容相匹配？如果沒有，那麼你需要修復它。\n故障排除 當現實比計劃更糟或出現問題時，您會這樣做，而不是在有投訴時。您想花時間進行故障排除，因此最好主動進行。並且悄悄地，沒有人催促你獲得結果。\n優化 作為監控的一部分，您可能不會發現問題，但您會發現使性能更好的機會。新版本提供性能改進是很常見的。同樣，您要主動這樣做，而不是等待投訴發生。 監視器 是 什麼，故障排除 是 為什麼。監視器是 標準操作程序 (SOP) 的一部分，故障排除是一個臨時的、按需的過程。借助預定義的儀表板和警報，可以由 1 級團隊執行監控，而故障排除則需要專家團隊。專家組也是設定Level 1 團隊使用門檻的團隊。故障排除涉及日誌分析，因為許多系統不會生成完整的指標，並且一個常見問題背後可能有許多不同的原因。最後，實際的根本原因甚至可能與問題沒有密切關係。\n當您區分監控和故障排除時，日常操作就會變得更加系統化。下表顯示了差異：\n    监视器 故障排除     問題 問題是什麼？ 為什麼會發生？問題的真正原因是什麼？   自然 主動 反應式   櫃檯 一般1個櫃檯。而這個計數器也是SLA。這是您或您的客戶檢查的第一個櫃檯。 總是有很多櫃檯。有多層計數器，一個影響另一個。   SLA 是的，這意味著 SLA 適用 是的。如果違反 SLA，事情就變得很緊急。   關鍵績效指標 是的，這意味著您在監控中使用 KPI 而不是單個指標。 是的，但作為起點。然後深入研究支持指標，這些指標通常是原始指標。   指標 初級計數器。作為 SOP 的一部分，您主動檢查它 二級計數器。您只檢查主要是否達到閾值。   頻率 每天執行。作為 SLA 的一部分，黃金級將比青銅級具有更高的定期監控頻率。 一經請求。   時間線 現在和未來。您考慮未來的負載並進行預測。 現在。未來無關緊要。你的重點是撲滅火災或潛在的火災。    在大多數情況下，最好使用 5 分鐘的間隔進行監控，因為 1 分鐘的不良指標可能不會對業務產生影響。另一方面，故障排除可能需要每秒粒度。但是，如果您的補救措施相同，這並不總是意味著您需要查看每個計數器。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/","title":"運行管理","tags":[],"description":"","content":"本書的第一部分解釋了 VMware 雲架構背景下的運營管理藝術。這是第 2 部分的先決條件。\n你建築師 SDDC. 但是作為業務成果，您交給 CIO 的是 IaaS. 一個是系統，一個是服務。我們可以根據生產中的實際結果來評估架構的好壞。 它會導致消防和指責風暴嗎？或者您是否有一個和平行動，其中警報有意義且可操作？\n 第 1 - 章概述    1. 基於投訴的運營   2. 目的驅動架構   3. 多雲基礎設施運營   4. 開始思考如何結束   5. VCDX 關係到 VCOX   6. 餐廳類比   7. 服務水平協議   8. 支柱、流程和人員   9. 洞察力和警報    第 2 - 章績效管理    1. 雲管理員生活中的一天   2. 3個領域   3. 計劃 監視器 故障排除 優化   4. 爭用與使用   5. 性能與容量   6. 性能 SLA   7. 關鍵績效指標和服務水平協議   8. 深度和廣度   9. 領先指標   10. 基線分析   11. 優化性能   12. 根本原因分析    第 3 - 章容量管理    1. \u0026#34;好處\u0026#34; 勸告   2. 端到端容量   3. 容量規劃   4. 需求模型   5. 分配模型   6. 可用容量   7. 投影   8. 峰值利用率   9. 存儲容量   10. 優化產能   11. 開墾   12. 調整大小    第 4 - 章配置管理    1. 概述   2. 審核流程   3. 計劃與現實    第 5 - 章成本管理    1. 敢比較   2. 價格   3. 成本    第 6 - 章合規管理    1. 概述   2. 網絡安全方法   3. 持續合規   4. 政策如何運作   5. 監管基準   6. 自定義基準   7. 查看您的結果    第 7 - 章可用性管理    1. 獨立系統”   2. 多組分系統   3. 可用性狀態   4. 災難避免和恢復    "},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-2-cpu-metrics/2.2.4-quiz-time/","title":"4. 小測驗時間!","tags":[],"description":"","content":"到現在為止，我希望您意識到 4 個關鍵對象（來賓操作系統、ESXi 和集群）中的各種“利用率”衡量指標各不相同。每個人都有自己獨特的行為。因此，您可以正確地假設它們不能很好地跨堆棧映射。讓我們用一個例子來測試你的知識。\n來賓操作系統 仔細查看以下圖表。這是我運行 Windows 10 的物理桌面。 CPU 有 1 個插槽 4 核 8 線程，因此 Windows 可以看到 8 個邏輯處理器。您可以看到 Microsoft Word 沒有響應，因為其窗口變灰。任務管理器通過顯示 3 個文檔都沒有響應來確認這一點。 Word 也消耗非常高的功率，如功率使用列中所示。\n它變得無響應，因為我在 400 頁的文檔上打開了更改跟踪並刪除了數百頁。它必須做很多處理，它不喜歡那樣。不幸的是，在那之後我無法重現該問題。\n在操作系統方面，Windows 反應良好。我能夠關閉所有其他應用程序，並啟動任務管理器和 Snip 程序。我懷疑是因為 Word 不會消耗所有 CPU。因此，如果我們在 Windows 級別進行跟踪，我們將 不會 意識到存在問題。這就是為什麼如果要監視應用程序，進程級監視很重要的原因。具體到掛起狀態，我們應該監控狀態而不是簡單的CPU消耗。\n在 Windows 任務欄中，除了 Microsoft Word 和任務管理器之外，沒有其他應用程序在運行。你能猜出為什麼 Windows 級別的 CPU 利用率高於其進程的總和嗎？我對為什麼 Windows 顯示 57% 而 Word 顯示 18.9% 的猜測是 Turbo Boost。單個進程級別的 CPU 計數器不會考慮它，而操作系統級別的計數器會考慮。\n我把它放了 15 分鐘，什麼都沒有改變。所以並不是說它需要更多時間來處理更改。我懷疑它遇到了 CPU 鎖定，因此運行 Microsft Word 的 CPU 正在 100% 運行。由於 Windows 總體上僅報告 57%，因此跟踪 Windows CPU 中的峰值很重要。這就是 vRealize Operations 在 VM vCPU 中提供峰值的原因。\n虛擬機與 ESXi 仔細查看以下圖表。必要時放大。\n上面的 vCenter 圖表 1 顯示了 VM 利用率計數器。這是一個帶有 24 個 vCPU 運行受控 CPU 測試的大型 VM。電源管理是固定的，因此它以標稱時鐘速度運行。這消除了 CPU 頻率縮放因子。\n它從 50% 的“利用率”開始，每個 vCPU 固定到不同的物理核心。然後它會隨著時間緩慢上升，直到達到 100%。\n你能弄清楚為什麼三個計數器的上升方式不同嗎？他們測量什麼？\n現在讓我們看看對父 ESXi 的影響。它只有一個 VM，但 VM vCPU 與 ESXi 物理內核匹配。 ESXi 以 50% 的“利用率”開始，然後隨著時間的推移緩慢上升，直到達到 100%。\n你能弄清楚為什麼 3 個計數器的上升方式不同嗎？他們測量什麼？像往常一樣，答案可以在 部分 4.\nESXi 利用率與爭用 ESXi“利用率”與 ESXi“爭用”無關。 4 個突出顯示的區域是衡量指標不相關的例子，其中一些甚至相反。你能猜到為什麼嗎？\n像往常一樣，回答 部分 4.\n  由\u0026hellip;提供 Valentin Bondzio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/2.1.4-resource-management/","title":"4. 資源管理","tags":[],"description":"","content":"您需要了解 vSphere 用於管理共享資源的以下概念：\n 資源預留 資源限制 資源共享 使用權  資源預留代表一種保證。它會影響提供程序（例如 ESXi），因為這是進行預留的地方。但是，它在 CPU 和 RAM 上的工作方式不同。\nCPU 如果 VM 不使用該資源，那麼就 VM 而言，它不會發揮作用。它僅在 VM 實際使用它的期間強制執行。\nRAM 如果尚未使用，則不會生效。這意味著 ESXi 主機不會為 VM 分配任何物理 RAM。但是，一旦 VM 請求內存並為其提供服務，就會保留物理 RAM。從那時起，即使虛擬機不再使用物理 RAM，ESXi 也會繼續保留物理 RAM。從某種意義上說，儘管虛擬機閒置了好幾天，頁面還是被鎖定了。消耗的測量指標包括這個以反映這種行為。即使它沒有被使用，也沒有其他虛擬機可以觸及它。\n 不應使用限制，因為它對來賓操作系統不可見。結果是不可預測的，並且可能造成比減少 VM 配置更糟糕的性能問題。對於 CPU，它會影響 CPU Ready 計數器。對於 RAM，在 VMX 文件中，這是 sched.mem.max.\n與靜態配置的預留和共享不同，使用權是動態計算的。它考慮了限制、保留和份額。對於 Shares，它當然必須考慮在同一主機上運行的其他 VM 的 Shares。虛擬機不能使用超過 ESXi 授權的內容。\nReservation, Share 和 Limit 是相對靜態的。除非手動更改，否則它們不會波動。因此，它們的行為更像是一種財產，而不是一種衡量指標。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-7-availability-management/1.7.4-disaster-avoidance-and-recovery/","title":"4. 災難避免和恢復","tags":[],"description":"","content":" 本頁出租。這意味著我們需要一位貢獻作者！\n 處理災難恢復時有 3 個主要用例：\n避災 您可以通過在延伸的 vSphere 集群上執行遠程 vMotion 來避免災難。\n 你有足夠的 WAN 帶寬嗎？ vMotion 是否在預期時間內完成？ - 如果不是，是什麼原因造成的？ vMotion 期間的性能影響是什麼？由於管道是共享的，這也會影響其他虛擬機。  DR 測試 您正在按照監管機構或內部業務連續性計劃的要求進行測試。您的生產 VM 仍在運行，因此您需要對網絡進行冒泡。\n 您在恢復站點上是否有足夠的資源？ 是否在預期時間內完成？如果不是，是什麼原因造成的？  DR 實際 你正在做實際的恢復。這可以是計劃的或計劃外的。\n 你有足夠的資源嗎？ 對目標集群和數據存儲有什麼性能影響？  在大型環境中，您可以讓多個集群參與主動/主動 DR，相互保護。這會創建複雜的關係，尤其是當您有數百個業務應用程序並且它們跨集群時。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.4-how-the-policies-work/","title":"4. 政策如何運作","tags":[],"description":"","content":"在介紹了 vRealize Operations 中提供的內容之後，讓我們討論這些策略的工作原理。他們在做什麼？所有這些策略的基礎是某些配置和警報設置。根據官方文檔，“vRealize Operations 中的所有合規性標準，包括您定義的任何標準，都基於警報定義。僅計算合規性子類型的警報定義。自定義記分卡可以監控用戶定義的警報。” [ ^1]。\n例如，“ISO 安全標準”以許多其他方式檢查以下內容：\n 在 ESXi 主機上配置 SSH 服務以實現合規性 通過禁用SSH服務和shell服務並啟用鎖定模式來限制對主機的遠程訪問 在 vCenter Server 中提供複雜的密碼 在 vCenter Server 中配置鎖定  所有這些配置都在環境中檢查。根據環境中的這些檢查定義症狀，並最終為這些症狀設置警報。\n如果有任何警報，則表示設置策略中存在錯誤配置，需要更正。\n這也導致定義您自己的自定義症狀的範圍 -\u0026gt; 警報 -\u0026gt; 基準.\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.4-demand-model/","title":"4. 需求模型","tags":[],"description":"","content":"需求反映了生產中的現實，因為它基於集群和數據存儲中資源的實際需求。它默認啟用，無需任何配置，無法禁用。\n需求大於消耗您容量的活動負載。活動負載是可見的需求，您可以使用利用率指標對其進行監控。有不可見的需求，因為它目前沒有使用。\n使用 vRealize Operations 中的分配模型和緩衝區設置來滿足這種無形的需求。請注意，緩衝區在可用性之後應用。\n突然的需求 這可能會在共享環境中造成嚴重破壞。一組要求很高的 VM 可以共同影響集群或數據存儲的整體性能。這方面的一個例子是年度銷售或股市崩盤。在這種情況下，容量團隊應設置適當的過載比率並通過分配驅動，因為大部分時間需求較低。\n潛在需求 許多關鍵虛擬機都受到災難恢復的保護。在 DR 演習或實際災難期間，此負載將“喚醒”並消耗掉。您應該將 Site Recovery Manager 計劃納入您的能力範圍。\n潛在需求 許多新配置的 VM 需要時間來滿足其全部預期需求。數據庫達到最大規模，用戶群達到目標，功能完成需要時間。新配置的 VM 往往處於空閒狀態（可能是幾個月）並且可能會突然增長。當這種情況發生時，將導致需求增加。\n未滿足的需求 它分為兩部分：VM 內部和 VM 外部。\n如果 VM 過小，未滿足的需求將不會對底層基礎架構可見。除非這是有意為之，否則在集群容量監控中包含小型虛擬機是明智之舉。\n未滿足需求的可見部分成為 IaaS KPI 和 SLA 的一部分，在性能管理章節中進行了介紹。\n 在容量背景下計算需求時還有另外兩個考慮因素。\n 資源預留 資源限制  尚未消耗的預留會影響容量，但不會影響性能。使用餐廳類比，如果您的所有餐桌都已預訂，但只有 20% 出現，則剩餘容量為 0，但可以輕鬆為所有客戶提供服務，實際需求僅為 20%。\nCPU 和內存的行為不同，因為當預留持有者不使用 CPU 預留時，它不會生效。\n需要考慮限制，因為需求不能超過強制限制。好的部分是需求計數器已經考慮到了這一點。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.4-contention-vs-utilization/","title":"4. 爭用與使用","tags":[],"description":"","content":"在 VM 層，我們關心特定的 VM 是否被平台很好地服務。從 VM 所有者的角度來看，其他 VM 無關緊要。因此，這裡的關鍵計數器是 VM 爭用。基礎設施指標無關緊要。只有當我們對沒有爭用感到滿意時，我們才能繼續檢查 VM 的大小是否正確。大多數人首先檢查利用率，因為他們習慣於在物理基礎設施中進行監控。在虛擬環境中，我們應該首先檢查爭用。\n大多數原始指標可以分為 3 種類型：\n 他們衡量一些 壞（例如爭用、延遲） 他們衡量一些 好的（例如利用率、消費） 它們說明某些內容（例如庫存、配置）  因此，消費，也稱為利用率，是一系列指標。它有許多不同的名稱（IOPS、吞吐量、使用情況、需求、活動等）。它的對立面是爭用類型的指標。利用率是計數器容量系列（剩餘容量、剩餘時間、VM 剩餘、推薦大小）的主要來源。\n競爭是性能的主要計數器系列，而利用率是容量的主要計數器系列。 Performance \u0026amp; Capacity 以不同的方式使用這兩種類型的計數器。了解每個需求對於優化性能和容量至關重要。\n大多數人關注 利用率，因為他們擔心如果它很高，就會發生錯誤。那個“東西”就是爭論。爭用表現為不同的形式。它可以是隊列、延遲、丟失、丟棄、中止、上下文切換。\n下圖顯示了三種不同的場景\n 你認為會發生什麼。您從理論上講，只有在利用率高時才會發生爭用，而未使用的容量充當緩衝以防止發生未滿足的需求。 在大多數環境中實際發生的情況。由於次優配置或限制，即使利用率不高，需求也未得到滿足。 如果您的環境得到優化，會發生什麼。您的利用率非常高，但仍將未滿足的需求保持在承諾的 SLA 內。  不要將 “超高” 利用率指標混淆為性能問題。只要沒有隊列或爭用，高利用率不會影響性能。僅僅因為 ESXi 主機正在經歷膨脹、壓縮和交換，並不意味著您的 VM 存在內存性能問題。您可以通過主機為其 VM 提供服務的程度來衡量主機的性能。雖然它與 ESXi 利用率有關，但性能指標根本不基於利用率。它基於爭用指標。\n利用率不是性能的計數器。這是容量的計數器。利用率越高，完成的工作就越多，因此性能就越好。 100% 的利用率實際上是最好的性能，只要沒有爭用。由於我們可以明確地跟踪爭用，性能計數器成為次要的，支持計數器。\n下圖顯示了典型 IaaS 中的所有層，重點是消費者端。\n爭用高於利用率，因為這是您應該推動運營的因素。正如Mark Achtemichuk 在[這篇文章](https://blogs.vmware.com/vsphere/2015/11/vcpu-to-pcpu -ratios-are-they-still-relevant.html)，由競爭驅動。對於每一層，您都有一組指標。黑線顯示爭用是性能的主要計數器，而利用率是容量的主要指標。\n綠線顯示爭用計數器通過顯示需要多少額外容量來為容量提供有價值的輸入。例如，應該使用 CPU 中的隊列數來確定要添加的 CPU 數量。\n藍線表示下層的競爭直接影響上層的性能。例如，如果來賓操作系統遇到磁盤延遲，應用程序將感受到影響。這可能會對頂層產生漣漪效應。\n紅線不是實線，因為它顯示了一種誤解。如果爭用 = 0，那麼 100% 的利用率實際上是最高性能。如果我們無法衡量爭用情況，則添加緩衝區（例如 90% 的利用率），因為隊列往往會以高利用率發展。另一方面，在低利用率的情況下性能可能很差。很多事情都會導致這種情況。這裡只是一些。\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/","title":"衡量指標","tags":[],"description":"","content":"第 2 部分（衡量指標）深入探討了您最常使用的關鍵衡量指標，應將其視為第 3 部分的先決條件。\nvRealize Operations 附帶了數以千計的衡量指標和屬性，涵蓋 vSphere、vSAN、客戶操作系統等中的對象。如果我們一個一個地取一個對象，用衡量指標來記錄衡量指標，那就是既枯燥又混亂。您很可能會感到失望，因為它沒有解釋您的問題是如何解決的。\n本文檔從您開始。它側重於您在運行多雲操作時嘗試解決的問題。它查看所有用例並從那里分解重量指標，這有助於您理解為什麼重量指標以這種方式分層。 vRealize Operations 從受監控的系統中獲取原始計數器，並製定更能滿足您的操作需求的更高級別的計數器。\n 第 1 - 章概述    1. 衡量指標的細微差別   2. 來賓操作系統與虛擬機   3. 隨著時間的推移聚合 vs 更高級別對象的聚合   4. 資源管理   5. ESXTOP    第 2 - 章 CPU 衡量指標    1. 來賓操作系統   4. 小測驗時間!    "},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/2.1.5-esxtop/","title":"5. ESXTOP","tags":[],"description":"","content":"我從 esxtop 和 vRealize Operations 中了解了計數器。對我來說，esxtop 提供了原始指標，並深入了解 ESXi 如何進行會計處理。在 esxtop 中，您可以看到物理 (ESXi) 和虛擬 (world) 的計算方式不同。 esxtop 上有很多很棒的資料，尤其是來自 Valentin Bondzio，他在那裡深入解釋了計數器。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.5-regulatory-benchmarks/","title":"5. 監管基準","tags":[],"description":"","content":"讓我們談談開箱即用的監管基準。如前所述，vRealize Operations 提供了下面提到的基準測試：\n 互聯網安全中心 (CIS) 安全標準 國防信息系統局 (DISA) 安全標準 聯邦信息安全管理法案 (FISMA) 安全標準 1996 年健康保險流通與責任法案 (HIPAA) 合規性 ISO網絡安全標準 支付卡行業 (PCI) 安全標準  需要注意的有趣一點是，所有這些基準測試都適用於同一組對象，主要是 vCenter、ESXi、VM、分佈式端口組和分佈式虛擬交換機。你可能會問，如果它們在相同的環境中工作，安全設置相似，它們有什麼不同？\n這些監管基準由監管機構針對特定用例開發和認證。假設 ESXi 主機有 100 個配置要進行。其中一個基準可能需要配置其中的 60 個，另一個可能需要 60 個要求的另一種組合。例如，假設一個基準測試只需要“root”密碼需要設置一個到期時間。但另一個要求還需要根據定義的標准設置密碼複雜性。\n您可以應用所有基準的所有建議並遵守所有這些建議。合規性檢查的目的是根據監管基准進行認證，以便每個人都可以確保滿足要求。如果沒有合規性和認證，只需要信任口耳相傳。對基準的遵守提供了信任和真實性。\nCIS網絡安全標準 Internet 安全中心 (CIS) 控制和 CIS 基準提供 Internet 安全的全球標準，並且是保護 IT 系統和數據免受攻擊的公認全球標準。 vRealize Operations 提供警報、策略和報告以根據 CIS 強化指南 1 驗證 vSphere 資源。使用此內容驗證以下資源：\n ESXi 主機 虛擬機  CIS 標準提供了兩種不同的推薦區域，手動和自動。以下是可以自動化的 CIS 安全標準檢查的配置示例：\n 確保為每個 VM 配置單個鹽的默認值。默認情況下，salting 處於啟用狀態（Mem.ShareForceSalting = 2）並且每個 VM 都有不同的 salt。這意味著頁面共享不會發生在 VM 之間（VM 間 TPS），而只會發生在 VM 內（VM 內）。 確保NTP時間同步配置正確。 確保 ESXi 主機防火牆配置為限制對主機上運行的服務的訪問。 確保禁用託管對象瀏覽器 (MOB)：MOB 主要用於調試 vSphere SDK。由於沒有訪問控制，MOB 也可以用作獲取有關作為未授權訪問目標的主機的信息的方法。 確保不要使用默認的自簽名證書進行 ESXi 通信。 確保 SNMP 配置正確：如果 SNMP 配置不正確，包含敏感信息的監控數據可能會被發送到惡意主機，用於幫助利用該主機。 如果未使用，請確保未配置 dvfilter API：如果 dvfilter 網絡 API 已啟用並在將來配置，攻擊者可能會嘗試將 VM 連接到它，這可能會提供對主機上其他 VM 網絡的訪問。 確保在將主機添加到 Active Directory 時使用 vSphere Authentication Proxy：如果您將主機配置為使用主機配置文件加入 Active Directory 域，則 Active Directory 憑據將保存在主機配置文件中並通過網絡傳輸。為避免在主機配置文件中保存 Active Directory 憑據並避免通過網絡傳輸 Active Directory 憑據，請使用 vSphere Authentication Proxy。 確保禁用 VDS 運行狀況檢查：一旦啟用了 vSphere Distributed Switch 運行狀況檢查，它就會收集包含有關 host#、vds#port# 的信息的數據包，攻擊者會發現此信息很有用。  CIS 安全標準執行更多此類檢查，有關詳細列表，請從其 下載基準 網站.\nDISA網絡安全標準 DISA 隸屬於國防部 (DoD)，是一個作戰支援組織。不遵守 DISA 發布的指南可能會導致組織被拒絕訪問 DoD 網絡。此合規性包驗證以下資源的合規性：\n vCenter ESXi 主機 虛擬機 分佈式端口組 分佈式虛擬交換機  來源: VMware 虛擬市場\nFISMA网络安全标准 FISMA 是美國立法，它定義了保護政府信息、運營和資產免受自然或人為威脅的綜合框架。此合規性包驗證以下資源的合規性：\n vCenter ESXi 主機 虛擬機 分佈式端口組 分佈式虛擬交換機  來源: VMware 虛擬市場\nHIPAA 合規性 HIPAA 提供數據隱私和安​​全條款以保護醫療信息。適用於 HIPAA 的 vRealize Operations 合規性軟件包擴展了 vRealize Operations 的 SDDC 合規性功能。此合規性包驗證以下資源的合規性：\n vCenter ESXi 主機 虛擬機 分佈式端口組 分佈式虛擬交換機  來源: VMware 虛擬市場\nISO網絡安全標準 ISO/IEC 27001 是 ISO/IEC 27000 系列標準中最著名的標準，為信息安全管理系統 (ISMS) 提供了要求。此合規性包驗證以下資源的合規性：\n vCenter ESXi 主機 虛擬機 分佈式端口組 分佈式虛擬交換機  來源: VMware 虛擬市場\nPCI 網絡安全標準 PCI 安全標準強化指南解決了對消費者支付信息日益增長的威脅。 PCI 對於接受、處理或接收付款以預防、檢測和響應可能導致違規的網絡攻擊的公司非常重要。此合規性包驗證以下資源的合規性：\n vCenter ESXi 主機 虛擬機 分佈式端口組 分佈式虛擬交換機  來源: VMware 虛擬市場\n  來源: VMware 虛擬市場\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.5-allocation-model/","title":"5. 分配模型","tags":[],"description":"","content":"默認情況下，分配模型是 不 啟用的，因為過量使用率因客戶而異。您應該適當地配置它以考慮與該集群相關的所有類型的需求。通過使用兩者，您可以考慮兩種輸入（真實需求和非真實需求）。\n分配的下一個用例是演示文稿和報告。通常有一些限制，例如合同義務或 SLA，要求容量不超過商定的比率。請注意，這些限制通常是非技術性的。\n一些客戶喜歡根據過度使用來計劃購買。確定適當的過度使用率，這是用於預測未來利用率的一個因素。過度使用率旨在提供對利用率的粗略估計。例如，4:1 的 CPU 過量使用率意味著平均每個 vCPU 只會以 25% 的利用率運行。\n分配模型有 3 個主要限制：\n虛擬機大小 過量使用比率中不考慮 VM 大小。它假設調度兩個巨大的虛擬機就像調度許多小型虛擬機一樣簡單。與幾個大型虛擬機相比，ESXi 調度程序可以處理更多的小型虛擬機，尤其是當它們在不同時間達到峰值時。\n過度配置的虛擬機 過度配置 VM 的問題很常見，尤其是在大型 VM 中。在生產環境中很難解決這個問題，因為它涉及停機時間，你有責任證明它不會影響性能。從政治上講，這可能會使確定 VM 大小並證明成本合理的團隊看起來很糟糕。最好的方法是首先通過使用累進定價來預防問題。這在本書的 定價 部分進行了描述。\nIaaS 工作負載 不考慮不採用 VM 形式的 IaaS 工作負載。 VMkernel、vSAN、NSX、vSphere Replication 和 vMotion 都需要考慮。另一方面，包含代理虛擬機是因為它採用虛擬機的形式，儘管它傾向於使用本地數據存儲。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.5-performance-vs-capacity/","title":"5. 性能與容量","tags":[],"description":"","content":"容量和性能之間的關係因對象而異。消費者對象（例如 VM、K8S Pod）與提供者對象（例如 vSphere 集群、vSAN 集群）具有不同的性質。對於提供者對象，性能始終是自下而上的。您從在提供程序對像中運行的 VM 開始，然後聚合指標。容量總是自上而下的。你先看大局，然後再深入。例如，您從 vSphere 集群開始，然後深入到 ESXi。\n對於 IaaS 提供商，下表說明了性能和容量的差異。\n容量有 HA、Buffer、Overhead 和 Reservation。這些都與性能監控無關。在性能中，您不關心它們，因為性能與現實有關（實際發生的情況）。它們可能會導致性能問題，但不會在性能指標中考慮。\n性能和容量的混淆在於利用率。它們共享相同的原始計數器，但使用方式不同。性能是絕對的（實際值），容量是相對的（取決於設置）。下表顯示瞭如何不同地使用利用率。\n以 ESXi Memory Consumed 為例，它是 ESXi 的主要利用率計數器。\n 從性能監控來看，100% 消耗不僅好，而且完美。您正在最大化緩存。只要沒有膨脹和爭用，這正是您想要的。 從容量監控來看，100% 消耗並不好，因為這意味著沒有更多剩餘容量。您需要停止供應新負載並開始購買新硬件的過程。此外，100% 是在扣除 HA 和緩衝區後測得的可用容量。它不是根據絕對體能來衡量的。  讓我們舉一個例子來看看爭用和利用率有何不同。下面以集群對象為例。有兩個計數器，每個計數器都以百分比表示。\n您希望利用率盡可能高，因為您已經為硬件付費了。因此，您從 0% 開始，但希望盡可能向上移動。\n你希望你的表現保持在 100%。你不希望它向下移動很​​遠。事實上，10% 的降級可能很重要，因為這可能意味著 10% 的 VM 群體受到影響。在具有 2000 個虛擬機的大型集群中，這可能意味著 200 個虛擬機。\n性能取決於服務等級。 Gold 集群可能與 Bronze 集群具有相同的硬件，但在 Gold 集群上運行的 VM 面臨的爭用較少，因此它們的性能更好。\n讓我們在現實生活中看看上面的內容。這是一個在過去 7 天內經常出現高利用率的集群。您可以清楚地看到峰值。集群有 14 個 ESXi 主機。\n這裡的一個合乎邏輯的問題是對 VM 性能的影響是什麼？他們得到了他們要求的 CPU 嗎？該集群有 550 個正在運行的 VM。\n這就是爭用計數器的用武之地。一個跟踪問題的深度，另一個跟踪問題的廣度。\nCPU Ready \u0026gt; 1% 的虛擬機計數器百分比顯示出幾乎相同的模式。我們可以看到很大比例的 VM 人口受到影響。\n第二個計數器跟踪深度，給出集群中任何 VM 經歷的絕對最差 CPU 就緒值。\n"},{"uri":"/vmware-operations-guide/zh-tw/dashboards/","title":"儀錶盤","tags":[],"description":"","content":"最後一部分介紹儀表板。在這 3 個部分中，這將是每個 vRealize Operations 版本中變化最大的部分。\n將來，我們應該添加報告和警報，因為這三個本質上是 vRealize Operations 與用戶通信的方式。渴望接受挑戰？\n 第 1 - 章設計注意事項   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.6-custom-benchmarks/","title":"6. 自定義基準","tags":[],"description":"","content":"您可以通過單擊“添加自定義合規性”卡片來添加自定義基準。您可以創建一個新的或導入一個現有的。這不僅允許定義自定義基線，還允許它在其他環境中進一步重用。\n為自定義基線提供名稱並添加可選描述。\n接下來，選擇要作為合規性檢查的一部分啟用的警報定義。您可以單獨檢查所需選項或從基線開始並進一步自定義選項。您可以通過選擇“定義器”過濾器來選擇基線。\n選擇警報後，選擇將啟用合規性檢查的策略。\n這將定義並啟用自定義基線。同樣，將運行初始評估並針對它生成報告。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.6-usable-capacity/","title":"6. 可用容量","tags":[],"description":"","content":"正如本書前面提到的，可用性 是一個僅適用於容量的概念。沒有可用的性能。可用容量是減去總容量和容量團隊決定排除的部分後得到的非實數。這部分通常考慮可用性、隱身要求和輔助要求。這個數字不是真的，因為實際可用容量可能會超過這個數字。\n可用性 對於硬件來說，這意味著增加的部分是為了滿足不可用期。常見示例是磁盤中的 RAID、存儲陣列中的熱備件和 vSphere 集群中的 vSphere HA。許多硬件部署成對出現（例如網絡交換機），因為其中一個節點用於可用性，而不是容量。\n在 vSphere Cluster 中，您通常會設計至少一台主機作為備份，以便在不減少服務的情況下進行維護和升級。當這個宿主參與現實時，你在你的能力範圍內將它排除在外。 vRealize Operations 從可用容量中排除 HA。\n輔助需求 這通常是開銷，可能發生在使用者級別（例如虛擬機快照）或提供者級別（例如 vSAN 重新同步、VMkernel CPU）\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.6-performance-sla/","title":"6. 性能 SLA","tags":[],"description":"","content":"谷歌“性能SLA”VMware，你只會找到幾篇相關的文章。字符串性能 SLA 必須在引號內，因為它不是性能和 SLA，而是 性能 SLA。是的，我正在尋找帶有性能 SLA 字樣的網頁。如果您只是在沒有報價的情況下使用谷歌搜索 VMware Performance SLA，您將得到許多不相關的結果。\n我只是在 2021 年 3 月 14 日再次嘗試。 Google 返回的結果不到 20K，高於 2015 年 10 月的 1.6K 結果。前 10 個如下所示。注意其中 8 個來自我的博客、書籍或演講活動。來自 Sunny Dua 的一項，談論我們提出的相同性能 SLA 概念，出現在前 10 名。最後一項來自 Michael Webster，他曾在 VMware 工作幾年前。\n我檢查了前 10 個結果。除了我自己的文章，谷歌只返回了少數相關文章。如果您仔細閱讀，其餘的實際上並不相關。相關文章提到了性能 SLA，但沒有定義和量化性能 SLA 是什麼。如果某件事沒有量化，那就是主觀的。如果界限不明確，就很難快速、一致地與客戶達成正式協議。如果您與客戶，尤其是付費客戶存在分歧，請猜猜誰會贏。\n可用性 SLA 可在停機時為您提供保護。性能 SLA 在出現性能問題時為您提供保護。\nvSphere 的性能 SLA 在下表中定義：\n使用典型的 30 天月份\n你知道為什麼你應該只使用 CPU Ready 而從 Performance SLA 中排除 CPU Co-Stop 和 CPU Contention 嗎？\n我花了很多年才意識到這個錯誤。\n答案在本書末尾的 第 4 部分：測驗答案 中。\n績效管理的全部意義在於能夠_在客戶抱怨之前_知道問題。如果您不能在客戶之前看到問題，那麼您就沒有進行績效管理。 manage 這個詞意味著積極主動。被動等待警報或投訴觸發故障排除過程不是管理。 Proactive 需要一個比外部正式商定的 SLA 更嚴格的內部閾值。這就是 KPI 的來源。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/1.6.7-checking-the-result/","title":"7. 查看您的結果","tags":[],"description":"","content":"如下圖所示，默認的合規頁面清楚地展示了環境對不同策略的合規狀態。 “合規卡”顯示基於合規基準的環境狀態。\n要查看有關某個主題的更多詳細信息，請單擊該主題的卡片。這為我們提供了環境的詳細視圖。\n請注意“合規警報列表”下的鏈接。這為我們提供了違規的詳細信息。單擊鏈接會將我們帶到特定的警報詳細信息。\n另請注意，對於任何選定的對象，我們都可以從“合規性”選項卡中檢查與該對象相關的合規性。\n報告認為，我們需要進一步糾正這些問題，更好地做好合規工作。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.7-projection/","title":"7. 投影","tags":[],"description":"","content":"預測的準確性取決於數據量和周期長短。具有季度末高峰的工作負載自然至少需要 6 個月才能準確。如果有足夠的數據，vRealize Operations 將考慮 6 個月以上的數據。雖然它對最近的數據給予了額外的重視，但如果出現突然但持續時間短的變化，它可能不足以影響預測。\n短期和一次性的瞬態峰值不應影響容量規劃，因此在預測中影響可能並不明顯。\n持續的峰值將持續更長時間並影響預測。如果峰值不是周期性的，由於指數衰減，對投影的影響將隨著時間的推移而減少。\n週期性峰值表現出週期性模式或波。例如，每小時、每天、每週、每月、每月的最後一天等。可以有多個重疊的循環模式，它們也會被檢測到。雖然您不應僅根據幾天的數據做出容量決策，但您確實需要 5 分鐘的粒度作為輸入。應考慮每小時重複一次的 5 分鐘高峰。\n如果您沒有 3 個月而只需要總體尺寸，請考慮使用第 97 個百分位值。為什麼是第 97 個百分位？它基於標準差原理。距離中點的兩個 標準差 等於 95%，3 個標準差 = 99.7%。因此，第 97 個百分位數在 2 SD 和 3 SD 之間提供了良好的平衡。通常，它會捕獲適量的峰值和異常值。\n剩餘容量（%） 使用的是未來 3 天的預測值，因此它可能與當前使用的容量不同。由於是未來值，所以存在置信區間。您可以在激進（基於帶的上限）和保守（基於實際軌跡）之間進行選擇。另一方面，如果當前利用率超過可用容量，vRealize Operations 會將剩餘容量的值設置為 0%。\n請注意，CPU 剩餘容量 (%) 和剩餘內存容量 (%) 在策略中顯示為已啟用，但無法使用。這是一個應該隱藏的內部指標。\n剩餘時間 衡量容量耗盡前的天數。最長預測為1年，超過1年的時間只顯示為1年。保守值基於剩餘容量預測的上限。\n剩餘虛擬機 衡量可以裝入集群的平均大小的 VM 數量。平均 VM 大小是自動計算的，因此它會隨著時間和集群而變化。 vSphere 數據中心和 vCenter 級別的其餘 VM 只是子集群的總和。未計算這些級別的平均 VM 大小，因此您喜歡混合大小。此外，VM Remaining 值不會低於 0。數據中心可能會顯示正的 VM Remaining 值，即使其成員集群之一短暫下降。\n推薦大小 基於規劃窗口中的最高投影值，而不是窗口末尾的投影值。默認情況下，VM 的規劃窗口為 60 天。這來自於30天配置緩衝+30天（剩餘時間的默認閾值在綠色區域，如截圖所示）。\n如果 VM 使用量隨著時間的推移而增加，預測可能會隨之而來，您將獲得一個在未來 60 天內存在的數字。\n如果您的操作可以經常調整，請將剩餘時間窗口更改為 0。這將提供 30 天的調整期。\n請注意，推薦的內存大小四捨五入到最接近的 GB。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.7-kpi-vs-sla/","title":"7. 關鍵績效指標和服務水平協議","tags":[],"description":"","content":"我同意一組確定複雜對象（例如 VM 或應用程序）運行狀況的指標在 100% 的情況下永遠不會準確。這很正常，就像在現實生活中一樣。我們進行年度健康檢查，進行各種測試，結果將是一系列指標（例如您的壞膽固醇水平）。從年輕到年老，它們對您來說是否 100% 準確？結果是否對您所在城市的每個人都 100% 準確？不，但它們已經足夠好了，而且肯定比沒有好得多。除了絕對值之外，值隨時間的相對變動也能讓您洞察力。例如，如果 KPI 在一個安靜的星期天早上下降，而環境不應該有已知活動，那麼可能有不好的事情發生？\n在這本書中，我對 KPI 的定義嚴格按照性能，因為性能這個詞有特定的含義。對我來說，KPI 作為一個術語不適用於可用性管理和容量管理。我們應該將決定可用性的關鍵指標稱為KAI，將決定容量的關鍵指標稱為KCI[^1]。這將防止混淆，因為實現級解決方案要求我們明確術語。\n本書沒有使用包括非績效在內的更廣泛的 KPI 定義，因此我們可以在實現中精確。對於整體業務KPI, Norman Dee 寫了一系列的博客文章這裡.\n要使 KPI 支持 SLA，它使用的閾值必須與 SLA 使用的閾值相同。\n假設您有三類服務，其中 Gold 是最高和最貴的。\n黃金級應該比青銅級表現更好。這是期望，所以我們需要在實際生產中反映這一點。 Gold absolute 性能應該更好，因為它被設計得更好。一開始它的價格更高是有原因的。\nKPI 這種絕對性能的測量範圍是 0 - 100%，因此很容易理解，100% 是最好的。從數學上講，KPI 實際上是無單位的。我可以選擇另一個範圍，例如 0 - 4，它不會有任何區別。使用百分比和 0 - 100 只會更容易記住。\nKPI 按原樣報告原始性能。\n大多數 KPI 是內部的。它們用作故障排除的起點。\n對於每種類型的對象，旨在將所有績效指標整合到一個 KPI 中。假設您有 1000 個要監控的 AWS EC2。您有一堆指標，並將它們考慮為 2 個 KPI。您如何知道哪個 EC2 有問題？您需要顯示 2 組熱圖或表。這意味著您需要手動將第一個表與第二個表相關聯。它不可擴展。\n當您滾動到更高級別的對象時，上述內容也帶來了挑戰。\nSLA 雖然 Gold 的表現應該比 Silver 好，但對於 Gold SLA 來說可能還不夠好。儘管黃金在絕對意義上比青銅快，但它自己的 SLA 也可能會失敗。相對以二進制來衡量。通過或失敗。因為它是一個二進製文件，它無法衡量它通過的好壞或失敗的壞。這是 KPI 對其進行補充的一個領域。\nSLA 通常在一個日曆月內進行衡量，這意味著 5 分鐘的一次故障不構成正式的 SLA 故障。\nSLA 是外部的，因為它寫在合同中。\n 下表顯示了 KPI 和 SLA 之間的關係。兩者都採用相同的指標和閾值作為輸入，但由於目的不同，它們的分析方式不同。\n所有三個服務類別共享相同的 KPI 集，這些 KPI 是絕對的。快就是快。這是事實，無論您貼上什麼商業標籤。\n 要定義您的 KPI，請獲取每個 KPI 指標並準確定義速度，並將其分為四個區域。為簡單起見，每個區域都給出了 100% 的四分之一。 理想情況下，將 Gold SLA 設置在最高範圍，即 KPI 的綠色範圍。 理想情況下，將 Silver SLA 設置在綠色以下的範圍內，即 KPI 的黃色範圍。如果它們在綠色範圍內，則您已經超額交付（或正在超額交付）。您應該通過銷售更多 VM 或購買更便宜的硬件來優化成本。 期望青銅在橙色範圍內。如果它們在綠色到黃色範圍內，則您交付過多。 沒有應該在紅色範圍內。這是您的關鍵警報被觸發的地方。由於 KPI 的真正目的是啟用主動運營，因此您希望盡量減少處於紅色區域的情況。  在前面的例子中，白銀範圍被賦予了一個寬帶。雖然這在數學上是可能的，但在操作上它會產生不必要的複雜性。將一種顏色映射到每個服務類別要容易得多。此外，擁有 3 級以上的服務會使您的操作複雜化並增加您的成本。\n讓我們看一個例子來說明：\n VM 磁盤延遲的金牌 SLA 為 8 毫秒，銅牌為 26 毫秒。 Gold VM 007 的磁盤延遲為 9 毫秒。青銅級 VM 747 的磁盤延遲為 25 毫秒。黃金級的絕對值表現更好。但是，相對而言，Gold 級未通過 SLA，而 Bronze 級通過其 SLA。  如果您有一個沒有 SLA 的免費層級，那麼它們位於紅色區域中是可以的。商業雲提供商提供免費層。它們被有意設計為更慢且更不可靠，因為它們希望您升級和付費。\n內部的 SLA 對於每個 SLA，可以有_許多_個關聯的 KPI，因為並非所有指標都應在合同中，而幾乎所有性能指標都需要監控。\nvRealize Operations 對 vSphere IaaS 內部 SLA 使用以下閾值。這些數字在產品中是固定的。\n以上是嚴格的門檻。使用了高標準的性能，因為它是基礎設施團隊消費的內部 KPI。它不是外部的、正式的 SLA。內部和外部之間需要有一個緩衝，給運營團隊反應的空間。緩衝區是您的誤差範圍。\n高標準的另一個原因是它必須適用於關鍵任務環境。如果閾值對於此類環境不夠好，您將不會得到早期警告。\n單個閾值用於保持操作簡單。這意味著生產環境中的性能預計會比開發環境中的得分更高。開發環境的性能顯然會比生產環境差。單個閾值有助於區分不同服務類別提供的 QoS（服務質量）差異。你付出的少，你的表現就會變差。您支付半價；你得到了一半的性能。\nIaaS 的上述四個要素（CPU、內存、磁盤、網絡）在每個收集週期都進行評估。默認收集週期為 5 分鐘，這是 SLA 監控的適當平衡。基於 1 分鐘收集週期的 SLA 將過於緊張，會導致成本增加或閾值降低。\n以下示例採用 vRealize Operations 8.2，表明 IaaS 為該虛擬機提供了良好的服務。它獲得了過去 24 小時內要求的四種 IaaS 資源，只有一個例外。每次 VM 未獲取資源時，圖表都會計數。未在所有四個上提供服務的 VM 將在圖表中註冊值 4。\n下面的例子顯示了相反的情況。在許多實例中，VM 沒有獲得至少四種 IaaS 資源中的一種，而在一個實例中沒有獲得兩種。該圖表還顯示了 7 天，因此可以看到模式或峰值。\n既然我們可以測量每個虛擬機，我們可以在 ESXi 主機或集群級別匯總指標。以下公式對集群中所有正在運行的 VM 求平均值。您希望看到接近 100% 的數字，因為預期集群可以很好地為所有 VM 提供服務，而不僅僅是其中的 99%。在具有 1000 個虛擬機的集群中，99% 可能意味著 10 個虛擬機沒有得到很好的服務。只需一台虛擬機即可投訴！\n以下示例顯示集群正在努力為其所有 VM 提供服務。\nKPI 我們之前分享過 SLA 只考慮通過或失敗。它不衡量你通過的有多好或你失敗的有多糟糕。這就是 KPI 補充 SLA 的地方。 KPI是在VMware Horizo​​​​n監控中實現的，所以我就以它為例。\nKPI 定義為 0 - 100%。當我們使用 4 種顏色時，我們將它們平均分配。所以綠色只是 75% - 100%，紅色只是 0% - 25%。如果您創建了不均等的分佈，則某些波段將必須比其他波段更窄。對於不均勻的波段，在為構成 KPI 的每個指標定義閾值時，您還需要格外小心。\n以下 KPI 使用 4 個指標作為其輸入。每個指標都有一組綠色、黃色、橙色和紅色的閾值。\n現在我們有了每個指標的閾值，我們可以將每個指標轉換為綠色 - 紅色。當整個範圍由單個數字定義時，Horizo​​​​n 適配器也能夠處理。當您想要定義 green = 0 時，這很有用。這意味著單個數據包丟失會將指標置於黃色範圍內。\n我們如何翻譯？\n讓我們舉一個例子。以磁盤延遲 (%) 指標為例。它的範圍從 0 到 40 毫秒，使用以下映射表映射到 0 - 100%。\n通過上面的映射，我們可以精確地分配值。舉些例子：\n 9 毫秒的磁盤延遲轉化為 77.5% 的 KPI 值，這是綠色的。原因是綠色範圍從 75% 到 100%，其中 0 ms 等於 100%，10 ms 等於 75%。所以每毫秒大約是 2.5%。 42 毫秒的磁盤延遲轉化為 0%。它高於 40 毫秒的上限閾值。由於我們不顯示負數，任何高於限制的都顯示為 0%  我們對每個指標重複計算。 KPI 只是指標的平均值。\n將來，我們可以添加_加權平均值_，以便您獲得更好的領先指標。簡單平均的問題是單個紅色可以超過許多綠色，KPI 不會顯示問題。\n[^1]：你看，我並不反對行話。只要它們實際用於現場操作。如果它只是一個目標，那麼就不需要用術語來標記，否則我們必須為每一種類型的目標創建術語。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.8-peak-utilization/","title":"8. 峰值利用率","tags":[],"description":"","content":"我們從客戶那裡得到的一個常見要求是需要調整峰值。我們經常看到定義峰值實際是什麼的錯誤，因為默認情況下，平均值 會妨礙。\n因此，讓我們詳細說明峰值。\n您如何定義峰值利用率或爭用而不會過於保守或激進？\n峰有兩個維度。您可以跨時間或小組成員衡量它們。\n我們以一個有 8 台 ESXi 主機的集群為例。下圖顯示了 8 個 ESXi 利用率。\n當天集群的最高利用率是多少？\n此問題的問題在於一天有 1440 分鐘，因此每個 ESXi 主機至少有 288 個計數器（基於 5 分鐘的報告週期）。因此，該集群當天有 288 x 8 = 2304 個指標。真正的峰值必須是這 2304 個指標中最高的。\n要獲得這個真正的峰值，您需要跨組成員進行測量。對於每個樣本數據，從利用率最高的主機獲取利用率。在我們的集群示例中，在上午 9 點 05 分，主機 1 的利用率是所有主機中最高的。假設它達到 99%。那麼我們認為上午9:05集群 峰值 的峰值利用率也是99%。\n您對每個採樣週期（例如，上午 9:10、上午 9:15）重複此過程。您可能會在不同時間獲得不同的主機。您不會知道哪個主機提供了峰值，因為它會不時發生變化。\n這個真正的高峰有什麼問題？\n是的，它可能太敏感了。僅需要 2304 個指標中的 1 個。如果要忽略異常值，則需要使用百分位數。例如，如果您執行第 99 個百分位數，它將刪除最高的 ~23 個數據點。\n請注意，最常用的方法是採用群集中所有 8 台 ESXi 主機的 average 利用率。所以你失去了真正的峰值，因為每個數據點都變成了平均值。集群要達到80%的平均利用率，至少一台ESXi主機必須達到80%以上。這意味著您不能排除主機接近 100% 的可能性。\n相同的邏輯適用於 VM。如果具有 64 個 vCPU 的虛擬機達到 90% 的利用率，則某些內核可能會達到 100%。這種方法會導致漏報，因為它在任何給定時刻取“成員”的平均值，然後隨著時間的推移（例如，過去 24 小時）取峰值。\n這種“平均問題”在監控中基本上無處不在，因為它是聚合的默認技術。更深入的閱讀請查看 這個 分析 Tyler Treat。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.8-depth-vs-breadth/","title":"8. 深度和廣度","tags":[],"description":"","content":"您從以下屏幕截圖中註意到了什麼？\n請注意，最大值比平均值高出 10 倍以上。平均值相對於最大值也非常穩定。即使最大值變得更糟，它也沒有移動。一旦集群無法應對，您就會看到這樣的模式。幾乎所有的 VM 都可以服務，但 1-2 服務不好。最大值很高，因為始終有一個 VM 未提供服務。\n小心 當您查看集群和數據存儲等父對象的計數器時，average 是聚合中使用的默認計數器。查看以下集群級別圖表。你注意到一個問題嗎？\n這是正確的。在過去 7 天內完全沒有性能問題。集群運行良好。\n這個集群運行了 100 多個虛擬機。您在上面看到的是在集群級別聚合的所有這些 VM 的平均體驗。如果只有少數虛擬機有問題，但大多數都沒有，則上述內容無法顯示。\n您需要的是一個集群級別的指標，用於跟踪是否有任何 VM 發生爭用。我們有這個，結果很明顯。\n相同的模式，但比例是 6000%！\n下圖解釋了這種事情是如何發生的。\n上圖顯示了 6 個具有不同磁盤延遲的對象。粗紅線顯示 6 個對像中最差的延遲隨時間變化。\n繪製所有 6 個對像中的最大值，並取平均值，給我們兩個不同的結果，如下所示：\n該圖表顯示平均值可能仍遠低於閾值，但一個或多個對象受到影響。平均數是穩定的。 只有當集群無法為大約 50% 的虛擬機提供服務時，平均數量才會變高。因此，平均值是一種糟糕的匯總技術。這是一個滯後指標。\n主動監控需要從多個角度進行洞察。當您聽說 VM 遇到性能問題時，您的下一個問題自然是：\n 有多糟糕？您想衡量問題的深度。嚴重性還可以提供根本原因的線索。 問題持續了多久？有什麼模式嗎？ 有多少虛擬機受到影響？還有誰受到影響？您想衡量問題的廣度。  注意你沒有問 “什麼是 平均 性能？”​​。顯然，在這種情況下，平均為時已晚。當平均表現不佳時，可能有一半的人口受到影響。\n第三個問題的答案會影響故障排除的過程。事件是孤立的還是普遍存在的？如果它是孤立的，那麼您將更仔細地觀察受影響的對象。如果這是一個普遍存在的問題，那麼您將查看在受影響的 VM 之間共享的公共區域（例如集群、數據存儲、資源池、主機）。\n在計算問題的廣度時，需要使用嚴格的閾值。沒有這個，您將無法捕捉剛好低於閾值的值。另一方面，如果設置得太低，則會收到很多預警。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.9-storage-capacity/","title":"9. 存儲容量","tags":[],"description":"","content":"存儲容量不同於計算容量，這本身就是一個挑戰。與 vSphere 集群的基本計算能力不同，存儲的形狀各不相同。兩個主要是數據存儲和 vSAN，因為很少使用本地數據存儲和 RDM。我們將單獨討論 vSAN 容量，因為它有其獨特的因素，例如 FTT，需要考慮計算。\n數據存儲容量 與計算能力類似，存儲能力由兩個因素驅動：\n爭用 如果數據存儲無法為現有虛擬機提供服務，這意味著它們的延遲越來越嚴重，您是否要添加更多虛擬機？你是對的，不管剩餘空間如何，數據存儲都已滿。\n這裡的關鍵計數器是延遲和未完成的 IO。\n利用率 還剩多少磁盤空間？精簡配置使這具有挑戰性。它要求我們同時使用需求模型和分配模型來正確回答數據存儲的剩餘容量。\n 看看下面的兩個數據存儲。\n哪個剩餘容量較低？您會選擇哪一個來部署額外的 VM？\n兩者都具有相同的 10 TB 可用物理容量，如黑線所示。兩者都有相同的分配模型，基於 2:1 的過量使用。但它們有不同的使用率和實際過度使用率。數據存儲 1 使用了 5 TB，但已使用 25 TB 進行精簡配置。數據存儲 2 實際使用了 8 TB，但使用 12 TB 進行了精簡配置。紅色箭頭表示風險。\n    總容量 已用容量      需求模型 10 TB 數據存儲 1 = 5 TB\n數據存儲 2 = 8 TB 數據存儲 1 = 50%\n數據存儲 2 = 80%   分配模型 20 TB 數據存儲 1 = 25TB\n數據存儲 2 = 12 TB 數據存儲 1 = 125%\n數據存儲 2 = 60%    數據存儲 1 的實際使用率較低，但風險較高，因為它的空間多於可回收和過度使用的空間。您應該使用兩個容量模型中較低的一個。在這種情況下，您應該選擇 Datastore 2。\n精簡配置以新配置的 VM 的形式帶來了另一種複雜性，因為它們的增長是不可預測的。它們可能會閒置數月並突然增加其存儲消耗。隨著它們的成熟，它們的增長變得相對更可預測，具體取決於業務應用程序。\n最後是複墾。我添加了一個綠色箭頭來表示您可以擁有不同的可恢復值。在上面的示例中，數據存儲 1 恰好具有更多可回收空間。\n容量匯總 現在我們知道瞭如何計算單個數據存儲的容量，我們可以解決聚合問題。\n數據存儲可能屬於一個數據存儲集群。由於數據存儲集群將數據存儲分組到一個更大的池中，我們可以將它們視為一個邏輯池。這簡化了容量計算。\n它還可以在具有許多數據存儲的大型環境中簡化容量管理，因為您可以將集群視為一個整體。它使信息和可視化更緊湊，更易於管理。從數據存儲集群，構建一個向下鑽取。\n對於過度使用率，我們應該在數據存儲集群級別允許較低的過度使用率，以說明數據存儲之間的分佈不是粒度的事實。下圖說明了原因。\n將其匯總到數據中心或 vSphere 怎麼樣？\n這是不可取的。 vCenter 中的不同數據存儲可能有不同的用途，例如 NSX Edge 和業務工作負載。它們的容量不可互換。是的，這意味著我們甚至不應該計算總容量。如果您在全球擁有 1,000 個數據存儲，並且每個數據存儲有 1 TB 的可用空間，那麼您沒有 1 PB 的空間。\n那麼你可以捲起什麼？\n您可以總結 VM Remaining。這只是每個數據存儲上剩餘的虛擬機總數。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.9-leading-indicators/","title":"9. 領先指標","tags":[],"description":"","content":"您希望能夠在早期發現性能問題，此時只有一小部分用戶或應用程序受到影響。為此，您需要一個領先指標。領先指標通過提供預警來補充滯後指標，讓您有更多時間做出反應。\n平均值是一個滯後指標。大組的平均值往往較低，因此需要用峰值進行補充。另一方面，絕對峰值可能過於極端，包含異常值。\n下表顯示了 Max() 找出極端（異常值）而平均值無法檢測到問題的位置。這就是 95% 或 99% 更有意義的地方。\n這些是對average() 和maximum() 進行補充的技術。根據情況，您應用適當的技術。\nWorst() 這將返回組的最差值。它適用於成員數量較少的情況，例如集群中的 ESXi 主機。\n如果要忽略異常值，請使用 Percentile 函數。\n在某些情況下，您可能同時需要最差和百分位數以獲得更好的可見性。\nPercentile() 它類似於 Worst() 函數，但它在消除最壞的百分比後返回數字。例如，如果取第 99 個百分位數，則消除最差的第 1 個百分位數並取最高值。\n成員數量必須支持百分位函數。如果只有 20 個成員，那麼每個成員對應 5 個百分位。你不能做 99%，因為這需要至少 100 名成員。\n您需要相應地調整 percentile() 帶，考慮到數組中的成員數量。例如，如果您取 1 個月數據的第 99 個百分位數，您將消除最糟糕的 7.4 小時。另一方面，如果您取 1 天數據的第 95 個百分位，您將消除最糟糕的 1.2 小時。\nCount() 這與 Worst() 或 Percentile() 不同，因為您需要先定義閾值。例如，如果您對性能不佳的 VM 進行計數，您需要定義什麼是壞的。這就是為什麼 Count() 要求您定義紅色、橙色、黃色和綠色的波段。然後您可以跟踪紅帶上的對像數量，因為您預計該數字始終為 0。在某些情況下，等到對像到達紅色區域可能為時已晚，因此請考慮用橙色區域中的成員計數來讚美它。\n當成員數量非常大時，Count() 比 average() 效果更好。例如，在具有 100K 用戶的 VDI 環境中，受影響的 5 個用戶為 0.005%。使用計數更容易監控，因為您可以看到它如何轉化為現實生活。\nDisparity() 當成員穿制服並打算平均分擔負載時，您還可以跟踪他們之間的差異。這揭示了當平均水平仍然良好時，該組的一部分何時遭受痛苦。\n使用差異 您期望平衡的示例是：\n VM vCPU 之間的使用情況。如果 VM 有 32 個 vCPU，您不希望前 8 個受到影響，而後 16 個沒有使用。 集群中 ESXi 之間的使用 場中 RDS 主機之間的使用 在 Pod 中的 Horizo​​​​n Connection Server 之間的使用 vSAN 磁盤組中磁盤的使用情況  有兩種計算不平衡的選項：\n 除以總數。這是一個固定數字，因為總數是一個常數。 除以最大值（最高）。這是一個動態數字，因為最大值在波動。不平衡是相對的，因為它取決於 Max 指標的值。  這兩個用例都有其目的。由於以下原因，我們首先使用：\n 這是最常見的。第二個用例用於低級應用程序分析或調整，而不是一般的 IaaS 操作。 也更容易理解。 不平衡絕對值低時，不會導致高數。請參閱下面的圖表  以下計算表明，使用相對不平衡會導致較高的數字，這可能會產生誤導，因為實際不平衡僅為 10%\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.10-optimized-capacity/","title":"10. 優化產能","tags":[],"description":"","content":"優化容量意味著您可以 100% 的利用率運行，而不會浪費或影響性能。您可以通過兩種方式進行優化：消費者和提供者。\n在消費者級別（進程、來賓操作系統、容器、VM），可以優化以下內容：\n在提供者層（ESXi、集群、數據存儲和數據存儲集群、分佈式交換機和端口組、硬件），您可以優化以下內容：\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.10-baseline-profiling/","title":"10. 基線分析","tags":[],"description":"","content":"您如何分析您的環境以設置閾值？你如何確定什麼是可以接受的？最近幾個月的實際價值是多少？\n以上所有問題都可以通過分析您的環境來回答。\n假設您在 10 個集群中有 5000 個虛擬機。所有這些集群都提供相同級別的服務。您想證明 5% 的 CPU Ready for VM 是否是一個很好的閾值，或者您想知道這些 VM 在過去 3 個月內經歷的實際 CPU Ready。\n您希望至少分析最近 3 個月的數據，以便不排除該期間內的任何峰值。由於 vRealize Operations 每 5 分鐘存儲一次此計數器，因此您一天將擁有 288 個數據點，3 個月內將擁有 26,298 個數據點。\n步 1 對於每個集群，您可以測量任何 VM 所經歷的最差 CPU Ready。\n一個擁有 500 個虛擬機的集群將用任何在 5 分鐘間隔內遇到最高 CPU 就緒狀態的虛擬機來表示。因此，您每 5 分鐘分析 500 個指標並取最壞的結果。\n步 2 你做上述3個月。\n由於 3 個月內有 26,298 個數據點，這意味著您分析了 13,149,000 個數據點\n步 3 在 13+ 百萬中取最差的可能會給你一個異常值。\n為了解決這個問題，在比較第 100、99 和 95 的值後，取第 99 個百分位數。平均值不適用，因為您希望接近峰值。\n您將此記錄為過去 3 個月內為該集群準備的最差 CPU。\n步 4 您對每個集群重複步驟 1 - 3。\n 以上為您提供了問題的深度。正如以前所涵蓋的那樣，您需要用問題的廣度來補充這一點。該步驟是類似的，除了在步驟 1 中計算虛擬機體驗 \u0026gt; 2.5% CPU 就緒的百分比。\n為什麼是 2.5% 而不是 5%？\n為了讓您獲得更好的可見性，因為 \u0026gt;5% 的數字可能太小了。\n對所有集群執行上述操作後，您可能會得到這樣的結果。\n如果您想查看最近 3 個月 VM CPU Ready 的實際分佈怎麼辦？您可以通過創建條形圖並指定分佈桶來實現。在下面的示例中，我指定 0% - 1%、1% - 2%，直到 5%，因為這些是我感興趣的範圍。\n請注意，在這種情況下，我將值設置為第 99 個百分位數，因為取 Max 可能會給出異常值。\n如果你想看更多的例子，我應用這個基線技術來計算 CPU Context Switch 和CPU 運行隊列。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.11-reclamation/","title":"11. 開墾","tags":[],"description":"","content":"開墾帶來許多好處，其中一些列在下面\n有6個填海區，從最簡單到最難。當然，每個人的邏輯都不一樣。\n非 VM 文件是最簡單的，因為它們不歸其他人所有。他們是你的！非 VM 對象（例如模板和 ISO）應存儲在每個物理位置的 1 個數據存儲中。當然，只能回收磁盤，不能回收CPU和RAM。\n孤立文件是數據存儲中不再與任何 VM 關聯的文件。隔離的 VM 和隔離的 VMDK 甚至沒有在 vCenter 中註冊。如果是，它們可能會以斜體顯示，表示有錯誤。他們也可能沒有所有者。\n對於孤立的 RDM（原始設備映射），從存儲陣列檢查是否有任何 ESXi 掛載它。\n快照不是備份。如果它們保存的時間過長，它們確實會導致 VM 出現性能問題。保留它們只是為了在更改期間提供保護。一旦驗證更改成功，保留快照會對虛擬機造成損壞。快照更容易回收，因此 vRealize Operations 將它們單獨列出。\n修剪和取消映射 當 Guest OS 刪除一個文件或其中的一部分時，它不會將值替換為 0，而只是離開該塊。這樣更有效，也可以恢復。但這會導致底層 VMDK 增長。同樣的事情發生在數組級別。這就是 修剪和取消映射 的用武之地。\nvRealize Operations 通過 ESXi 主機上的 2 個衡量指標跟踪取消映射操作。第一個是 Unmap IO，它跟踪取消映射 SCSI 指令的數量。例如，如果值為 100，則表示 ESXi 已向其數據存儲發送了 100 個取消映射請求。所以把它看作是 IOPS，除了 IO 不是寫/讀實際塊，而是更多請求刪除（取消映射）後端數組中的塊。此值是自 vSphere 每 20 秒報告一次後 20 秒的總和，然後在 5 分鐘內求平均值。在下面的示例中，您可以看到主機在過去 30 天內頻繁發送 unmaps 命令。\n第二個指標是 Unmap Size，它跟踪上述操作的總未映射空間。該值以 MB 為單位顯示。\n您可以在每個數據存儲上跟踪這兩個操作，但不能按數據存儲聚合它們。\n要詳細了解vSAN 中的TRIM 和取消映射，請閱讀這篇詳細的文章 這篇文章是由Patrick Kremer.\n此問題僅發生在精簡配置的磁盤上。因此，如果要檢查可以回收多少空間，請創建一個視圖，將 Guest 中的值與 VMDK 級別顯示的值進行比較。\n無電源虛擬機 關閉虛擬機更加困難，因為現在有了虛擬機的所有者。在刪除它們之前，您需要與 VM Owner 打交道。這是他們用所有者的電子郵件或業務部門標記的地方。\n汽車為什麼要剎車？\n所以他們可以走得更快！\n使用斷電作為空閒 VM 的剎車。如果將空閒和關閉電源視為一個連續體，則可以更早地關閉空閒虛擬機。您可以獲得 CPU 和 RAM 回收的好處。這也是一個更安全的過程，因為如果您發現虛擬機實際上正在被使用，您只需重新打開它即可。\n一個主要的 警告 如果這樣做，群集中剩餘虛擬機的平均利用率將變得更高。因此，您可能無法達到收支平衡所需的過度使用率。\n運行虛擬機的2個方面 就像有兩個大小調整公式（一個用於訪客操作系統，一個用於 VM）一樣，運行 VM（空閒與否）也有兩個回收公式。該公式很複雜，因為它有兩個不同的階段：\n前 確定 *** 如果 *** VM 屬於該類別。例如，VM 是否符合空閒 VM 的條件？這應該查看 VM 內部，因為這是工作負載運行的地方。在 ESXi 級別進行測量可能會產生不正確的結果，因為其中包括不是由 VM 生成的負載。\n之後 確定 什麼 可以回收。由於正在回收的是 ESXi 資源，因此來賓操作系統內部的使用無關緊要。 Guest 內部的隊列不會影響管理程序，因此在 ESXi 層沒有任何可回收的內容。所有計數器都來自 ESXi。來賓操作系統計數器不適用，因為我們不會從來賓內部回收。\n所以你需要應用兩種不同類型的邏輯。\n空閒虛擬機 空閒 VM 是一個很好的目標，因為您現在可以在關閉電源時聲明 CPU 和 RAM。您還不能聲明磁盤，因為您還沒有刪除它們。請注意，您並沒有回收真正的 CPU 週期，因為它一開始是空閒的。空閒虛擬機實際上不消耗任何 ESXi CPU 週期。因此，回收僅運行 1 個 vCPU 的 10 個 vCPU 虛擬機不會為您提供 9 個 vCPU。你正在回收空白的空氣。對於內存，您將回收真實的 ESXi 內存，因為空閒 VM 往往會將其消耗的內存保留在 ESXi 上。\n讓我們看看公式的第一部分，在這裡我們決定 VM 是否空閒。如果您在很長一段時間內測量空閒狀態，那麼很少使用的 VM 可能會顯示為空閒狀態。例如，如果虛擬機每週只有 2 小時（從業務角度來看）有生產力，則意味著剩餘的 166 小時應歸類為空閒。那是 98.8% 空閒。\n請注意，較長的時間窗口會提高準確性，但也會延長移入和移出空閒 VM 定義所需的時間。\n您可以通過創建列表視圖來應用上述邏輯。注意極端情況，例如具有月末處理的 VM。即使您將 99% 設置為 1 個月，邏輯仍然可能錯誤地將活動 VM 標記為空閒。 1% 活躍意味著它在 30 天內總共只活躍了 8 小時（0.3 天）。請注意，這是一個總數，而不是連續的 8 小時。它在 30 天內累積。理想情況下，您需要進行每日檢查，這意味著它必須每天都處於閒置狀態。\n連續閒置 30 天，然後活動 8 小時的 VM，只需 8 小時即可標記為非閒置。沒有累積 8 小時 CPU \u0026gt; 100 MHz 的 VM，顯然需要更多時間。因此，VM 可能會在激活後的幾天內被錯誤地標記為空閒。\n設置為 99% 的缺點是我們必須等待整整 30 天才能決定。在某些極端情況下，VM 可能永遠不會被標記為空閒。看一個場景：\n 一台虛擬機一直處於活動狀態並已投入使用數月。兩年後，隨著新版本的發布，該應用程序將被淘汰。 結果，VM 處於空閒狀態，因為它只是在等待被刪除。但是因為我們將其設置為 99%，邏輯將等待整整 30 天才能做出決定。 在此期間，由於 AV 和操作系統補丁等基本服務仍在運行，因此會消耗 CPU/RAM。如果這些非應用程序工作負載在 30 天內加起來超過 8 小時，VM 將永遠不會被標記為空閒。  從 vRealize Operations 7.5 開始，空閒虛擬機的固定閾值為 100 Mhz。這意味著在 2 GHz ESXi 上運行的單個 vCPU 虛擬機的利用率為 5%。這也意味著在同一 ESXi 上的 20 個 vCPU 上為 0.25%。根據定義，靜態空閒的原因是絕對的，與 VM 的大小無關。非常大的 VM 是相對的。\n雖然 VM 使用了 CPU、RAM、磁盤和網絡，但我們只使用 CPU 作為空閒的定義。沒有必要考慮所有 4 個並要求所有 4 個都是免費的，因為它們是相互關聯的。處理網絡數據包和執行磁盤活動需要 CPU 週期。來自網卡和磁盤的數據也必須複製到 RAM 中，複製工作需要 CPU 週期。\n請注意具有失控 CPU 的 VM 的極端情況限制，其中 CPU 很高但沒有有意義的內存訪問、網絡傳輸 (TX) 和磁盤處理。空閒的 VM 將無法檢測到它。這是一個角落案例，所以我認為不值得複雜化。另外，CPU失控通常發生在一個進程中，可能是單個線程。使用 CPU 使用率差異 (%) 指示器來檢測。\n閒置必須被定義，所以它是可衡量的，而不是主觀的。將其宣佈為正式政策，這樣您就不會與客戶發生爭議。\n閒置必須考慮它在這個閾值下持續了多長時間。\n虛擬機在幾個月內不會不間斷地使用 CPU。有時候懶惰是正常的。月底處理工資單的虛擬機可以閒置29天。\n根據定義，空閒意味著它沒有執行有用的業務工作負載。僅執行非業務工作負載（例如 AV 掃描、定期 Windows 更新）的 VM 應被視為空閒。\nvRealize Operations 使用可回收空閒衡量指標來指示虛擬機是否空閒。如果連續 N 天的計數器空閒指示器 = 1（N 的默認值為 7 天），則該值設置為 1（真）。這是一個每日計數器，每天顯示一次，如下例所示：\nIdleness Indicator 是一個屬性，因此只有在更改時才會顯示值。它是滾動計數器，每 5 分鐘計算一次，但每個值都需要過去 24 小時。正如您在以下示例中看到的那樣，只有在發生更改時才存儲其值。\n如果 CPU 使用率連續 24 小時 \u0026lt;100 MHz，則空閒指標值 = 1。\n在某些環境中，使用新配置的 VM 可能需要一些時間。在關閉 VM 之前檢查 VM 的創建日期。\n##超級虛擬機\n超大虛擬機的邏輯不同於空閒虛擬機的邏輯，因為空閒虛擬機的定義不依賴於虛擬機的大小。空閒虛擬機的定義只是衡量虛擬機是否產生足夠的工作負載。\n空閒具有絕對定義（在 vRealize Operations 7.5 中為 100 MHz）。超大 VM 取決於 VM 的大小。運行 7 個 vCPU 的 64 個 vCPU 虛擬機非常大，而運行 7 個 vCPU 的 8 個 vCPU 則不是。\n空閒以 GHz 為單位定義，超大以 % 定義。\n虛擬機容量不足 根據 CPU 和 RAM 的總容量和建議的大小值計算。\n如果對於至少一個容器（CPU 或 RAM），建議大小 \u0026gt; 總計\n增加CPU的最小值為1 vCPU，內存為1 GB\n虛擬機太大 如果可以回收CPU或內存，說明虛擬機容量過大。\n根據 CPU 和 RAM 的總容量和建議的大小值計算。\nVM 可回收 CPU 根據虛擬機的槽數和核心數計算\n= 在最低限度 (( 可回收插座 * 每個插槽的核心數 + 剩餘插槽中的可回收核心), CPU內核數 - 2) 如果 CPU Reclaimable 值 \u0026lt; MHz Per Core 值，則不會建議回收\n虛擬機可回收內存 = 總容量 - 推薦尺寸 必須=\u0026gt; 1 GB，回收後的剩餘容量應=\u0026gt; 2 GB\n開墾方法 Active VM 在政治上是最難的，因為它們服務於業務工作負載。首先關注大型虛擬機。分別使用 CPU 和 RAM，因為拆分它們時更容易處理。分而治之。如果兩者都降低，並且應用程序團隊聲稱對性能產生影響，則需要同時恢復兩者。無論閒置情況如何，從小型虛擬機中獲取 CPU 和 RAM 都是徒勞的。無法進一步減少具有一個 vCPU 的空閒 VM。關注大型虛擬機，原因已涵蓋 這裡.\n在減少超大虛擬機或關閉空閒虛擬機時，請注意大型虛擬機。舉個例子來比較：\n 減少 20 個大型虛擬機。平均減少 10 個 vCPU。 減少 100 個小型虛擬機。平均減少 2 個 vCPU。  在這兩種情況下，您都回收了 200 個 vCPU。但是大型 VM 選項帶來更多好處並且更容易實現。原因如下：\n 每次縮小規模都是一場戰鬥，因為您正在通過“少即是多”改變範式。此外，它需要停機時間，這需要審批和變更請求流程。 現在，使用 20 核以上的至強處理器，從 4 個 vCPU 縮減到 2 個並不多。 沒有人喜歡放棄他們得到的東西，尤其是如果他們得到的很少。通過專注於大的，你花費 20% 的努力來獲得 80% 的結果。 大型 VM 對其他 VM 也不利，而不僅僅是對它們自己。它們可以影響其他大小的虛擬機。 ESXi VMkernel 調度程序必須為所有 vCPU 找到可用內核，即使它們處於空閒狀態。因此，其他 VM 可能會從核心遷移到核心，或從套接字遷移到套接字。 esxtop 中有一個計數器可以跟踪此遷移。 大型虛擬機的性能往往較慢。 ESXi 可能沒有所有可用的 vCPU。大型虛擬機速度較慢，因為必須調度它們的所有 vCPU。計數器 CPU CoStop 對此進行跟踪。 大型虛擬機會降低整合率。與大型 VM 相比，您可以使用較小的 VM 打包更多的 vCPU。  未使用的虛擬機 未使用的 VM 不會閒置，但它們不再提供業務價值。應用程序團隊可能已停止使用它，但仍繼續運行該應用程序，以備將來需要時使用。 VM 不會空閒，因為它仍然會生成 CPU 活動。活動可以是業務工作負載、IT 工作負載或兩者兼而有之。\nIT 工作負載有多種形式。來賓操作系統升級、更新和補丁可以是具有不同模式的 3 種不同工作負載。 VMware Tools 補丁、防病毒掃描、入侵檢測掃描和基於代理的備份是其他常見示例。在一個高安全性的環境中，可以有很多與安全相關的代理在運行。\n業務工作負載可以是批處理作業、報告或監控。沒有人再使用該應用程序，但該應用程序繼續運行。這比運行純 IT 工作負載更難識別。\n未使用的虛擬機很難檢測到，因為基礎設施團隊缺乏業務背景，並且模式差異很大。關閉虛擬機前需要進行所有者驗證。這就是將 VM 與部門或所有者相關聯的能力很重要的原因。我們在第 1 部分中討論了以業務為中心的基礎架構的重要性。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.11-optimized-performance/","title":"11. 優化性能","tags":[],"description":"","content":"優化性能很困難，因為當利用率/吞吐量為 100% 時才能實現最佳性能。由於相互依賴的許多方面，在該級別上運行需要完美的掌握水平。\n垂直依賴 堆棧中有層，下層的問題會影響上層。\n水平依賴 IaaS 的四個要素不是獨立的。當 CPU 暫停時，就來賓操作系統而言，RAM 和磁盤會隨著時間的推移而出現延遲。\n流依賴 由於流量，NSX Edge 群集上的 NSX Edge 虛擬機中的問題可能會影響位於另一個群集上的業務虛擬機。如果您不了解流程，則可能會浪費時間在錯誤的集群上進行故障排除。\n版本依賴 “什麼與什麼一起工作”背後有正當的理由。並非所有組件的所有版本都能很好地協同工作，這是一個已知問題。驅動程序、固件等可能會導致互操作性問題，這可以表現為性能。\n消費者層 消費者層由虛擬機和容器（通常在虛擬機內運行）組成。客戶操作系統存在於其中，反過來又為進程運行提供了一個平台。因此，如果您正在運行容器，則會添加一個新層進行監控。如您所見 此處，添加新層會改變相鄰層中的指標。如果您有容器監控方面的專業知識，請給我發電子郵件！\n在流程級別，用於故障排除的有用信息似乎有限。下面展示了 Windows Sysinternal，一個很好的 Windows 故障排除工具。如您所見，它們只是利用率計數器。\n更多關於CPU 上下文切換 被覆蓋這裡.\n由於提供了各種計數器，我們在 vSphere 虛擬機級別具有更好的可見性。下表列出了您可以為解決問題而執行的指標和相關操作。\n我沒有將 AWS EC2 或 Azure VM 放在這裡，因為可見性相當有限。\n現在讓我們把來自客戶操作系統和虛擬機的所有計數器放在一起。為了完整起見，我也添加了利用率計數器，因為 5 分鐘的平均值可能太長了。\nKPI 計數器對於某些用戶來說可能過於技術化，因此 vRealize Operations 8.2 包含一個讓他們入門的起點。它帶有彩色編碼儀表板。如果您認為儀表板小部件不符合您的要求，您可以調整它們的閾值。只有在您分析您的環境之後才這樣做，而不僅僅是基於理論。\n提供者層 在任何給定時刻，正在運行的 VM 始終駐留在 ESXi 主機上。由於 DRS 和 HA，更容易在集群級別進行監控。由於一個集群可以有數百個 VM，因此您需要能夠代表集群中所有正在運行的 VM 的體驗的綜合指標。 vRealize Operations 8.2 提供以下衡量指標：\n正在運行的VM 還使用數據存儲服務或具有原始設備映射(RDM) 磁盤.\n以下是提供者層的潛在問題列表：\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/1.3.12-rightsizing/","title":"12. 調整大小","tags":[],"description":"","content":"由於各種原因，過度配置是現實生活中 SDDC 中常見的不當做法。 P2V 是一個常見原因，因為 VM 剛好與物理服務器的大小相匹配。另一個原因是供應商的規模調整保守，然後由應用團隊進一步添加。\n我見過大型企業客戶試圖進行大規模調整，以減少許多虛擬機的大小，但當虛擬機性能受到影響時卻適得其反。\n由於性能至關重要，您應該從這個角度解決它。儘管邏輯看起來很奇怪，但要讓 VM 所有者知道正確調整大小實際上可以提高性能需要花費大量時間和精力。胡蘿蔔比大棒更有效，尤其是對有錢人。在大多數情況下，節省資金是一個弱論點，因為 VM 所有者已經為 VM 付費了。\n調整大小對於 VM 很重要，比對物理服務器更重要。以下是一些好處：\n 來賓操作系統內的進程可能會遇到較少的乒乓問題。 Guest OS 可能不知道物理主板的 NUMA 性質，並認為它具有統一的結構。它可以在自己的 CPU 內移動進程，因為它假定它沒有性能影響。如果將 vCPU 分散到不同的 NUMA 節點，例如在具有 2 插槽和 20 核的盒子上安裝 20 個 vCPU，則可以體驗乒乓效應。 降低 NUMA 效應的風險。降低 RAM 或 CPU 分佈在單個插槽上的風險。由於 NUMA 架構，性能不會那麼好。 降低共同停車和準備時間。即使應用程序並未使用所有 vCPU，Guest OS 仍會要求管理程序提供所有 vCPU。 更快的快照時間，尤其是在包含內存快照的情況下。 更快的啟動時間。如果 VM 沒有預留空間，vSphere 將創建一個與配置的 RAM 大小相同的交換文件。如果存儲子系統很慢，這會影響啟動時間。 更快的 vMotion。 Windows 和 Linux 使用內存作為緩存。它擁有的越多，使用的就越多，其他條件都一樣。  過度配置的嚴重程度 如果您有數千個大型虛擬機，您如何輕鬆地向高級管理層傳達許多大型虛擬機沒有使用過去幾個月提供給他們的 CPU 的信息？\n您需要展示一個令人信服的圖表，該圖表顯示每 5 分鐘數百個大型 VM（您定義為具有 \u0026gt; 16 個 vCPU）的利用率，因此您的演示文稿中不排除一個短峰值。\n您需要做的第一件事是創建一個動態組來捕獲所有大型 VM。為 CPU 創建 1 組，為 RAM 創建一組。然後，您可以在過去 3 個月內每 5 分鐘繪製一次它們的利用率。\n在完美的世界中，如果所有大型 VM 的大小都合適，您會看到哪種情況？\n這是正確的。場景 2。由於該組有數百名成員，因此其中一個大型 VM 很可能正在使用為其提供的 CPU。平均而言，它們應該在 40 - 50% 左右徘徊，因為在任何給定的 5 分鐘間隔內，有些人可能空閒，而另一些人可能很忙。\n我們用於 CPU 和 RAM 的技術是相同的。我會以 CPU 為例。\n創建組後，下一步是創建兩個 超級指標:\n最大() 這些大型虛擬機之間的最大 CPU 工作負載。\n您預計這個數字會徘徊在 80% 左右，因為所有大型虛擬機，只需要 1 個虛擬機就可以使折線圖達到峰值。\n如果您的最大線始終為 ~100% 平坦，則您的過程可能會失控。\n如果您有許多大型虛擬機，那麼在任何給定時間，其中一個往往會被高度利用。\n如果這個數字很低，就意味著浪費嚴重！\n在最低限度() 這些大型虛擬機之間的平均 CPU 工作負載。\n您希望這個數字徘徊在 40% 左右，這表明調整大小是正確的。\n如果圖表在整個月內保持低於 20%，則所有大型 VM 都太大。\n 為什麼不需要創建最小值？\n在任何給定時間都必須有一個空閒的虛擬機。\n兩個折線圖向我們展示了過度配置的程度。你能說出一個限制嗎？\n它位於櫃檯本身。我們無法區分 CPU 使用率是否是由實際需求引起的。真正的需求來自應用。虛幻的需求來自基礎設施，例如：\n 來賓操作系統重新啟動。 AV 全掃描。 進程失控。如果應用程序是多線程的，這可能會導致 100% 的 CPU 需求。如何區分失控的進程和合法的高工作負載是一個挑戰。  公式的兩個方面 虛擬機大小是一個經常被誤解的術語，因為實際上有多個用例，每個用例都有自己需要考慮的因素。不同的場景需要不同的指標。它不是萬能的，所以有不止一種公式。以下是一些流行的用例：\n 您的應用團隊需要額外的 vCPU。在這種情況下，管理程序開銷無關緊要。調整 NSX Edge vCPU 的大小時，您無需為開銷添加額外的 vCPU。它是在 Linux 之外完成的。 您正在將 VM 遷移到 CPU 速度為 2 倍的新 ESXi。例如，從 2 GHz ESXi 到 4 GHz。在其他條件相同的情況下，您可以將 VM 大小減少 2。16 個 vCPU 變為 8 個。但是您擔心在來賓操作系統內造成隊列，因為應用程序可能需要 16 個慢線程與 8 個快速線程。 您正在將許多 VM 批量遷移到另一個集群，而沒有更改它們的配置。考慮 2 個 VM。兩者都運行 Windows Server 2019，具有 64 個 vCPU。兩者都運行得很熱，但其中之一的 IO 很重。它發送大量網絡數據包並執行大量磁盤 IOPS。第二個虛擬機在 ESXi 上的佔用空間大不相同。它的要求要高得多。所有這些 IO 處理都需要由其他物理內核處理。在這種情況下，您需要考慮外部佔用空間。來賓操作系統中的隊列無關緊要。 你的老闆要求你適當地向客戶收費，說明他們的實際要求。你會以同樣的方式為上面的兩個虛擬機充電嗎？你可能出於實際原因，悄悄地平均分配成本，但你知道你不公平。 您正在計劃對集群 X 進行技術更新。它有 24 個 ESXi 和 1000 個虛擬機。您希望將基礎架構減少到 12 個 ESXi，因此您可以提高 CPU 速度並為每個插槽添加內核。您是考慮單個 VM，還是確實看到它們作為一個組的行為？答案是後者，因為 1000 VM 不會同時達到峰值。您是否考慮過 Windows 或 Linux 內部發生的情況，或者您是否看到它們在 ESXi 上的足跡？正確答案是後者，因為內部發生的事情無關緊要。  從以上 5 個用例中，我們至少需要兩個不同的公式：\n 來賓操作系統大小調整。不包括 VM 開銷，包括來賓操作系統隊列 虛擬機大小調整。包括 VM 開銷，不包括來賓操作系統隊列     規則 描述     這不僅僅是利用率 它需要考慮未滿足的需求。 CPU想運行，但不能。內存在客戶操作系統內存中有很多頁面錯誤。   不僅僅是需求 大小基於來賓操作系統需要什麼才能正常運行，而不僅僅是基於它當前的需求。適用於 RAM，如果沒有緩衝區，Guest OS 無法以最佳方式運行。 在容量方面，我們不僅根據需求進行調整，而且還根據性能進行調整。雖然我們可以僅使用 In Use 來滿足對內存的需求，但這可能會以犧牲性能為代價。唯一比內存更快的是CPU。因此請確保 CPU 不等待數據。這是通過盡可能多地緩存來完成的，因為很難預測程序需要哪些數據。   考慮大局 一次 5 分鐘的突發時間太短，無法確定整個接下來的 3 個月。考慮長期模式。僅此一項就使確定尺寸成為一門藝術，因為您需要了解工作量的性質.   不包括 IT 負載 排除來賓操作系統不執行業務工作負載的時間。有一些 IT 工作負載會導致高利用率。常見的有客戶操作系統重啟、客戶操作系統更新、防病毒完全掃描、基於代理的完整備份。只要這些任務不會阻止來賓操作系統執行有用的工作，您就可以排除它們。例外情況是您的 VM 也需要在這些非工作時間運行。所以它取決於虛擬機。 這是困難的部分，因為它需要了解足跡（讀取：進程名稱）    向上和向下調整大小應該有相同的公式。\n 唯一的區別是他們有不同的界限。下限適用於縮小規模，而上限適用於擴大規模。 為了縮小規模，Guest OS 需要最少的 RAM 才能運行。 對於擴大規模，請考慮 NUMA 邊界。此外，VM 不應大於 ESXi 主機上的邏輯處理器總數，否則它甚至無法啟動。事實上，它應該更小，因為您要考慮 VMkernel 開銷。  從上面可以看出，調整大小很複雜。以上只是來賓操作系統。我們還沒有考慮其他需要調整大小的東西，例如容器和業務應用程序。\n調整大小的藝術有兩個部分：時間和度量。\n 首先，我們計算給定時間點的值。輸入值的正確性很重要，否則你有 GIGO 效果。 其次，我們隨時間繪製數千個這些值，並隨著時間的推移對其進行投影。預測必須考慮高峰週期，這意味著它必鬚麵向保守的規模。它還必須考慮商業周期。如果您有年度銷售額，請考慮年度數據。  您將在下面看到 CPU 和 RAM 需要不同的方法。\n來賓操作系統 CPU 大小調整 您排除了所有 VM 開銷，因為來賓操作系統不使用它。例如，在確定 Windows 或 Linux 應配置多少 CPU 時，不應包括管理程序執行的所有 IO 開銷。對於磁盤大小調整，快照不是 VMDK 大小調整的一部分。\n   規則 描述     排除超線程 無論速度和吞吐量如何，來賓操作系統都在運行。效率較低，它只會運行更長時間。它可能會運行 90%，而不是 5 分鐘的 40%。如果超過 100%，那麼 Guest OS 內部會出現隊列。 Demand 和 Usage 計數器不合適，因為它們的值受 CPU 頻率和 HT 的影響   排除 CPU 頻率 如上。此處唯一的例外是初始大小調整，此時 VM 尚未創建。應用團隊可能需要 32 個 vCPU，頻率為 3 GHz。如果您擁有的是 2 GHz，則需要提供更多的 vCPU.   排除空閒時間 CPU 沒有運行。是否因為來賓 OS CPU 正在等待來賓 OS IO 無關緊要。最終結果是來賓操作系統沒有運行其 CPU。雖然使 IO 子系統更快會導致更高的 CPU 利用率，但這是一個單獨的範圍。   排除 CPU 上下文切換 這是你無法控制的。此外，無法將其值轉換為正確的大小公式。此外，過多的 vCPU 或 IO 可能會導致高上下文切換。來賓操作系統只是在其 vCPU 之間進行平衡。 利用率可能高，但是如果CPU做大量上下文切換，效率就低.   包括 Co Stop \u0026amp; Ready 來賓操作系統實際上想要運行。如果沒有阻塞，就會使用CPU。添加/減少 CPU 不會改變這些等待的值，因為它代表了其他地方的瓶頸。但是，它確實說這是 CPU 需要的，我們需要反映這一點。 Guest OS 編號會不准確，因為它的時間被凍結，因此沒有“無數據”。   包括 VM 等待、交換等待 當 CPU 等待 RAM 或 IO（磁盤或網絡）時，來賓操作系統變為空閒。所以這和 Ready 和 CoStop 的情況是一樣的。   包括重疊 來賓操作系統實際上想要運行，但被 VMkernel 中斷。請注意，這已經是 CPU Run 的一部分，因此如果我們使用 CPU Run 計數器，則在數學上是不必要的。   排除管理程序開銷 MKS、VMX、系統。雖然它是需求的一部分，但它不是來自客人內部的需求。 VM CPU Used、Demand 和 Usage 計數器包括 VM 級別的系統時間，因此它們不合適。    基於以上所有內容，確定客戶操作系統大小的公式為：\n來賓操作系統所需 CPU (vCPU) = (Run + CoStop + Ready + VM Wait + Swap Wait) / 20000 ) + CPU 運行隊列因子 結果是 vCPU 的數量。它不是以 % 或 GHz 為單位的。我們正在調整客戶操作系統的大小，而不是虛擬機。\n我們需要除以 20,000，因為 20,000 毫秒代表單個 vCPU 的 100%。 此處 解釋了有關此單元的更多信息。\n來賓操作系統 CPU 運行隊列指標需要進行一些轉換才能使用。讓我們舉個例子：\n VM 有 8 個 vCPU。 整個 VM 的 CPU 運行隊列 = 28。 VM 可以處理 8 x 3 = 24 個隊列。 缺少 28 - 24 = 4 個隊列。 每個額外的 vCPU 可以處理 1 個進程 + 3 個隊列。 結論：我們添加了 1 個 vCPU。  與 CPU Usage 相比，沒有 CPU 運行隊列因素的 Guest OS Needed 差異趨於 10% 以內。使用率更高，因為它包括系統時間和渦輪增壓。在 HT 和 CPU 頻率降低的情況下，使用率會更低。\n這是一個使用率較高的示例。\n以下是使用率較低的示例：\n一旦我們知道客戶操作系統需要什麼，我們就可以計算推薦的大小。這是一個預測，需要很多價值。理想情況下，建議是 NUMA 感知。 在確定尺寸後 應用。您調整大小，然後調整以考慮 NUMA。此調整取決於 ESXi 主機。因此，如果您的 vSphere 集群不同，它可能因集群而異。\n來賓操作系統推薦大小 (vCPU) = 向上取整 NUMA（投影（需要來賓操作系統 (vCPU)） 對於基本的 NUMA 兼容，使用 1 個插槽多核，直到超出插槽邊界。這意味著您使用 2 個 vCore 1 vSocket，而不是 2 個 vSocket，每個 vSocket 有 1 個 vCore。\n隨著 Windows 2008 的發布，切換硬件抽象層 (HAL) 由操作系統自動處理，並且隨著 64 位 Windows 的發布，單處理器和多處理器機器沒有單獨的 HAL 的概念。這意味著一個 vCPU 是一個有效的配置，您不應該將兩個 vCPU 設為最小值。\n如果集群中混合了具有不同 NUMA 節點大小的 ESXi，則應在整個集群中使用最小的 NUMA 節點大小。例如，12-vCPU VM 應該是 2 插槽 x 6 核而不是 1 插槽 x 12 核，因為這更適合雙插槽 10 核和雙插槽 12 核主機。請注意，主機和 VM 上的內存量可能會更改該建議，因此該建議假設內存不是您的方案中的限制因素。\n請注意，該數字以 vCPU 為單位，而不是 GHz，而不是 %。原因是調整是在整個 vCPU 上完成的。事實上，在大多數情況下，它應該是偶數，因為當您跨越 CPU 插槽的大小時，奇數在 NUMA 中不起作用。\n請注意，當您更改 VM 配置時，可能需要更改應用程序設置。這尤其適用於管理自身內存（例如數據庫和 JVM）並安排固定數量威脅的應用程序。\n您可以在 VM 上啟用熱添加，但請注意對 NUMA 的影響。\n參考: 調整大小 by Brandon Gordon.\n虛擬機 CPU 大小調整 需要針對遷移用例或退款用例調整 VM 大小。\n   規則 說明     包括超線程 當 VM 在運行對等線程的線程上運行時，其 CPU 週期會減少。   包括CPU頻率    包括VM開銷    排除來賓操作系統隊列    包括VM隊列     基於上述所有內容，確定 VM 大小的公式為：\n所需的 VM CPU (vCPU) = (已使用 + CoStop + 就緒 + VM 等待 + 交換等待) + 系統 / 20000 ) 唯一需要轉換為 GHz 的時候是需要遷移到另一個時鐘速度不同的 ESXi 時。為了轉換為 GHz，我們將數字乘以標稱的靜態時鐘速度。您還可以通過考慮 CPU 生成和速度 來增強這一點，儘管如果處理不當，這可能會帶來新問題。如果應用程序在使用許多慢線程而不是少數快速線程時運行得更好，則在 vCPU 減少後，它可能會表現不佳。\n一旦我們知道 VM 需要什麼，我們就需要進行項目和推薦。我們應用與客戶操作系統相同的技術。\n來賓操作系統內存大小 來賓操作系統內存的準確性在虛擬化世界中一直是爭論的焦點。看看下面的使用圖。它有兩個條，顯示為細條和粗條。它們顯示不同的閾值。\n細條是所有利用率指標（例如 CPU 和內存）的通用指南。較粗的條特定於內存利用率。\n當您將資金花在基礎設施上時，您希望最大限度地利用它，最好是 100%。畢竟，您需要為整個盒子付費。在內存的情況下，使用整個硬件甚至是有意義的，因為內存的真正目的只是磁盤緩存。\n上面的第一條顯示利用率範圍 (0% - 100%)。綠色範圍是您希望利用率下降的地方。低於 50% 標記以藍色顯示，象徵寒冷。如果利用率低於 50%，公司就是在浪費錢。因此，位於綠色區域下方的並不是更綠色的區域；這是一個浪費區。另一方面，高於 75% 會帶來 性能 可能受到影響的風險。因此我設置了一個黃色和紅色的閾值。綠色區域實際上是一個相對 窄的 帶。\n現在讓我們將上述概念應用於內存利用率。\n一般來說，應用程序傾向於在任何給定時間處理其 工作集 的一部分。該過程並非一直都在觸及其所有內存。結果，剩下的就變成了緩存。這就是為什麼活動 + 緩存超過 95% 是可以的。如果您的 ESXi 顯示為 98%，請不要驚慌。事實上，ESXi 會等到它通過 99% 才會觸發 氣球 進程。 Windows 和 Linux 也在這樣做。現代操作系統正在為您緩存所有這些頁面。因此，您希望將免費頁面保持在低位。\n   規則 說明     包括高速緩存 來賓操作系統使用 RAM 作為高速緩存。如果根據實際使用情況調整操作系統的大小，它將既沒有緩存也沒有空閒內存。它將開始分頁為 Cache 和 Free 騰出空間，這可能會導致性能問題。因此，這個提議的計數器的名稱不應稱為需求，因為它包含的不僅僅是未滿足的需求。這是操作系統在沒有大量分頁的情況下運行所需要的。因此，要使用的計數器的名稱是 Memory Needed，而不是 Memory Demand。   不包括頁面文件 包含頁面文件會導致大小過於保守，因為 Windows 和 Linux 甚至在它們的 In Use 計數器中都有緩存。 Guest OS 使用虛擬 RAM 和物理 RAM。當由於內存映射文件沒有真正的需求時，它們會主動分頁和預取頁。這使得無法確定未滿足的需求。 Page Vault 不區分真實需求和活躍需求。   不要回到VM指標 因為我們正在調整客戶操作系統的大小，所以我們只使用客戶操作系統。沒有回退到 VM，因為它不准確。   排除延遲 RAM 爭用衡量延遲，因此不適用。我們測量的是磁盤空間，而不是延遲。空間，而不是速度。利用率，而不是性能。    與 CPU 不同，Windows 和 Linux 在內存方面有更多不同。\n對於 vRealize Operations 的特定實施，請查看 這篇文章 by Brandon Gordon.\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/1.2.12-root-cause-analysis/","title":"12. 根本原因分析","tags":[],"description":"","content":"有很多事情可能會出錯，尤其是在製作過程中和休假前夕。另一方面，您可以更改的設置相對有限。\n我假設您已經遵循了配置最佳實踐，因為這本身就是一個很大的話題。您需要查看並應用 Windows、Linux、vSphere、NSX、vSAN、服務器硬件和網絡硬件性能最佳實踐。如果您使用 Horizo​​​​n，那麼您還需要應用其最佳實踐，以及您的 VDI 架構中使用的第 3 方技術。在具有多個版本和供應商的大型環境中，可能很難確保整個堆棧兼容。這是一項永無止境的工作，因為您需要跟上版本和產品的生命週期。\n假設你已經完成了所有的配置檢查，那麼你能做的剩下的事情就相當有限了。對於性能問題，它基本上歸結為容量，虛擬機容量或基礎設施容量。\nvMotion 作為一個主題不斷出現。如果您的應用程序團隊有顧慮，這篇 文章深入探討了它的工作原理和 這 介紹了 vSphere 7 中的增強功能。\n根本原因分析 報告因客戶而異，即使他們解決的問題本質上是相同的。報告中排名第一的內容應該是什麼？\n報告的主要內容應該是設置為跟踪以防再次出現問題的警報。如果不設置此警報，您將無法檢測到問題，並且可能會浪費寶貴的時間。\n根本原因很可能與症狀不同。它可能完全發生在不同的對像上，並且錯誤消息可能看似無關。根本原因通常以日誌消息開始，這意味著它沒有作為正式警報冒泡到屏幕 (UI) 中。當供應商支持團隊向您推薦要捕獲的特定日誌消息時，您如何驗證它是正確的？\n您需要確保警報有效。這意味著它不應導致誤報。\n讓我們舉個例子。這是一個VDI 大規模斷開連接問題，其中 \u0026gt;100 個用戶的會話同時斷開連接。分析認為問題出在“正在恢復DV端口的流量”，所以當它再次出現時我們需要捕獲這個消息。\n您需要做的第一件事是驗證上述警報。使用 Log Insight 之類的工具，您可以針對整個環境交叉檢查消息，尤其是健康環境（在本例中為未受影響的用戶）。理想情況下，您可以交叉檢查整個星期，而不僅僅是在事件發生期間。\n以下是我在過去五個工作日內對所有用戶進行交叉檢查的結果。它發生了 1000 多次，這意味著“恢復 DV 端口上的流量”不是我應該基於警報的消息。他們太多了，並且在辦公時間之後有一個明確的模式。\n"},{"uri":"/vmware-operations-guide/zh-tw/","title":"VMware 操作指南","tags":[],"description":"","content":""},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.1-complaint-based-operations/","title":"1. 基於投訴的運營","tags":[],"description":"","content":"您如何知道基礎設施即服務 (IaaS) 平台（無論是在本地還是在雲中）正在為其工作負載提供 好 ？如果您依賴投訴，那麼您將運行基於投訴的運營。\n不幸的是，從被動轉變為主動是一項複雜的工作，尤其是在有許多角色和角色的大型組織中。這需要 運營轉型 和範式轉變. 讓客戶同意【服務水平協議】並不容易 SLA (SLA) 當你已經承諾他們“好”多年時。本書旨在提供實用指導，您可以使用當前版本的 vRealize 產品實施這些指導。\n這 指標 下內容可幫助您評估 IaaS 的成熟度。\n您的客戶是否責怪您的基礎設施？ 如果答案是肯定的，請花點時間思考原因。您可能會在運營中依賴投訴，因此您實際上是在鼓勵他們。沒有抱怨，沒有問題。這就是為什麼它被恰當地命名為基於投訴的操作。\n您依賴投訴的原因是運營沒有其他衡量成功的方法。您尚未定義 IaaS 的性能。\n這是本書的目標。\n成熟運營的標誌是您擁有完整、正確、準確的服務水平協議 SLA. 完整意味著您擁有性能SLA和合規性SLA，而不僅僅是可用性SLA。正確意味著 SLA 是在每個付費虛擬機上衡量的，而不是在基礎架構級別。這也意味著您使用了正確的指標。準確意味著必須每 5 分鐘進行一次測量，因為任何超過此時間的間隔都可能會漏掉問題。\n您的 IaaS 是否比公共雲或混合雲便宜？ 基礎設施的商品化意味著您的 IaaS 正在與類似平台（例如 VMware Cloud on AWS 和 Amazon Web Services）進行比較。\n否則，您的 CIO 可能會質疑您的商業價值。擁有內部建築師的原因是可以在考慮薪水後降低成本。\n服務台是否提供良好的一級防禦？ 如果服務台只是將問題傳遞到下一個級別，則需要查看原因。\n幫助台是您的第一道防線。他們不像你那樣技術化。為他們配備一個簡單的儀表板，以便他們可以通過發現以下內容來處理 VM 所有者的投訴：\n 是不是IaaS服務不好VM導致的問題？ 如果是，基礎設施的哪一部分：CPU、RAM、磁盤、網絡？ 如果不是，如何證明令人信服？  當利用率 不 高時，你能證明新基礎設施的合理性嗎？ 這不是指新項目帶來的額外資金。這是指現有集群/存儲上的現有工作負載。\n容量是根據利用率和性能來衡量的。如果不能很好地為 VM 提供服務，則集群容量已滿。由於購買硬件需要時間，因此您需要一個 警報 系統來檢測這種性能下降。\n您是否被許多過度配置的虛擬機所困擾？ 這是一個指標，表明您是作為系統構建商而不是服務提供商運營的。作為系統構建者，您正在干預每個系統（閱讀：應用程序）。您調整它們的大小並與應用程序團隊爭論他們實際上是您的客戶。你很忙，因為有很多應用程序，你有很多人。\n如果您作為內部雲服務提供商運營 CSP, 您不會“妨礙”業務。您使用有效的定價模型來推動正確的行為。公有云提供商會不會阻止應用團隊購買 40 個 CPU 虛擬機，而他們只需要 2 個 CPU？ AWS EC2 他們沒有，所以你也不應該。\n故障排除是否意味著所有部門都參與其中？ 您是否有所有團隊（網絡、存儲、服務器、操作系統、應用程序）都遵循的流程？該過程是否以根本原因分析結束？\n作為 RCA 的一部分，您是否設置了警報，以便在再次出現相同問題時可以更快地檢測到它？如果未配置警報，RCA 將不會關閉。警報也很重要，因為它會觸發 RCA 過程。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.2-purpose-driven-architecture/","title":"2. 目的驅動架構","tags":[],"description":"","content":"當您構建 IaaS 或桌面即服務時 (DaaS), 你的目標是什麼？我不是指設計方面的考慮，例如可用性和性能最佳實踐。我的意思是你的架構必須交付的 業務結果，從為架構付費的人來看。\n從邏輯上講，答案取決於銷售的產品。從廣義上講，您可以出售應用程序或基礎設施。\n對於應用程序，下表顯示了各種服務。\n在 DaaS 的情況下，目標是確保最終用戶獲得高質量的桌面體驗，同時保持每個用戶的低價格。我們將對此進行更多討論 這裡.\n讓我們深入了解 IaaS 業務。 IaaS 有三種變體。每個銷售不同的項目，所以目標不可能相同。\n   服務 你在賣什麼 例子     IaaS 2個變種:\n虛擬機: VMware 企業客戶中最常見的服務。大多數服務都是“免費”提供的，很少或沒有報銷.\n資源: 計算或存儲資源塊，例如100 GHz CPU 和100 GB RAM. AWS EC2 是企業外最受歡迎的.   HWaaS 硬件即服務.\n這不是 IaaS，因為客戶購買了整個物理 ESXi 主機並擁有自己的 vCenter Server。 VMC.    IaaS 最流行的變體是虛擬機即服務。在此變體中，業務目標是確保應用程序和 VM (VM) 運行 **且經濟高效。 **\n成本部分很容易量化。你知道你在硬件、軟件、服務和薪水上的花費。 運行良好 中的“井”是困難的部分，因為存在很大的未知數。\n我們以 IaaS 為例。假設您正在為 2 個數據中心的 10,000 台虛擬機進行架構設計。你想像一下，第一個月有 2000 台虛擬機，上半年有 5000 台虛擬機，第一年最後是 10,000 台。您是否了解這10,000台虛擬機中每台虛擬機的基本信息，以便您可以構建基礎架構為它們提供良好的服務？\n 他們幾歲？它們的 vCPU、RAM 和磁盤配置是什麼？ 他們有多激烈？ CPU 利用率、RAM 利用率、磁盤 IOPS、網絡吞吐量？ 他們的工作量模式是什麼？每日、每週、每月、無模式等。  答案顯然是否定的。甚至應用程序團隊也不知道，因為某些應用程序可能尚未開發。他們的供應商可能也不知道，因為用法尚不清楚。\nSDDC 將為所有10,000 台虛擬機提供良好服務的承諾類似於您設計的高速公路將為所有汽車、公共汽車和摩托車提供良好服務的承諾，我們無法預測將使用多少虛擬機以及使用多少虛擬機他們將使用它的頻率的虛擬機。我們將在 Performance 部分詳細介紹這一點。\n那麼我們如何保證您的 IaaS 將為您的客戶提供良好的服務？\n我們可以使用性價比。您與客戶分享的原則是所有服務行業都使用的常識：\n 你想要便宜；它不會很快。你想快點；它不會便宜。\n 這是您將 服務等級 與 服務水平協議 一起. 最高級別的服務可提供最佳的正常運行時間和性能，但也是有代價的。所有這些屬性在 SLA 中都有很好的定義，沒有任何歧義。合同不受解釋。您預先定義所有關鍵指標，向您的客戶保證您有信心按承諾交付。\n然後，您可以構建 IaaS 來提供上述服務類別。服務水平成為您的業務產品。有了這個，你就可以開始思考結局了。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.3-multi-cloud-operations/","title":"3. 多雲基礎設施運營","tags":[],"description":"","content":"如果您的組織正在努力運行多雲操作，請不要氣餒。單個私有云（您可以完全控制）已經很難運行，更不用說運行多個不兼容的基礎架構了。複雜性是由於架構缺乏成熟度。涉及的組件太多了，如圖 圖表 由雲原生計算基金會提供。\n但最終，結構會慢慢成熟並成為商品。 CIO 將開始關注運營，因為業務將需要使用 SLA 進行適當的治理。\n無論底層系統架構如何，CIO 仍然需要管理成本、容量、合規性、性能和可用性。運營支柱不會因為你改變管道而改變。我們將涵蓋更多這些支柱 這裡.\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.4-begin-with-the-end-in-mind/","title":"4. 開始思考如何結束","tags":[],"description":"","content":"對我來說，架構是第一天，運營是第二天。第 1 天發生在第 2 天之前。架構是指詳細的工作，包括構建和調試系統。雖然高級市場結構 [^1] 是在第 0 天（規劃）定義的，但真正的架構工作是在第 1 天完成的。\n但是，如果我們深入思考，第 2 天會影響第 0 天，這就是計劃。原因是最終狀態驅動您的計劃。您的計劃驅動您的架構。所以它是 2 -\u0026gt; 0 -\u0026gt; 1，而不是 0 -\u0026gt; 1 -\u0026gt; 2。\n讓我們用一個例子來說明第 2 天如何影響第 0 天，進而影響第 1 天。\n假設您是內部雲提供商併計劃按 VM 收費。您計劃提供兩種類型的產品：\n 金牌：適用於生產工作負載。性能優化。 銀：適用於非生產工作負載。成本優化。  對於 金子，您計劃不過度使用 CPU 和 RAM。如果 1 個 CPU 通常使用 4 GB RAM，那麼 40 核 ESXi 主機將只需要 160 GB。如果您購買具有 1 TB RAM 的主機，那麼您最終可能無法出售剩餘的 864 GB，因為您沒有可出售的 vCPU。這意味著您的硬件規格會受到影響。這是第 2 天如何影響第 0 天的示例。\n對於 銀，您計劃為 CPU 過量使用 4:1，為內存過量使用 2:1。\n 您假設 1 個 vCPU 通常使用 4 GB RAM。您的客戶可以購買更多或更少的內存，因此 CPU 和 RAM 之間的 4:1 比率只是您的規劃指南。 您計劃使用重複數據刪除 + NSX + vSphere Replication 來運行 vSAN。您還需要大量 IO VM，這需要內核處理。對於所有這些支持的非業務工作負載，您分配了 8 個內核和 64 GB RAM。 -如果您購買 64 核 ESXi，剩餘 56 核，您將能夠銷售 224 個 vCPU。 這 224 個 vCPU 將需要 896 GB RAM。由於您過量使用 2:1，因此 VM 需要 448 GB。您需要的總 RAM 為 448 + 64 = 512 GB。 這意味著您需要的硬件規格是 64 核和 512 GB RAM。如果您購買的 RAM 超過此數量，您可能無法出售這些額外的 RAM，因為您可能沒有 vCPU 伴隨它們。  以上 2 個示例展示瞭如何在不考慮平均 VM 配置文件和計劃的過載率的情況下確定硬件規格。\n您還在研究黃金可用區的概念，因為它們託管關鍵任務業務服務。您公司的 業務連續性 政策規定，如果整個集群發生故障，您計劃限制受影響的 VM 數量。如果您限制為 300 個生產虛擬機，那麼您的集群大小不應太大，因為您將無法充分利用資源。我見過許多運行 1000-2000 個虛擬機的 32 節點生產集群。\n在您的服務產品中，您可以讓客戶檢查自己的 VM 運行狀況，以及底層平台如何為他們的 VM 提供服務。這意味著您的架構需要知道如何將租戶與其虛擬機相關聯。您需要有一個標記標準，例如業務單位、部門、聯繫人姓名。\n您的 CIO 希望向他的同事提供實時信息，以了解 IT 如何為業務服務。這需要您考慮關鍵績效指標KPI (KPI)[^2]. 您如何知道IaaS 對其消費者而言執行得足夠快？您如何證明您符合服務水平協議 SLA (SLA) 你承諾了？\n從性能管理的角度來看，vSphere 集群是資源的最小邏輯構建塊。雖然資源池和 VM 主機關聯可以提供更小的切片，但它們操作複雜，無法提供承諾的 IaaS 服務質量。資源池無法提供差異化​​的服務類別。例如，您的 SLA 規定黃金的速度是白銀的兩倍，因為它的收費高 200%。資源池可以給Gold兩倍的份額。無法提前確定這些額外的份額是否會轉化為一半的 CPU 就緒狀態。\n在您的運營中反映您的業務非常重要。創建一個層次結構，運營團隊和租戶可以在其中輕鬆找到相關的 VM。這些用戶將由業務應用程序驅動，因此您的 IaaS 需要圍繞此進行設計。以下結構將業務單位顯示為頂級文件夾。每個業務單元可以有 1 個或多個部門（業務單元 C 跨越下圖中的 3 個部門）。每個部門都有多個業務應用程序。業務應用通常由多層組成（例如，Web 層、應用層、數據庫層）。\n上述限制為重組。您需要重命名，將文件夾移動到新的父文件夾並刪除該文件夾。例如，如果業務單位 B 與業務單位 C 合併，並且合併的實體有一個新名稱，則需要重命名並刪除另一個名稱。\n最後但並非最不重要的是，您需要考慮問題。真正的問題發生在第 2 天，因為當時您有一個用於創收交易的業務工作負載。不要設計你不想解決的問題。考慮運行您的架構所需的角色和技能。為每個組件提供必要的可見性 [^3]，並定義構成健康、風險和效率的內容。\n我希望上面的例子表明第 2 天是您想要開始的地方。從頭到尾，有句名言 引用.\n您是否注意到上述討論中遺漏了什麼？\n是的，我沒有涵蓋 自動化。\n這是為什麼？\n對我來說，那是建築的一部分。你不應該自動化你無法操作的事情。因此，自動化不是運營的一部分。自動化是您架構的一個特性，這意味著您在設計系統時已經考慮了自動化。例如，它就像一架具有許多自動化功能的飛機。有線飛行。這是飛機的特點。如何操作飛機，讓乘客安全、舒適、準時到達目的地，這就是操作。\n[^1]：營銷結構。對缺乏細節的基於 PowerPoint 的圖表的簡單參考。 [^2]：我理解SLI、SLO、SLA、KAI和KPI的區別。出於 PCMCIA 的原因（人們無法管理計算機行業首字母縮略詞），不使用 SLI 和 SLO。精度很好。但是使用過多的行話會增加複雜性。 [^3]：有些人使用了可觀察性這個術語，並導致與監控不必要的混淆。這是 PCMCIA 的另一個例子。如果我們真的要分開頭髮，那麼可調試性這個詞就更有價值了，因為可以觀察到系統並不意味著它是可調試的。\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.5-vcdx-vs-vcox/","title":"5. VCDX 關係到 VCOX","tags":[],"description":"","content":"架構和運營是兩個同樣大的領域。雖然我們在設計系統時當然會考慮運維，但它不是架構的一部分。這本書是一個操作示例。請注意，它深入到指標中，因為故障排除是操作的核心。\n架構和運營在其他行業也有所不同。設計航天飛機的人不是操作它的人。你需要成為一名宇航員才有資格操作航天飛機。設計 F1 賽車的人不是駕駛它的人。需要不同的專業知識。它們相輔相成，相互依存，如 陰陽.\n由於基礎設施正在成為一種服務，您需要知道如何構建服務（例如，IaaS、數據庫即服務、桌面即服務）。\n IaaS 提供哪些服務？你如何定義服務？ 你用什麼指標來量化它的質量？ 有多少服務？您如何區分優質服務和普通服務？  您還需要了解按需提供的服務類型。服務架構師走出去與客戶會面以了解他們的需求。您現在和將來需要什麼樣的性價比？從那裡，您可以構建相應的服務來預測需求。\n作為業務架構師，您不僅知道運行服務的成本，還知道如何以及何時實現盈虧平衡。您不對盈虧負責，因為您不是雲服務提供商的 CIO 或 CEO，但您確實是他們的戰略顧問。您知道如何定價，如何定價，最重要的是您的價格具有競爭力（至少您可以提供商業理由）。\n從我與客戶的互動中，我注意到基礎架構架構師並沒有領導 Day 0 階段。他們為規劃階段提供輸入，但不是驅動它的首席架構師。基礎架構架構師傾向於關注 技術 位，CFO 和 CIO 不太重視（因此他們花在這上面的時間較少）。他們也不架構操作。我看到許多經驗豐富的 VMware 架構師並沒有將他們的影響力擴展到架構之外。我認為這是一個失去的機會，因為第 1 天和第 2 天實際上是同一方的一部分。把它想像成 莫比烏斯帶.\n受 VCDX 計劃的啟發，多雲運營領域可能需要 VCOX 計劃。我們需要編寫指南。這就是我開源本書的原因，因此所有運營專家都可以協作並產生最佳運營實踐。\n服務架構師和業務架構師是基礎架構架構師的下一步。我在 2014 年的一次演講中分享了一位廚師和他的烹飪故事。 VMUG session.\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.6-the-restaurant-analogy/","title":"6. 餐廳類比","tags":[],"description":"","content":"我們已經描述了數據中心管理的各個方面是如何發生變化的。如果您需要更多信息，請參閱本章。這些根本性的變化也將改變您的 IT 業務。您現在是服務提供商。儘管您的工程或技術知識仍然很重要，但您的客戶會根據您的業務服務水平來衡量您。儘管他們關心您的系統架構及其功能，但他們衡量的是您的服務質量。\nSunny Dua1 在解釋正式服務水平協議的必要性時，我們使用餐廳類比SLA (SLA). 這個比喻引起了許多客戶的共鳴。人類總是與食物有關！\n從本質上講，一家餐廳有 2 個區域，通常有明確的分界線：\n 用餐區。 廚房。  將您的 IaaS 業務想像成餐廳業務。它有一個用餐區，您的顧客住在那裡，還有一個廚房，您可以在那裡準備食物。猜猜哪個更重要？\n你是對的。用餐區。\n如果就餐區一切順利，顧客得到準時和優質的服務，他們付給你的錢，這對企業來說是個好日子。你是否在熱廚房裡跑來跑去是一個單獨的內部問題。客戶不需要知道它。\n我們使用類比來傳達這樣的信息，即您需要首先關注客戶，然後才是您的 IaaS。如果您很好地照顧您的客戶，並且他們對您的服務感到滿意，那麼您在 IaaS 中遇到的問題就是次要的內部問題。\n “用餐區”是消費者層。看下圖。這是您客戶的虛擬機所在的位置。 “廚房”是提供者層。這是您的基礎架構層，VMware 和硬件駐留於此。  公共雲是廚房的一部分。僅僅因為您不再擁有基礎設施並不意味著您不能承擔管理責任。企業 IT 的結構意味著基礎架構團隊最終要承擔責任。\n兩層樓之間顯然有一條分界線。您的客戶不應關心您的 SDDC 或 EUC 的詳細信息。 VM Owner 並不關心您是否在數據中心滅火。因為他們不在乎，無論您使用的是較舊的 VMware Cloud Foundation 還是最新的，您都不希望他們給您發號施令。您選擇的硬件品牌和規格也是如此。\n應用程序團隊成為共享服務雲平台的消費者。根據 SLA，應用程序團隊可以被視為擁有對基礎設施的專用訪問權，或者他們可以降低性能以換取性能損失。為了保證性能 SLA，集群中運行的 VM 不應受到任何其他 VM 的影響。性能必須與 ESXi 中運行的唯一虛擬機一樣好。\n讓我們專注於廚房區域，因為它也在經歷轉型。服務器、Windows 或 Linux 團隊通常擁有共享平台的所有權，並演變為平台團隊。隨著超融合基礎設施 HCI, 的發展，存儲正在被吸收到平台中。網絡團隊的邊界也正在與網絡虛擬化相結合。許多網絡服務（例如防火牆和負載平衡器）都是虛擬化的。\n  Sunny和我有著悠久的歷史. 我們都來自這個領域，最終成為了產品經理。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.7-service-level-agreement/","title":"7. 服務水平協議","tags":[],"description":"","content":"企業級雲和非企業級雲之間的區別在於 SLA。雲提供商可以聲明他們擁有最好的技術、最有經驗的專業人員、最具創新性的流程、行業認證等，以證明他們是最好的。如果他們害怕在他們的合同中用 SLA 來支持它，那麼所有這些都將無濟於事。 SLA 使客戶能夠追究雲提供商的責任，因為它會帶來經濟損失。\n一旦定義了 SLA，客戶就想知道它將如何交付。這就是流程、架構、認證等的用武之地。什麼總是在如何之前。\nIaaS 的 4 個 SLA IaaS 企業應提供三個 SLA，因為客戶需要全面覆蓋。\n   SLA 描述     可用性 這是最基本的SLA。它是最古老和最知名的。事實上，這在很大程度上是給定的。事實上，商定的數字是多少並不重要。如果這該死的事情失敗了，你最好在有人抱怨或事情變得更糟之前迅速提出來！   性能 SLA 僅僅因為發生了一些事情並不意味著它會很快。虛擬機是可以啟動的，但是如果服務太慢，那就關掉就好了。性能 SLA 涵蓋了這一點並解決了基於投訴的操作 CBO 通過定義什麼是快速的。它涵蓋了CPU、內存、磁盤和網絡，因此使用了四個指標。   遵守 這為行業法規或認證提供了安全合規性。   服務 以上三個SLA是由技術提供的。它們需要得到人類提供的服務的補充。這應該涵蓋主動和被動服務。兩個流行的例子是響應時間和解決時間。    KPI vs. SLA KPI 和 SLA 齊頭並進。\n   首字母縮略詞 描述     SLA 您與客戶簽訂的正式商業合同。通常，這是在 IaaS 提供商（基礎架構團隊）和 IaaS 消費者（應用程序團隊或業務部門）之間進行的。正式的SLA 需要運營轉型OT. 它需要的不僅僅是技術更改，因為您需要查看合同、價格（不僅僅是成本）流程、人員等。如果違反 SLA，它往往會受到經濟處罰，例如下一個計費周期的信用。   KPI 這包括 SLA 指標，以及在違反 SLA 指標之前提供預警的相關附加指標。一個給定的 SLA 有很多 KPI，而 KPI 是 SLA 的先決條件。如果您沒有適當的 SLA，那麼在提交 SLA 之前先從內部 KPI 開始。首先了解並分析 你的IaaS的實際性能。使用 此處 中描述的分析技術，我分析了超過一百萬個數據點。    SLA 是 每月 計數器，而不是每天或每年。您使用整個月的數據來計算它。\n時間線很重要。在下表中，請注意一年中的 99.999% 實際上比一周中的 99.95% 容易。您的客戶不會接受年度櫃檯，因為他們可能面臨長時間停機。你不會接受每日櫃檯，因為沒有錯誤的餘地。月度計數器在服務質量和提供服務的成本之間提供平衡。它還使報告更容易，因為您只需要跟踪日曆月。\n每添加一個“9”，您的停機時間窗口就會減少 10 倍。這就是為什麼每個小數會花費更多的錢，因為可能需要不同的結構。\n即使您每月測量一次 SLA，仍然難以滿足。看看下表。為簡單起見，我們將使用可用性 SLA 而不是性能 SLA，因為 up 或 down 是一個簡單的二進製文件。\n如果您承諾 99.99%，那麼您每個日曆月只有 4.0 分鐘到 4.5 分鐘的停機時間。這意味著您的架構必須能夠檢測到問題，然後在短短幾分鐘內完成相應的修復。這是一個狹窄的操作空間。\n適用於可用性但不適用於性能的獨特節省寬限期是計劃停機時間。沒有計劃的性能停機時間這樣的事情。特定於 IaaS，您可以建議計劃停機時間不包括在 SLA 中，只要它快速且很少完成即可。 VM 硬件升級、工具升級和 Windows 升級等計劃活動可以包含在計劃停機活動中。客戶造成的停機時間不包括在內，無論是否有意。這就是為什麼您需要兩個計數器：一個用於 SLA，一個用於實際。實際上，每次停機都會被記錄下來，無論它是否屬於 SLA 的一部分。\n影響可用性但不影響性能的挑戰是恢復時間。您的系統可能會在 1 分鐘內檢測到 VM 已關閉，但是整個操作系統啟動並正常運行之前的重啟過程需要 5 分鐘，因為它需要執行文件系統一致性檢查。\nKPI 是對 SLA 的補充，因為它跟踪的強度更大，涵蓋更多的計數器和事件。使用 vRealize Log Insight 處理更多時間敏感事件，因為 vRealize Operations 每 5 分鐘測量一次。\n從上表中，請注意不包括來賓操作系統計數器，因為它是“應用程序 KPI”或 VM KPI 的一部分，而不是 IaaS KPI。它們會影響 VM 性能，但 IaaS 無能為力，這意味著修復是在來賓 OS 層完成的。\nKPI 還通過為您的運營轉型提供墊腳石來補充 SLA。這是真正的業務 SLA 操作的必要步驟。\n你從你站的地方走。首先使用 KPI。隨著時間的推移，確定您的實際可用性\n服务水平 下表顯示了服務級別的基本和一般準則。考慮到技術和業務需求，您將實施的實際模型肯定會有所不同。在 容量管理部分, 讓我們回顧一個實際的例子。\n上表由他們的 SLA 進一步定義，因為您需要量化 10% 懲罰的確切含義。\n金子 級別的 SLA 高於 銀 級別。為此，這意味著它們是根據相同的基准進行衡量的。\n 對於可用性，您可以根據理想情況衡量所有課程，即沒有停機時間。 對於性能，您可以根據相同的閾值來衡量它們，這是一個嚴格的（讀取：快速）數字。 對於合規性，您可以根據理想情況來衡量它們，即完美的合規性。 對於服務，您根據理想來衡量它們，這是最好的服務。  性能 SLA 讓我們詳細說明性能 SLA，因為它比其他兩個更複雜。\n根據上圖，您提供 99.9% 金子 和 99% 銀 作為相應的 SLA。\n對於黃金高於白銀，這意味著兩者都是根據_相同的原始閾值_來衡量的。換句話說，銀色環境中的虛擬機期望它不會像黃金環境中的虛擬機那樣頻繁地得到它需要的東西。如果 VM Owner 在性能方面想要更多 可靠的 服務，那麼只需支付更多費用併升級到 金子 集群。\n這種方法比為每一層設置不同的性能閾值更容易。假設您設置了以下內容：\n 金子: 虛擬機內存爭用： 0.5% 銀: 虛擬機內存爭用： 1.5%  你已經註意到問題了嗎？\n很難解釋服務類別之間的增量或差距。為什麼銀價只有一半，價值卻是原來的三倍？不應該是成比例的嗎？\n還有第二個問題。如果你設置_不同的_標準，白銀的表現可能會比黃金好，因為它的標準較低。這會造成混亂。\n在操作上，設置單一閾值更容易。無需使用 vRealize Operations 策略。由於 SLA 閾值相同，您還可以在同一集群或數據存儲中使用混合類 VM。\n我們將詳細介紹性能 SLA 中使用的計數器 這裡.\n差異化服務 IaaS 建立在商品硬件上，並作為實用程序提供。話雖如此，有很多方法可以讓您的服務與競爭對手區分開來。使用服務級別來區分高質量的服務。下表列出了一些示例。\n   服務 描述     備份 黃金級 提供應用程序級別的備份。它還提供更頻繁的完整備份，並為客戶提供自助式個人文件恢復。   高可用性 黃金級 提供應用程序級別的監控。客戶還可以要求他們的 VM 的特定啟動順序，並要求 VM-Host 關聯規則以最小化風險。   災難恢復 黃金級提供較低的 RPO 和 RTO。客戶還有權進行年度實際測試，其中生產工作負載從 DR 站點運行。   快照 黃金級 提供更長的快照和更大的快照。   操作系統管理 黃金級 提供了打補丁的靈活性。客戶可以指定補丁延遲和自定義補丁包請求，其中並非所有來自 Microsoft 或 Red Hat 的補丁都適用。   虛擬機管理 黃金級 提供更新工具和 VM 硬件的靈活性。允許客戶推遲更新   監控服務 黃金級虛擬機將受到主動監控，而不僅僅是依靠警報。黃金層提供對運行客戶虛擬機的底層物理基礎架構的更深入的可見性。客戶有權獲得較低的內部指標，例如 vMotion 眩暈時間和 VMkernel 延遲。黃金層提供自助服務監控。客戶可以自己登錄到一個門戶網站，在那裡他們可以監控自己的虛擬機。他們可以啟動預定的停機時間。客戶將通過電子郵件和消息網絡收到警報。   支持 黃金級提供更快的響應時間、更長的工作時間和更快的解決時間。   網絡 黃金級 提供優先網絡。客戶可以選擇定期 ping 服務，以確保其應用程序之間的網絡延遲保持在商定的閾值內。   譚 黃金級 配備一名技術客戶經理，作為客戶的單點聯繫方式    "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.8-pillar-process-people/","title":"8. 支柱、流程和人員","tags":[],"description":"","content":"你管理什麼，實際上？你的客戶希望你照顧什麼？你如何管理你需要管理的東西？\n最基本的是您需要了解環境。有數以千計的對象（例如 VM、應用程序、防火牆）具有復雜的關係和相互依賴關係。庫存給你這個。這就是為什麼它是下圖中的第一個框的原因。我有一家大型電信公司告訴我，他們的整個 DC 可能會宕機（比如計劃的 DR 練習），但 vRealize Operations 不會，因為這就是他們監控宕機時間的方式。\n一旦你知道你在管理什麼，你就可以繼續確保他們健康。如果沒有問題，那麼您將著手解決潛在的問題。如果沒有風險，那麼您會尋求優化。\n健康 健康實際上很難定義，因為它取決於上下文和對象。英語中的“健康”這個詞本身就需要解釋一下。因此，最好定義並映射到操作的支柱。系統健康是當前的運行狀態。它涵蓋了已經發生和/或仍在進行中的實際問題。\n有兩個問題會影響健康：\n 可用性 性能  可用性和性能可以相互排斥，但兩者都會影響健康。如果沒有其他問題，您可能會遇到 1 個問題。\n風險 風險就是未來。它涵蓋了潛在的問題。目前沒有問題，但如果你不採取行動，就會增加它成為問題的風險。\n有 3 個問題會在運營中產生風險：\n 遵守 配置 容量  在上述所有問題中，由於不存在實際性能、可用​​​​性或安全問題，因此健康不會受到影響。您面臨的是風險，因為您的應用程序和操作會繼續進行，就好像什麼都沒發生一樣。您的客戶可能不會注意到，您的業務也不會受到影響。\n效率 效率就是優化。目前沒有問題，也不存在將來出現問題的風險。您希望進行優化，因為它可以降低成本並提高性能。\n 浪費（超大、未使用的 EC2、空閒、未映射的磁盤空間、孤立文件等） 成本。將您的成本與其他雲提供商進行比較，因為 IaaS 本質上是一種商品。 綠色運營符合效率，因為可持續運營需要精益運營。  運營支柱 運營管理的最佳實踐要求您區分支柱和流程。支柱是您需要管理的，而流程是您管理它們的方式。\n每個支柱都是一個單獨的管理單元。它們代表單獨的學科並且彼此兼容。每個支柱的複雜性取決於技術，例如，vSAN 容量比中央陣列更具動態性。在 vSAN 中，更改存儲策略可能會導致突然激增。 流程是每個支柱內的活動。它需要角色和職責，這些都記錄在政策中。\n第 0 天是您計劃和定義預期結果的階段。一些公司執行壓力測試和負載測試，因此他們知道實際負載實際發生時會發生什麼。沒有計劃和測試，你不知道現實會是什麼，因為你沒有定義“好”。\n第 1 天是您構建系統和啟動服務的階段。這包括配置各種操作輸入，例如成本驅動因素（例如應用許可證成本、電費）。由於本書的重點是第 2 天，因此上表中不包括第 1 天。\n監控和故障排除是活動。他們不是你管理的東西。在監控中，您有標準操作程序 SOP (SOP), 它定義了哪些角色執行哪些檢查。你首先專注於洞察力，然後才是警覺。故障排除不僅僅是簡單的“發現”，也不僅僅是收集事實。它側重於原因，然後製定解決方案以防止未來發生事故。事件意味著某些東西已經死亡、緩慢或被破壞。您對可用性、性能和安全性進行故障排除。\n庫存是你擁有的東西，而不是你計劃的東西。您計劃具有特定配置的容量。庫存僅說明您擁有的東西。無需進行故障排除或優化。\n優化帶來了許多實際的好處和真正的業務成果。這裡是其中的一些：\n我敢肯定還有更多。用你的真實世界經驗給我留言！\n相互依存 運營管理的支柱是相互依存的。了解關係與了解每個支柱一樣重要。關係很重要，因為症狀和根本原因通常是兩個不同的事情。性能問題可能是由配置問題引起的，例如配置過時或版本不兼容。\n以上圖為參考，讓我們詳細說明每個支柱。\n可用性 運營管理中最基本的部分，因為如果整個環境出現故障，其餘的 7 個運營支柱實際上都無關緊要。\n有一系列可用性解決方案，從快照、備份、HA、FT 和 SRM。每個都會對容量和性能產生影響。\n可用性考慮 HA（高可用性）設置。因此，計劃內停機（例如 ESXi 處於維護模式）不會影響可用性值。\n可用性如果做得好，不會影響容量和性能，因為它已經作為設計的一部分考慮在內。是的，這意味著您需要包括由 DR 事件引起的潛在工作負載。\n可用性 SLA 越高，服務的價格就越高。每增加 9 個可用性就會有很大的增加。五個 9 的可用性比四個 9 的成本高得多。\n性能 \u0026amp; 容量 性能和能力是密切相關、相互依存的，但又不完全相同，因此經常被另一個誤認為。\n在較大的組織中，它們通常由兩個不同的團隊管理。容量團隊不參與日常運營，因為他們專注於更長期的資源可用性。容量 規劃 是在不影響性能的情況下最大化利用率。它還考慮了潛在的工作負載和未來的需求，這是性能 未 考慮的。\n容量團隊可能不具備對性能進行故障排除的技術技能。另一方面，日常運營處理數據中心的“地板上的東西”。他們的主要重點是滿足應用程序的需求。它是消費者驅動的，而容量是提供者驅動的。\n性能受能力影響，因為能力不足往往是性能不佳的原因。\n容量受性能影響，因為它需要先考慮爭用計數器，然後再考慮利用率。如果您不能滿足現有需求，那麼您將不會配置新的工作負載，因此容量實際上已滿。利用率計數器可能還不高，但這是次要考慮因素，因為您在弄清楚原因之前停止添加新工作負載。\n性能比容量更具有時間敏感性和重要性。管理性能第一，容量第二。使用餐廳類比, 您首先關注用餐區，然後是廚房。\n性能 和 容量 是相反的關係。在最低容量下實現最高的整體性能，因為此時 VM 或 Infra 交付的工作量最大。\n成本 \u0026amp; 價格 隨著硬件成為商品，基礎設施變得無形，價格自然成為所有 IaaS 供應商的共同標準。普遍的預期是每個虛擬機的價格在不同的雲提供商中是相似的。提供差異化​​定價的一種方法是 SLA。\n雖然價格應該高於成本，但它可以獨立於成本設置。使用折扣和累進定價為正確的條款和條件設置正確的價格。漸進式定價也將阻止首先配置大型未使用的虛擬機。與這些 VM 已經投入生產相比，它更容易處理。\n成本與容量密切相關。 IaaS 的利用率越高，每個 VM 的成本就越低。成本與容量是分開的，因為它可以在不減少容量的情況下進行優化。\n成本和容量也可以相互獨立。您可以通過技術更新在不增加成本的情況下增加容量。您可以通過降低非容量成本（例如您為服務支付的費用）來降低成本而不減少容量。\n性能 SLA 越好，客戶願意支付的價格就越高，因此術語價格/性能。\n合規與網絡安全 網絡安全是相關的，但與合規性不同。網絡安全涵蓋攻擊等問題（無論是內部員工還是外部威脅）。合規性處理可能暴露安全漏洞或符合特定標準集的配置設置或值。\n根據內部和行業標準衡量合規性。它也是連續測量的。\n配置 \u0026amp; 清單 清單與配置相關，但不完全相同。配置會影響性能、成本、容量和合規性。因此，它是關鍵點之一 優化評估. 需要在整個堆棧中檢查設置，尤其是較低的堆棧，因為堆棧中的問題會影響其上方的堆棧。\n清單是對你所擁有的東西的記錄。配置是你所擁有的屬性。清單使用一小部分設置，因為重點是計算對象的數量。大多數屬性/設置與庫存無關。\n清單一般會問我們在哪兒有什麼？因此，它專注於數量，而不是規格。例子：\n 集群中的虛擬機數量是清單的一部分。它不是配置的一部分。 群集中的 ESXi 主機數是清單的一部分。但它也是配置的一部分，因為這是該集群的設計。集群配置了 8 個 ESXi 主機是有原因的，偏差可能需要在文檔中解釋。  清單具有庫存盤點等概念，通常涉及實物。配置沒有。\n角色和職責 保持運營良好運行需要許多角色。有些直接參與日常運營，而另一些則專注於大局。在小型組織中，角色由相同的少數人扮演，相互支持。你可以讓 3 人做任何沒有結構的事情，或者 300 人有明確的界限。無論如何，工作仍然需要完成，因此記錄所有角色和職責。\n1 級操作 處理生產環境。定期檢查整體環境。使用洞察力和警報。通常不需要讀取日誌。\n負責關閉警報。只有在知道根本原因時才應關閉警報，而不是在症狀消失時關閉。在不知道發生原因的情況下關閉警報會阻止吸取教訓，並可能適得其反。\n按照 SOP 執行簡單的故障排除。 SOP 理想情況下是自動化的，採用輸入參數，因此如果手動步驟的數量或頻率很高，人為錯誤的可能性就會降到最低。\n關注健康，即可用性和性能。\n2 級操作 當級別 1 無法解決問題時激活。對於解決的每個問題，此角色應更新故障排除指南，以便可以授權級別 1。 專注於洞察力，而不是警覺。放眼大局，盡量避免發生警報。\n比 1 級更高級。可能專注於某些領域（例如 vSAN、網絡）。\n執行高級故障排除，這通常需要進行日誌分析。\n領導或參與運營管理工具的評估。設計和維護 vRealize 儀表板和警示。\n關注健康、風險和效率。\n建築學 看看未來。評估新技術並評估是否需要技術更新。\n容量 規劃產能的供應方，與架構師一起工作。\n計劃產能的需求方，與業務線或銷售團隊合作。\n不參與日常工作。 ESXi 主機進入維護模式是一個操作問題，而不是容量管理問題。\n遵守 將合規性設置設置為商定的內部和行業標準。\n驗證運營團隊是否及時、正確地處理了不合規警報。向上級管理層報告和討論合規狀態。\n關注風險（配置、合規性）。\n信息技術管理 這裡可以有多個級別，一直到 CIO。\n看大局，尤其是價格和成本。\n一般不參與故障排除和架構。\n主要關注點是合規性和成本。作為設計的一部分，性能並不像建築師承諾的那樣好。\n運營管理的輸入 有兩種類型的計數器會影響您的日常操作。競爭是性能的主要計數器，而利用率是容量的主要計數器。第三種類型只是提供信息，例如說明您擁有的東西。\n雖然爭用是您關心的問題，但利用更受關注，因為它更易於監控且更易於解釋。有一種趨勢是監控利用率，就好像這是運營的支柱一樣。相同爭用, 利用率不是您管理的事情. 是的，您監控利用率，但出於某種原因進行監控。這只是衡量您關心的事物的一種方式。就其本身而言，它沒有任何意義。意義取決於目的。不同的目標會導致不同的解釋和利用指標。利用率對性能和容量的影響不同。對於性能，您應該查看實際和真實的利用率。對於容量，根據可用容量（在 HA 和緩衝區之後）衡量利用率。\n雖然它們具有負相關性，但在低利用率時仍會發生爭用。當 ESXi 主機未以高利用率運行時，集群中的虛擬機可能會爭用資源。不平衡和不正確的集群配置是導致低利用率爭用的兩個典型原因。 在性能管理一章中進一步解釋了利用和爭用。 性能 管理.\n分配補充了需求，因為新配置的 VM 往往處於空閒狀態（可能長達數月）。此外，需求模型無法檢測到未來的負載，因為它尚不存在。分配模型應該用來補充需求模型。這將在此處進一步解釋。 這裡.\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/1.1.9-insight-vs-alert/","title":"9. 洞察力和警報","tags":[],"description":"","content":"許多操作都是從警報開始的。根據警報採取行動，從而在日常操作中產生反應。為了扭轉這種情況，vRealize Operations 提供了洞察力。洞察力是警報的補充，而不是替代。警報錯過了大局，因為它只能看到已觸發的內容。對於達到此閾值的對象，其下方可能有很多對象。對於警報，可能有許多支持指標顯示潛在的根本原因。想想冰山。海平面以上的小部分，可見的部分，是一個警報。重要且無形的部分是洞察力。\n如果症狀消失，警報可能會自動關閉。當沒有警報與沒有問題相關聯時，這鼓勵“懶惰操作”。 Insight 沒有“自動關機”這個概念，因為它不涉及服務台工單。它記錄了出現問題的事實，某些事情可能會引起警報。理想情況下，您希望在觸發警報之前檢測並解決問題。\n有一種常見的誤解，認為洞察力只是針對同一指標使用不同閾值的警報。所以insight基本上是一個閾值較低的警報。這是有效的，但不完整。以這種方式實施洞察可能會導致警報風暴和大量票證。與警報相比，Insight 最好使用不同的指標，因此您可以獲得不同的視角。\n洞察力應該集中在根本問題上。它還有助於為您爭取時間，以便您可以在用戶抱怨之前解決問題。在以下示例中，警報使用 SLA 指標和閾值。 Insight 使用更精細的指標和支持指標。例如，vMotion 眩暈時間不是您的 SLA 的一部分。\n警報計劃 您的目標是最大限度地減少警報風暴，同時提供最大的覆蓋範圍。這需要仔細規劃警報定義、症狀和閾值。 對於每個警報，問問自己：看到警報的人將採取什麼補救措施？\n 如果答案是什麼，那為什麼會有警報？使用儀表板可以提供更好的畫面。 如果答案是什麼，可以自動化嗎？小心簡化的邏輯，因為計算機沒有常識。 如果答案升級到下一個級別（例如第 2 級支持），則詢問下一個級別的團隊他們更喜歡警報還是儀表板。如果他們的答案是他們需要查看上下文，那麼儀表板更有意義。  您希望通過警報監控哪些區域？運營管理有 7 個支柱，因此在設計警報定義時很容易混淆。\n可用性 您可以通過跟踪軟錯誤、主動更換硬件和確保軟件堆棧兼容性來最大限度地減少被動操作。\n表現 您不是通過使用較低的閾值，而是通過跟踪預警指標來最大限度地減少反應性操作。有關示例，請參見上圖。\n容量 這通常被誤認為是性能問題，因為高利用率是一個常見的警報。\n遵守 這是配置檢查的一個子集，因此該限制是官方安全標準。\n配置 配置比合規性更廣泛。配置錯誤會導致可用性、性能、容量和安全性。例子：\n 可用性。軟件版本之間的不兼容可能會導致中斷。 容量。禁用 CPU SMT 將減少邏輯處理器的數量。 安全。過時的軟件可能包含已知的安全漏洞  成本 您通常不會在此處設置警報，因為使用儀表板進行洞察是更好的監控解決方案。\n清單 您通常不會在此處將警報設置為庫存，它只是您擁有的物品的帳戶。沒有好壞之分。\n 管理警報不同於最小化警報。管理層正在處理已觸發的警報。最小化允許我們從一開始就防止警報。使用洞察力最大限度地減少警報定義，因為警報應保留用於緊急和重要的問題。\n在無法最小化警報的情況下，您可以降低其嚴重性。您不是通過降低閾值來做到這一點，而是通過監控預警事件。比如CPU和網絡硬件級問題的預警。您跟踪此軟錯誤並執行主動替換。\n在嚴重程度無法降低的情況下，您可以減少生產過程中發生的警報數量。您可以通過主動更換作為綠色區域期間計劃停機時間的一部分來做到這一點。例如，固態驅動器 (SSD) 在寫入次數方面沒有無限的使用壽命。製造商有一個耐用性編號。如果您有數千個磁盤，您可以創建一個儀表板來跟踪此限制並為那些接近其限制的磁盤安排活動更換。\n"},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-1-overview/","title":"第 1 - 章概述","tags":[],"description":"","content":"第1章 概述 vSphere 計數器比物理機計數器更複雜，因為有許多組件以及由虛擬化引起的不一致。虛擬化後，基礎架構的 4 個元素（CPU、RAM、磁盤、網絡）的行為 不同。\n新層造成的複雜性，因為它會影響其下方和上方的相鄰層。所以淨效應你需要學習三層。 T這就是為什麼從監控和故障排除的角度來看, 容器 技術需要更深入的知識，因為邊界更不嚴格。想想所有的 問題 您擁有 vSphere 資源池性能故障排除功能，現在可以在進程級別進行細化！\n"},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-1-overview/","title":"第 1 - 章概述","tags":[],"description":"","content":"第1章 概述 第一章 運營管理概論, 讓我們從為什麼反應式操作 常見 開始, 以及所需的範式轉變用於主動和預測性操作。\n 1. 基於投訴的運營   2. 目的驅動架構   3. 多雲基礎設施運營   4. 開始思考如何結束   5. VCDX 關係到 VCOX   6. 餐廳類比   7. 服務水平協議   8. 支柱、流程和人員   9. 洞察力和警報   "},{"uri":"/vmware-operations-guide/zh-tw/dashboards/chapter-1-design-considerations/","title":"第 1 - 章設計注意事項","tags":[],"description":"","content":"第1章 設計注意事項 在設計一套講述故事的儀表板時需要考慮許多因素。\n 1. 儀錶盤|警報 |報告   3. 相互作用   "},{"uri":"/vmware-operations-guide/zh-tw/metrics/chapter-2-cpu-metrics/","title":"第 2 - 章 CPU 衡量指標","tags":[],"description":"","content":"第2章 CPU 衡量指標 這 細微差別 您之前看到的是由於附加層的性質。下面的信息圖顯示了虛擬化帶來的多個元素。它幫助我理解衡量指標，因此分享。\nVM 的 CPU 計數器與來賓操作系統中的不同。例如，vCenter 提供了 5 個計數器來說明 VM CPU 的利用率，但沒有一個直接映射到 Windows/Linux CPU 利用率。 ESXi 中的 CPU 計數器也不僅僅是其正在運行的 VM 和 VMkernel 的總和。\n以下屏幕截圖顯示了 VM 的 CPU 計數器。與Windows等Guest OS相比，您是否注意到缺少什麼和增加了什麼？繼續並打開 Windows PerfMon 或 SysInternal 並進行比較，您會很快發現主要差異。\n馬上，您會注意到 Windows 中不存在流行的計數器，例如 Ready、CoStop 和 Overlap。原因是 VM 和來賓 OS 具有不同的優勢。\n當 VMkernel 取消調度 VM 以處理同一物理線程或內核上的其他內容（例如其他 VM、內核中斷）時，來賓操作系統不知道它為什麼會被中斷。事實上，它會遇到運行在物理核心上的特定 vCPU 的凍結時間。再次安排時間時，時間會跳躍。由於這種獨特的可見性，在正確的層使用正確的衡量指標很重要。以下是來賓操作系統可以看到和看不到的內容：\n不同的有利位置導致不同的計數器。這會在您根據 VM 內部發生的情況確定大小時產生復雜性，但根據 ESXi 上 VM 佔用空間之外發生的情況進行回收。換句話說，您調整來賓操作系統的大小並回收 VM。\n這兩層都需要監控，因為每一層都測量不同的性能問題。因此，必須安裝 VMware Tools，因為 VMkernel 無法提供對來賓操作系統的可見性。默認情況下，VMware Tools 每 20 秒向 ESXi 主機報告有關來賓的統計信息。\n 1. 來賓操作系統   4. 小測驗時間!   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-2-performance-management/","title":"第 2 - 章績效管理","tags":[],"description":"","content":"第2章 績效管理 性能是關於確保工作負載獲得必要的資源。 KPI 可用於識別性能問題並在違反 SLA 之前發出預警。\n 1. 雲管理員生活中的一天   2. 3個領域   3. 計劃 監視器 故障排除 優化   4. 爭用與使用   5. 性能與容量   6. 性能 SLA   7. 關鍵績效指標和服務水平協議   8. 深度和廣度   9. 領先指標   10. 基線分析   11. 優化性能   12. 根本原因分析   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-3-capacity-management/","title":"第 3 - 章容量管理","tags":[],"description":"","content":"第3章 容量管理 容量管理的核心是平衡供需。這是關於以盡可能低的成本滿足需求。\n 1. \u0026#34;好處\u0026#34; 勸告   2. 端到端容量   3. 容量規劃   4. 需求模型   5. 分配模型   6. 可用容量   7. 投影   8. 峰值利用率   9. 存儲容量   10. 優化產能   11. 開墾   12. 調整大小   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-4-configuration-management/","title":"第 4 - 章配置管理","tags":[],"description":"","content":"第 4 章 配置管理 配置管理旨在確保實際配置設置與預期或要求的值相匹配。硬件和軟件產品的配置必須與文檔化的系統架構相同。偏差可能導致安全或合規性問題、性能下降或可用性風險。\n 1. 概述   2. 審核流程   3. 計劃與現實   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-5-cost-management/","title":"第 5 - 章成本管理","tags":[],"description":"","content":"第五章 成本管理 隨著硬件成為商品，基礎設施變得無形，價格已成為所有 IaaS 提供商的通用標準。應用程序可以跨多個雲運行，因此以更便宜的價格運行應用程序。\n 1. 敢比較   2. 價格   3. 成本   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-6-compliance-management/","title":"第 6 - 章合規管理","tags":[],"description":"","content":"第六章 合规管理 一般而言，合規 表示遵守規則，例如規範、 政策, 標准或法律。 在本書的上下文中，合規性與組織建立的安全標準的一致性有關。本章介紹如何使用 vRealize Operations 確保您的組織始終滿足安全團隊要求的安全策略。\n 1. 概述   2. 網絡安全方法   3. 持續合規   4. 政策如何運作   5. 監管基準   6. 自定義基準   7. 查看您的結果   "},{"uri":"/vmware-operations-guide/zh-tw/operations-management/chapter-7-availability-management/","title":"第 7 - 章可用性管理","tags":[],"description":"","content":"第七章 可用性管理 可用性 是系統的特徵，旨在確保商定的操作性能水平，通常是正常運行時間。我們努力實現更高的正常運行時間或更高的解決方案可用性，可以是業務服務或基礎設施服務。\n高可用性很難設計。每增加 9 個（如可用性從 99.999% 上升到 99.9999%）通常需要不同的架構。對於非技術人員，從可用性的角度來看，很容易看到“嘿，這只是另一個小數”。正確的觀點是，從非可用性的角度來看，停機時間窗口實際上已經下降了 1000%。您只有 1 分鐘的停機時間，而不是 100 分鐘的停機時間，所以突然間每一秒都很重要。如需更深入的閱讀，請查看 高可用性 這篇文章由 Ivan Pepelnjak.\n 1. 獨立系統”   2. 多組分系統   3. 可用性狀態   4. 災難避免和恢復   "},{"uri":"/vmware-operations-guide/zh-tw/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/vmware-operations-guide/zh-tw/tags/","title":"Tags","tags":[],"description":"","content":""}]