[{"uri":"/vmware-operations-guide/zh/dashboards/chapter-1-design-considerations/3.1.1-dashboard-alert-report/","title":"1. 仪表盘|警报 |报告","tags":[],"description":"","content":"很容易认为仪表板、警报和报告是分开的，应该独立设计。 顾全大局, 这些功能的重叠最小，因为它们形成了一个 连续体 . 它们服务于相同的目的，这是系统与用户“沟通”的方式。\n如果您应用这个想法，您将意识到您可以减少警报风暴，因为许多警报更适合作为仪表板的一部分。报告也将被最小化并保留给没有在线访问权限的角色和不需要交互的用例。\n警报的性质意味着它的用例非常狭窄。您不想根据警报运行您的操作。太多了，你不知所措。太少，你缺乏大局的可见性。 Alert 仅适用于以下情况：\n 紧迫. 如果时间不是关键，那么带有仪表板的常规标准操作程序 (SOP) 会更有效，因为您可以看到全局。避免向不处理日常操作的角色发送警报。最好使用仪表板来执行诸如容量管理之类的长期操作。 问题. 如果没有任何问题，则无需触发警报。这就是为什么通常您不设置库存变化警报的原因，因为库存只是某种事物的帐户。 补救. 如果您无法立即采取任何措施来解决问题，为什么要触发警报？在这种情况下使用仪表板。 很少. Alert 关注异常，而不是大局。因此，您希望它最小化。如果整个房子都着火了，那么警报就太迟了。  在光谱的另一端是报告。 报告的性质意味着它的用例也非常狭窄。现代运营需要报告所缺乏的更丰富的交互。 该报告仅适用于以下情况：\n 不互动 (例如用户需要将其发送到他们的电子邮件收件箱) 离线 (例如，用户在飞机上) 无法访问 vRealize 印刷文件 持续时间（例如日历月） 进一步处理 (例如与数据不在 vRealize 中的其他系统集成) 进一步分析和报告 (例如财务团队希望将数据作为电子表格报告的一部分)  仪表板涵盖了最广泛的用例，因为它是最通用的。\n下表详细说明了 3 种参与方式如何互补。\n如果用户可以通过他们的桌面访问在线，请考虑使用自助服务仪表板，因为他们不需要登录并且更易于使用。您可以开发一个带有这些仪表板和自定义指南链接的门户。\nvRealize Operations 的最后几个版本引入了许多改变仪表板外观的新功能。 vRealize Operations 8.2 具有增强的仪表板到仪表板导航，因此您可以在仪表板之间创建流程。您的仪表板不再局限于独立的仪表板。\n8.2 版附带了一组经过改进的仪表板。它们保持简单，旨在针对您的特定环境进行定制。在 vRealize Operations 8.4 中改进了仪表板。\n"},{"uri":"/vmware-operations-guide/zh/metrics/chapter-2-cpu-metrics/2.2.1-guest-os/","title":"1. 来宾操作系统","tags":[],"description":"","content":"我们从 要衡量的竞争类型 因为这是衡量性能的主要衡量指标，其次是衡量指标的利用类型。\nESXi 无法看到来宾操作系统如何调度其进程，因此无法监控来宾操作系统。 ESXi 只能看到来宾发送的内容。在客户操作系统内部运行的 VMware Tools 能够查看客户操作系统内部。为此，需要 VMware Tools 10.3.5 或更高版本以及至少 vSphere 6.0 P08、6.5 P03 和 6.7 U1。\n来宾操作系统 CPU 运行队列 处理器队列中的线程数。对于 Windows，此计数器不包括正在运行（正在执行）的线程。对于 Linux，它包括 CPU 管道中的线程。\n让我们以配置有 8 个 vCPU 的 VM 为例。来宾操作系统有 8 个线程，因此最多可以调度 8 个并行进程。如果有更多的需求，它将不得不排队。这意味着需要在来宾操作系统大小调整中考虑队列。\n因为它报告队列，所以这是衡量客户操作系统性能的主要计数器。它告诉您 CPU 是否正在努力满足需求。\n什么是健康价值？\nWindows 性能监视器 UI 描述与 MSDN 文档（基于 Windows Server 2016 文档）不一致。一份文件指出，超过 2 个线程的持续处理器队列通常表示处理器拥塞。但是，另一个声明“每个处理器少于 10 个线程的持续处理器队列通常是可以接受的，这取决于工作负载”。 SQL Server 文档将 3 作为阈值。如果您看到 Microsoft 或 Linux 的其他推荐，请告诉我。\nWindows 或 Linux 利用率可能为 100%，但只要队列较少，工作负载就会尽可能快地运行。添加更多 vCPU 实际上会降低性能，因为您有更高的上下文切换机会 上下文切换.\n即使在具有多个处理器的计算机上，处理器时间也只有一个队列。因此，如果计算机有多个处理器，则需要将此值除以服务于工作负载的处理器数量。这就是工具报告队列总数的原因。此计数器应在客户机操作系统 CPU 大小调整中发挥作用。 来宾操作系统 CPU 大小调整.\n您应该分析您的环境，因为某些 VM 的数量可能很高。看看我在下面得到的数字，其中一些 VM 每个 vCPU 有超过 10 个队列。与 VM Owner 共享发现，因为减少队列的补救措施可能意味着更改应用程序设置。\n让我们深入查看第一个 VM。\nCPU 运行队列多次出现峰值。它与模式中的 CPU 使用率和 CPU 上下文切换率不匹配。我不确定如何解释这一点，所以如果你知道给我留言。我注意到数据收集不稳定，所以让我们看看另一个虚拟机。\n以下是运行 Photon OS 的 2 vCPU VM。 CPU 队列很高，即使 Photon 仅以 50% 运行。会不会是应用程序配置了太多线程导致 CPU 忙于进行上下文切换？请注意 CPU 队列映射 CPU 上下文切换率和 CPU 运行。在这种情况下，您应该提请应用程序团队注意，因为它可能会导致性能问题，解决方案是向内查看。为了证明这不是因为底层争用，我添加了 CPU Ready。\n此属性仅显示最后观察到的值；这不是平均值。 Windows 和 Linux 也不提供最高和最低的变体。\n对于 Linux，我们使用 /proc/stat（内核/系统统计信息）中的 procs_running 值。它显示处于可运行状态的进程数。它与 /proc/loadavg 中的值相同。它是所有 CPU 线程运行队列的总和。 nr_running 字段包括当前正在运行的任务和就绪但未运行的任务。\n参考: Windows 和 Linux.\n来宾操作系统 CPU 上下文切换 CPU 上下文切换 成本性能“由于运行 任务调度程序, TLB 刷新，间接由于共享 CPU 缓存 CPU 缓存 在多个任务之间”。 跟踪此计数器并至少了解该特定应用程序可接受的行为是很重要的。\n根据 Windows 10 性能监视器文档，上下文切换/秒是计算机上所有处理器从一个线程切换到另一个线程的组合速率。在其他条件相同的情况下，处理器越多，上下文切换就越高。\n线程切换可以发生在单个多线程进程内部或跨进程。线程切换可能是由一个线程向另一个线程请求信息引起的，或者是由一个线程被另一个更高优先级的线程抢占而准备运行引起的。\n System 和 Thread 对象上有上下文切换计数器。 vRealize Operations 仅报告总数。\nWindows 或 Linux 每秒切换 CPU 上下文的速率范围很广。以下内容取自具有 8 个物理线程的 Windows 10 桌面，它运行大约 10% 的 CPU。我观察到该值在 10K 到 50K 之间徘徊。\n该值应该与 CPU “利用率”相关，因为理论上利用率越高，CPU 上下文切换的机会就越大。下图显示了近乎完美的相关性。每次 CPU 使用率上升时，CPU 上下文切换也会发生。\n即使在单线程应用程序中也可能发生 CPU 上下文切换。下面显示了具有 4 个 vCPU 的 VDI VM。我绘制了 CPU 使用差异与 CPU 上下文切换的关系图。您可以看到使用差异高达 78%，这意味着最繁忙的 vCPU 和最空闲的 vCPU 之间的差距为 78%。这是运行一个安全代理，它不太可能被设计为占用多个 vCPU。\n让我们绘制同一时期的上下文切换。同时出现一个尖峰，表示代理正忙于上下文切换。请注意，它并不总是必须如此。红点表示即使 vCPU 使用差异上升，上下文切换也没有峰值。\nCPU 上下文切换 的值变化很大。它可以远远超过 50 万，如下表所示，因此为该特定应用程序分析和建立正常基线非常重要。对 1 个 VM 健康的内容可能对另一个 VM 不健康。\n从表中可以看出，有些虚拟机经历了长时间的 CPU 上下文切换，而其他虚拟机则没有。 VM #4 只有短暂的爆发，因为第 95 个百分位数的值下降到 3796。上下文切换的瞬时峰值可能不会导致性能问题，因此通常将值取在第 95 个和第 99 个百分位数之间的某个位置更为明智。\n让我们深入查看第一个 VM。这个只有 4 个 vCPU 的 CentOS VM 不断地达到近 100 万次上下文切换。模式匹配 CPU 使用率。\n另一方面，大多数客户操作系统的花费远低于 10K。我分析了大约 2200 个生产虚拟机，这里是它们的 CPU 上下文切换的分布。可以看到0-12000之间的值占了80%。\n在您的环境中，您可以进一步分析它。在以下示例中，我通过将 10K 以上的所有值分组为一个存储桶，并将 0 - 10K 存储桶拆分为多个存储桶来调整存储桶阈值。您可以看到超过一半的 CPU 上下文切换率低于 1K。\nLinux窃取时间 根据 Red Hat 文档, Steal Time 是虚拟机管理程序未提供的 VM 所需的 CPU 时间量。它发生在主机为其自己的进程或另一个来宾分配 CPU 资源时。\n虽然 Linux 有此计数器，但它在 ESXi 上运行时为 0，因为默认情况下未启用它。即使启用，它也只考虑就绪时间。它不考虑其他时间，例如 CoStop、VM Wait 和内存等待。\nCPU 就绪包括限制。我还没有验证 Linux Steal Time 是否考虑到了它。\n其他客户操作系统衡量指标 当 CPU 频率高于标称速度时，Windows 8 及更高版本将在任务管理器和性能监视器中报告 CPU 使用率 \u0026gt;100%。更改的原因与我们迄今为止所涵盖的相同，即需要区分正在完成的工作量。 更多在这里 这里.\n参考: Windows 和 Linux.\n"},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/2.1.1-nuances-in-metrics/","title":"1. 衡量指标的细微差别","tags":[],"description":"","content":"相同的名称，相同的对象，不同的公式 计数器具有相同的名称，属于同一个对象，但根据您在对象中测量它的位置，它们具有不同的公式。\n在 vCPU 级别使用的 VM CPU 不包括系统时间，但在 VM 级别包括。原因是系统时间不存在于 vCPU 级别，因为记帐是在 VM 级别收费的。\n同名不同配方 具有相同名称的计数器在不同的 vSphere 对象中并不总是具有相同的公式。\n内存使用：在 VM 中，这映射到 Active，而在 ESXi Host 中，它映射到 Consumed。在集群中，这是消耗 + 开销[^1]。 vRealize Operations 使用来宾操作系统数据进行使用，如果不可用则回退到活动状态。\n内存消耗：在 ESXi 中，这包括 ESXi 消耗的内存，而在集群中，它仅包括 VM 消耗的内存。\n内存消耗：在 VM 中这不包括开销，而在集群中它包含。 使用的 VM 包括超线程，但惩罚为 37.5%。使用的 ESXi 也知道 HT，但惩罚是 50%。\nLinux 中的 Steal Time 仅包括 CPU Ready，而 VM 中的 Stolen 时间包括许多其他因素，包括 CPU 频率。\n相同的名字，不同的意思 名称相同但含义不同的计数器。请小心，因为您可能会误解它们。\n当 ESXi CPU 使用率 (%) 显示 100% 时，VM CPU 使用率 (%) 显示 62.5%。这是因为 VM CPU Usage 考虑了超线程，而 ESXi CPU Usage 没有。当 VM vCPU 运行的 ESXi 核心也在运行另一个线程时，就会发生这种情况。\n另一个例子是延迟。磁盘延迟和内存延迟表示存在性能问题。它们实际上是衡量底层 IaaS 为 VM 服务的程度的主要计数器。但 CPU 延迟并不 总是 表示性能问题。它的值受超线程和 CPU 频率的影响，可以上升或下降。当然，VM 以更高或更低的 CPU 速度运行，或者运行效率较低，但它不会等待服务。它相当于在较旧的 CPU 上运行。\n相同的名字，不同的行为 从监控的角度来看，内存和 CPU 预留具有不同的行为。\nVM RAM 预留是永久性的，因此会影响内存利用率。 Memory Consumed 计数器包括它，即使页面实际上还没有被消耗。如果将 16 GB RAM 的 VM 启动到 BIOS 状态，并且它有 10 GB 的内存预留，则 VM 已消耗内存计数器将跳至 10 GB。它实际上并未消耗 10 GB，但由于 ESXi 已保留该空间，因此其他 VM 无法使用该空间。\nVM CPU 预留是按需进行的，因此它不会影响 CPU 利用率。 Run、Used、Demand、Usage 不包括在内。如果来宾操作系统未运行，它们的值将为 0 或接近 0。\n同一个目的，不同的名字 您会期望如果目的相同，则标签或名称将相同。\n虚拟机中的 Swapped Memory 称为 Swapped，而在 ESXi 中称为 Swap Used。\nVM 中的静态频率 CPU 利用率称为 Run，而 ESXi 称为 Utilization。\nvCenter 所称的逻辑处理器（在客户端 UI 中）是 ESXi 所称的物理 CPU（在 esxtop 面板中）\n令人困惑的名字 柜台名称可能不清楚。\nVM CPU 等待计数器包括空闲时间。由于许多 VM 未以 100% 运行，您将看到 CPU 等待计数器很高。您可能认为它正在等待某些东西（例如磁盘或内存），但它只是闲置。\n在 Microsoft Windows 中，CPU 队列只计算队列大小，而磁盘队列不包括正在处理的 IO 命令。\n令人困惑的测量指标 为什么 VM CPU Ready 高于 100%？如果您查看 esxtop，许多 VM 级别计数器 \u0026gt;100%。\n混淆单元 为什么 CPU 计数器以毫秒表示而不是百分比或 GHz？时间计数器（在本例中为毫秒）如何计算 CPU 频率？这是有充分理由的！\n“缺失”计数器 您会找到 VM CPU Demand，而不是 VM Memory Demand。需求不适用于内存，因为它是一种存储形式，就像笔记本电脑磁盘空间没有需求指标一样。\n太多选择 当您有两块显示不同时间的手表时，您不确定哪一块是正确的。\nVM CPU“利用率”有五个计数器：运行、已使用、使用情况、以MHz为单位的使用情况和需求。为什么有这么多计数器只是为了跟踪利用率，与 Windows 或 Linux 跟踪的不同？\nESXi CPU“利用率”有 6 个计数器：Core Utilization、Utilization、Used、Usage、Uzure in MHz 和 Demand。\n您必须记住，计数器不仅仅是为 vSphere 管理员创建的。 VMkernel 调度程序本身也将它们用作输入。 CPU 延迟就是这样一种计数器。\nESXi 与 vCenter 虽然 ESXi 是计数器的来源，但 vCenter 可能会添加自己的计数器，并且公式在所有情况下并不总是 100% 匹配，例如已使用与使用情况。\nESXi 为 VM CPU 提供 Run (ms)、Used (ms)、Demand (MHz)。 vCenter 增加了使用率 (MHz) 和使用率 (%)，这会造成混淆，因为现在有 5 种选择。\nESXi 显示已使用 (%)，而 vCenter 显示已使用 (ms)。第一个受 CPU 频率影响，可以超过 100%。\nESXi != VMs + VMkernel ESXi 上的计数器比其 VM + VMkernel 的总和更复杂。原因是必须考虑其他参数。例如，CPU SMP（或 Intel 称之为超线程）的影响不是在 VM 级别测量的。对 VM 计数器求和时要小心，并假设它是 ESXi 计数器。\nM:N 关系 具有多个虚拟磁盘的 VM 可以跨越多个数据存储，甚至 RDM。另一方面，数据存储通常托管许多 VM。一个 ESXi 可以挂载多个 LUN，一个 LUN 通常呈现在多个 ESXi 甚至多个集群中。从整体上看，这些多对多关系使得跨虚拟机、数据存储、ESXi 和集群的计数器不一致。他们每个人都是正确的，因为每个人都必须从自己的有利位置看。\nWindows vs Linux Windows CPU 队列不包括正在运行的线程，Linux 包括正在执行的线程。\n 复杂的东西，不是吗？而且我们还没有添加 AWS、Google、Azure、应用程序、网络等。\n并非所有特定于 vSphere 的特性都能被并非专门为其构建的管理工具所充分理解。部分理解可能导致误解，因为对计数器的错误解释可能导致采取错误的行动。\n还有一个可扩展性问题。在 vCenter 中，VM 级别有 17 个可用的 CPU 计数器，其中 12 个在 vCPU 级别也可用。此外，每个 VM 都带有 28 个内存计数器。这意味着具有 4 个 vCPU 的 VM 将有 93 个计数器 (17 + 4 x 12 + 28)。具有 1,000 个虚拟机和 4 个 vCPU 作为平均虚拟机大小的 vSphere 环境每次收集时将有 93K 计数器。如果您每分钟都这样做，您每天将收集近 1.34 亿个测量指标。由于很多客户喜欢保留至少6个月，那就是24+十亿个衡量指标！\n有了如此多的衡量指标，获得的商业价值的数量就成为一个值得关注的问题。\nvRealize Operations 不会重新生成 vCenter 的计数器。它首先了解 vSphere 的独特行为，然后通过合并和标准化计数器来简化它。例如，vRealize Operations 创建派生计数器（例如 KPI 和容量测量指标），然后根据需要将它们应用到 CPU、RAM、磁盘和网络。\n[^1]：从技术上讲，由于虚拟化中的两级内存层次结构，将使用情况映射到 VM 的活动和 ESXi 的消耗是有意义的。在 VM 级别，我们使用 active 来显示 VM 实际消耗的内容（与性能相关）。在主机和集群级别，我们使用了“consumed”，因为它与 VM 声明的内容有关（与容量管理有关）。这种混乱导致客户购买的 RAM 超出了他们的需要。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-7-availability-management/1.7.1-standalone-system/","title":"1. 独立系统”","tags":[],"description":"","content":"可用性的最简单表示是系统正常运行时间值与观察窗口期间运行时间和停机时间值的总和的比率。\n让我们举个例子。在一年内（定义为 365.25 天），一个解决方案在繁忙的工作日有一个持续 24 小时的停机时间。\n因此，可用性可以计算为：\n可用性的另一个等式是平均故障间隔时间 (MTBF) 和平均修复时间 (MTTR) 的比率，或：\n行业惯例是用“9”来表示可用性。例如，99% 的可用性是两个 9，99.99% 被称为四个 9。在我们上面的示例中，即使系统停机了一整天，系统仍能交付 99.73%！\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.1-overview/","title":"1. 概述","tags":[],"description":"","content":"由于技术和相关复杂性的影响越来越大，组织确保其环境安全变得越来越具有挑战性。监管和认证组织的预定义政策有助于降低复杂性并消除资源中不必要的工作和活动重复。此类政策的几个例子是金融行业的 PCI-DSS 和医疗行业的 HIPAA。\n最终客户还要求公司在提供服务时遵守全行业的安全标准。由于这些原因，企业并没有定义自己的专有策略，而是直接采用这些既定标准，或将其作为基本策略，并进一步定制以满足其需求。\n虽然这些指导方针确保初始配置满足安全要求，但我们如何确保环境继续满足定义的标准？这就是 vRealize Operations 的帮助之处。使用它来监控环境的持续合规性。本章的其余部分将描述我们如何实现这一目标。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-5-cost-management/1.5.1-dare-to-compare/","title":"1. 敢比较","tags":[],"description":"","content":"在云时代，今天的应用团队提供了更多的基础设施选项。他们只需要一张信用卡即可开始应用程序开发。无需处理内部繁文缛节来获得一堆硬件，因为它们都可以作为按需服务提供。\n因此，公共云提供商是内部本地云的竞争对手。作为内部云提供商，您需要将公共云提供商变成盟友。这需要改变您的业务模式，从基础设施提供商转变为多云服务代理。您与最合适的提供商协调基础设施请求。如果本地云不能满足业务需求，您可以评估、选择和交付多个云。如果本地云更符合您的业务需求，它也可以是您购买的服务（意味着您不拥有硬件和软件）。\n一个小型而简洁的内部 IT 基础架构团队确实可以补充一个更大的云提供商。小规模，特别是因为你在现场和在同一家公司工作，可以让你提供更好的服务。没有人喜欢在大公司的支持组织中与 疯狂 的官僚打交道。您可能会迷失在政策中。\n您还需要将苹果与苹果进行比较。列出服务的整个组件。下表提供了一个示例，您可以在其中添加私有云和外部托管云。您应该使用另一个比较 SLA 和价格的表来补充此表。 我提供了一个 SLA 表的示例 容量管理.\n成本和价格是相关的，但又是不同的。价格是您的客户关心的，因为这是他们支付的费用。如果你因为成本太高而把价格抬得太高，你的客户只会转向公有云。\n与术语保持一致。你的价格就是你的客户的成本。在向客户描述成本时，使用术语价格更容易。否则，您可能会感到困惑，如以下句子所示：“容量足够的集群更昂贵，因为成本仅由少数虚拟机分担。”\n这句话的意思是每个 VM 的成本，这是一个假设成本，因为您不会产生该成本。\n您需要同时开发定价模型和成本模型，最好是同时开发。\n我们先看价格，因为我们要从客户说起。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-4-configuration-management/1.4.1-overview/","title":"1. 概述","tags":[],"description":"","content":"作为一款运营管理软件，vRealize Operations 关注产品对日常运营的影响，而不是产品本身的功能。被监控的产品（如vSphere、vSAN）可能有相关的功能，但对操作的影响不同。例如，vSphere 为虚拟机提供限制、预留和共享。作为函数，它们密切相关，出现在 vCenter 客户端 UI 的同一个对话框中，并且都应该是一个。但是，它们对操作的影响是不同的。下表更详细地描述了这一点。\nvRealize Operations 采用对操作有不同影响的原则，并应用一种方法来查看配置。它不按功能或对象对设置进行分组。相反，它从影响开始，并优先考虑可以做的事情。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.1-good-advice/","title":"1. &#34;好处&#34; 劝告","tags":[],"description":"","content":"你能弄清楚为什么下面的陈述是错误的吗？它们都是关于容量管理主题的善意建议。我们相信您已经听说过它们，甚至提供了它们。\n关于集群内存：\n 我们建议物理 RAM 和虚拟 RAM 之间的过量使用比率为 1:2。超过这个是有风险的。 大多数集群的内存使用率很高，大约90%。您应该以 60% 为目标，因为您需要考虑 HA。 记忆活动不应超过 50-60%。您需要在 Active Memory 和 Consumed Memory 之间有一个缓冲区。 内存应该在每个主机上以高状态运行。  关于集群 CPU：\n 集群“XYZ”上的CPU比例高达1:5，因为它是一个重要的集群。 剩余所有集群的过量使用率看起来不错，因为它们大约为 1:3。这为峰值和 HA 提供了一些缓冲。 将第 3 层工作负载的过载比率保持在 1:4，因为它们不是关键任务。 集群“ABC”上的 CPU 使用率约为 70%。因为它们是 UAT 服务器，所以不用担心。只有当它们达到 85% 时，您才应该担心。 集群剩余的 CPU 利用率约为 25%。这很好！你有足够的能力。  上述声明的范围显然与 VMware vSphere 集群有关。从容量监控的角度来看，由于 HA 和 DRS，集群是最小的逻辑构建块。因此，假设我们在集群级别而不是主机级别或数据中心级别进行容量规划是正确的。\n你能找出错误在哪里吗？\n你现在应该注意到一个趋势。他们有一些共同点。如果没有，请 第 4 部分：测验答案!\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.1-a-day-in-the-life/","title":"1. 云管理员生活中的一天","tags":[],"description":"","content":"要了解性能实际上是什么，从客户开始总是好的。如前所述，您从供应商处购买的是 SDDC，但您向客户出售的是 IaaS。我们几乎在所有客户身上都看到了这一点。无论应用程序团队或 VM 所有者是否使用退款模式为服务付费，它都是一项服务。 VM Owners 不再拥有，因此关心，底层基础设施。\n这是虚拟化社区中经常讲述的一个常见故事，它会引起您作为 IaaS 提供商的共鸣。\n虚拟机所有者向您抱怨说她的虚拟机速度很慢。昨天不慢。她的应用程序架构师和首席开发人员已经证实：\n 虚拟机 CPU 和 RAM 利用率没有增加，处于正常范围内。 应用团队已验证 CPU Run Queue 也在健康范围内。 磁盘延迟很好。它低于 5 毫秒。 没有网络数据包丢失。 应用程序设置没有变化。事实上，该应用程序在过去 1 个月内没有任何变化。 没有在 Windows 中安装最近的补丁。 没有重启。它已经运行了数周。  她说你的VMware环境是一个共享环境，也许虚拟机数量的增加和其他虚拟机工作负载的增加正在给你的IaaS带来压力。\n她还说她最近的另一个虚拟机 P2V 在物理上的表现要快得多。\n你是对的。她说这是你的错。\n你做什么工作？\n这当然是一个困难的境地。您要监督 10,000 多个 VM。您已成功将它们整合为 500 台 ESXi 主机，为公司节省了 9500 台服务器，更不用说节省了大量资金。您在此过程中建立了自己的声誉，因此这不仅仅是她的 VM 不执行的问题。您的声誉在这里岌岌可​​危。\n您还记得您的团队在过去几个月中一直在定期添加新的 VM，因此她可能是对的。可为什么是今天，而不是前几天说的呢？\n"},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/2.1.2-guest-os-vs-vm/","title":"2. 来宾操作系统与虚拟机","tags":[],"description":"","content":"来宾 OS 和 VM 是两个密切相关但不同的实体。它们是 SDDC 堆栈中的相邻层。这两层是不同的，每一层都提供了另​​一层可能无法提供的独特可见性。来宾操作系统消耗的资源与底层 VM 消耗的资源不同。电源管理和 CPU SMT 等其他因素也会导致差异。\n下图使用_英语_单词“需求”和“使用”来解释这个概念，其中需求包括使用和未满足的需求。这并不意味着 vSphere 和 vRealize Operations 中的需求和使用计数器，这意味着不要假设这些计数器实际上意味着这个。它们是为不同的目的而创建的。\n我尝试将应用程序添加到上图中，但是我删除了它使整个图片变得复杂。所以请注意一些应用程序，如 Java VM 和数据库管理自己的资源。另一个虚拟化层（例如 Container）无疑将复杂性提升到另一个层次。\n我们可以从上面看到区域 A 对虚拟机管理程序不可见。\nA层 来宾操作系统内部的队列（CPU 运行队列、RAM 页面文件、磁盘队列长度、驱动程序队列、网卡环形缓冲区）。这些队列对底层管理程序不可见，因为它们尚未发送到内核。例如，如果 Oracle 向 Windows 发送 IO 请求，并且 Windows 存储子系统已满，则不会将此 IO 发送到管理程序。因此，VM 级别的磁盘 IOPS 计数器将报告，因为它尚未收到此 IO 请求。\nB层 来宾实际使用的内容。这对虚拟机管理程序是可见的，因为 VM 基本上是一个多进程应用程序。来宾操作系统 CPU 利用率以某种方式转化为 VM CPU 运行。我添加了“以某种方式”这个词，因为这两个计数器是相互独立计算的，并且可能在不同的采样时间和汇总技术下进行。\nC层 管理程序开销（CPU 系统、CPU MKS、CPU VMX、RAM 开销、磁盘快照）。这种开销显然对来宾操作系统不可见。您可以通过安装工具获得一些可见性，因为它将向 Windows/Linux 添加新计数器。工具不会修改现有的 Windows/Linux 计数器，这意味着它们仍然不知道虚拟化。\n从 VMkernel 的角度来看，VM 是在 VMkernel 中运行的一组进程或用户世界。有3种主要类型的组：\n VM Executable (VMX) 进程负责处理对性能不重要的设备的 I/O。 VMX 还负责与用户界面、快照管理器和远程控制台通信。 VM Monitor (VMM) 进程负责虚拟化客户操作系统指令，并管理内存映射。 VMM 将存储和网络 I/O 请求传递给 VMkernel，并将所有其他请求传递给 VMX 进程。分配给 VM 的每个虚拟 CPU 都有一个 VMM。 鼠标键盘屏幕 (MKS) 进程负责呈现访客视频并处理访客操作系统用户输入。当您通过 vCenter 客户端控制台进入 VM 时，已完成的工作将计入此过程。这反过来又由 VM 收费，而不是特定的 vCPU。  如果您想查看上述过程中的错误示例，请查看此知识库文章 知识库.\nD层 未满足的需求（CPU 就绪、CPU 同步停止、CPU 重叠、CPU VM 等待、RAM 争用、VM 未完成 IO）。\n来宾操作系统遇到时间冻结或缓慢。它不知道它是什么，这意味着它无法解释它。\n 我已经用简单的术语介绍了差异，并没有对全部差异做出公正的判断。如果你想读一篇科学论文，我推荐这篇论文 这篇报告 写的 Benjamin Serebrin 和 Daniel Hecht.\n由于我们在本书后面的相应章节中介绍了 CPU、内存、磁盘和网络指标，因此我们将更详细地解释它们之间的差异。现在，我们将提供一些示例来说明这一点。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-7-availability-management/1.7.2-multi-component-system/","title":"2. 多组分系统","tags":[],"description":"","content":"如今，我们很少处理独立的解决方案。 甚至我们认为独立的解决方案也由多个较小的组件组​​成。 例如，物理服务器由多个较小的部分组成，例如电源和磁盘。 要计算服务器可用性，我们需要考虑每个组件的可用性及其对整体可用性的影响。\n系统组件系列 系列是串行连接。想想 Web 服务器 -\u0026gt; 应用程序服务器 -\u0026gt; 数据库服务器。\n具有多个串联子组件的整个系统的可用性按以下公式计算：\n让我们考虑一个例子，在这种情况下，我们有三个相互串联的独立组件，每个组件的可用性为 99.9%。整个系统的可用性 = 99.9 * 99.9 * 99.9 = ~99.7 %\n简而言之，我们可以看到，对于串联组件，整体可用性会降低。\n并联系统组件 具有多个并行子组件的整个系统的可用性按以下公式计算：\n1 - Availability of Component i 给我们提供了组件的不可用性。\n让我们考虑一个例子，在这种情况下，我们有三个相互并行的独立组件，每个组件都有 99.9% 的可用性。\n整个系统的可用性：\n多组分 让我们考虑一个更实用的系统，它同时具有串行和并行组件。对于本示例，我们以具有 4 个 Web 服务器、2 个应用程序服务器和 1 个数据库服务器的三层应用程序为例。让我们考虑一下所有这些的可用性为 99.9%，看看整体可用性是多少。\n首先，我们需要先计算并行组件的整体可用性。使用上面的公式，我们看到应用服务器的整体可用性为99.99%，Web服务器为99.9999%。\n接下来，我们需要计算串联组件的整体可用性。应用上述公式，我们得到了 ~99.89% 的整体可用性。\n这就是我们避免与其他系统串联的单点故障的原因，因为此类组件会降低整体可用性。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.2-security-approach/","title":"2. 网络安全方法","tags":[],"description":"","content":"具体来说，组织或数据中心的网络安全是一种可以分为两个主要领域的方法。\n 组件的安全配置 网络安全实践或流程到位  第一点是关于在环境或产品中进行更改并安全地配置它们。例如，如果程序需要来自用户的输入，则使用适当的输入验证来防止不需要的输入。另一个例子是使用不同的角色，然后 基于角色的访问控制 (RBAC) 确保只有获得授权的人员才能获得对环境的适当访问级别。\n第二点是关于过程。例如，如果要对服务器进行更改，则需要遵循相应的审批渠道，并且需要记录更改。这样做的目的是避免任何不必要的更改并跟踪谁做了什么。通常，组织具有适当的“变更管理”流程。\n在这里，我们将介绍第一个区域“组件的安全配置”。该领域有两个不同的阶段。它们详述如下。\n第一阶段是完成初始配置阶段。这包括安全地配置数据中心环境（不太频繁的任务）到为单个应用程序配置安全性（更频繁的任务）。第二阶段是关于持续维护和确保安全。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-5-cost-management/1.5.2-price/","title":"2. 价格","tags":[],"description":"","content":"价格只是调整保证金、折扣和罚款的成本。使用价格来推动正确的行为并鼓励采用。\n作为内部云提供商，您希望通过定价解决哪些业务问题？\n非常大的 VM 是在 VM 投入生产之前解决的最佳问题。因此，设计您的定价模型以从一开始就鼓励正确的尺寸。大小是正确的，从一开始就是正确的。创建累进定价并为较小的 VM 大小应用折扣。下图显示了分层定价的示例。具有 16 个以上 vCPU 的虚拟机定价为高价，而少于 8 个 vCPU 的虚拟机定价为折扣价。\n您如何将上述累进定价应用于不同的服务级别？您应该在大型 VM 上投资多少溢价？你应该给小型虚拟机多少折扣？乘数效应（累进税）不能太高，因为公有云没有这样的税。他们遵循线性定价。如果你使用高倍数，你的价格就会太高，否则你会吸收深度损失。\n下表提供了乘法器的示例。\n我们将相同的原则应用于 RAM。\n保持您的定价模型简单。你的账单越复杂，你就越需要解释。下表提供了收费和捆绑的建议。捆绑意味着您将其包含在总成本中，但您不会明确收取费用。您肯定是在权衡准确性和简单性。\n过度简化的定价可能对客户不公平，但这在其他行业很常见。以航空业为例。我最喜欢的航空公司是新加坡航空公司。我注意到他们至少有 4 代飞机。新飞机效率更高，运营成本更低，更受客户欢迎。另一方面，如果考虑折旧，则旧飞机已经完全折旧。但是，所有世代的价格都相同。\n收支平衡 在规划定价时，请考虑达到盈亏平衡点所需的时间。在此期间，您应该有足够的时间来收回您的费用。它应该在折旧结束之前。\n盈亏平衡点取决于盈亏平衡水平。您可能无法在最后完全出售所有资源。因此，如果您的计划是基于 80% 的销售额，那么这个 80% 的价格必须能够覆盖所有成本。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-4-configuration-management/1.4.2-review-flow/","title":"2. 审核流程","tags":[],"description":"","content":"您需要管理数以千计的设置以确保安全性、性能和可用性。为确保首先跟踪和解决关键问题，请考虑对它们进行优先排序。 vRealize Operations 8.2 使用 4 步检查，从最紧急的开始。\n步 1 解决不正确、不安全、不符合公司标准或违反最佳实践的设置。你应该适当地纠正它们。\n这通常是最紧急的步骤。\n步 2 设置是正确的，但在旧版本上。很难跟上所有供应商版本，因此您应该优先考虑最旧的版本，尤其是那些不再受支持的版本。\n典型的 SDDC 或 EUC 架构跨越许多组件。虽然每个都可以运行最新版本，但它们可能不兼容或不支持。\n步 3 这些设置是正确且最新的，但它们会使您的 IaaS 操作复杂化。由于您不太可能将它们全部消除，因此应制定将它们最小化的策略作为简化操作的一部分。\n步 4 最后一步是关于成本和容量，因为没有问题。您希望最大限度地利用资源，同时最大限度地降低成本。这是一个平衡的行为！\n 请注意，每个客户都以独特的方式经营他们的业务。每一个操作都像一个人的指纹。因此，适合其他客户的不一定适合您。即使在相同的环境中，适合开发环境的不一定适合生产。\n下表列出了一些可能性。将它们用作输入以根据您的需要自定义配置仪表板。它提供了在 IaaS 消费者层中检查内容的示例。该层由 VM 和在 VM 内运行的所有内容组成，例如进程、应用程序、来宾操作系统和容器。\n下表描述了 IaaS 提供商层。这一层由软件和硬件基础设施组成，例如 Telegraf、ESXi、计算集群、数据存储和数据存储集群、资源池、分布式虚拟交换机和端口组、vSAN、NSX 和硬件。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.2-end-to-end-capacity/","title":"2. 端到端容量","tags":[],"description":"","content":"如果从规划阶段开始，容量管理将变得更加容易。您可以在此处定义产品、设定价格和性能预期。如果您不设定预期，您的客户将需要您当前的基础架构无法满足的高性能。\n容量管理需要端到端的规划和调整，因为归根结底，它会将您面临的现实与您设定的计划进行比较。平衡供需需要您查看以下 6 个组成部分。步骤1和2一起完成，剩下的4个步骤可以并行完成。\n与绩效管理不同，这一运营支柱不需要深厚的技术知识。如果您不信任我，让我们检查您的技术技能。\n 您能否构建一个性能与物理性能匹配的集群？  简单，只是不要过度使用或为 VM 保留 100%。   你能建立一个可以处理巨大虚拟机的集群吗？  简单，只需为每个插槽获取大量内核。 很简单，在盒子里放很多核就行了。   你能构建一个可用性非常高的架构吗？  很简单，只要有更多的 HA 主机，更多的 vSAN FTT，并且容错域分布在不同的机架上。 简单，只要有更多的 HA 主机。   能不能搭建一个可以运行大量虚拟机的集群？  很简单，只要得到很多大主机。   你能优化性能吗？  当然，请遵循性能最佳实践并针对性能进行配置。   你能降低成本吗？  当然，尽量减少硬件和软件的成本，选择性价比最高的。您了解所有供应商及其技术。你知道每个人的优点和缺点。    如果从一开始就做好以上这些事情并不难，这就是为什么我们需要从计划阶段开始。如果从第 6 步开始而忽略第 1 步和第 2 步，您将扮演 Mission Impossible 电影中的主角。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.2-the-3-realms/","title":"2. 3个领域","tags":[],"description":"","content":"一般来说，企业应用程序有三个主要领域。每个领域都有自己的一组团队。每个团队都有一套独特的职责，因此需要技能。下图解释了三个领域，以及每个领域的典型层次和提出的问题。\n性能故障排除在很大程度上是一种消除练习。此方法对每一层进行切片并确定该层是否导致性能问题。因此，必须有一个指示符来指示是否正在执行特定层。这个主要指标被恰当地命名为关键绩效指标。我们将在 这里 中介绍更多。\n上层依赖于下层，因此基础设施层通常是争用的来源。因此，首先关注底层，因为它是上层的基础。好的部分是，该层通常是一个水平层，它提供一组通用的基础设施服务，而不管在其上运行什么业务应用程序。\n现在，我们不知道当基础设施出现延迟时对 application 的影响。这取决于应用程序。即使在相同的软件上，例如 SQL Server 2019，影响也可能不同，因为这取决于您如何使用该软件。即使在相同版本的软件上，业务工作负载的不同性质（如批处理和 OLTP）也会受到不同的影响。\n根据应用程序和基础设施架构，可以有更多的堆栈或层。以下示例显示了 5 个图层。性能故障排除的挑战在于层可能不共享上下文。\nU用上面的例子，我们可以证明缺乏可见性是如何使故障排除几乎不可能的。让我们来看看上面的内容。故事从抱怨开始，因为这更能引起共鸣。\n在业务层，您可以看到每个业务交易的表现。您不仅知道哪个用户受到影响，还知道哪些交易受到影响，因为指标具有交易 ID。您可以在代码中跟踪它，因为您知道每个函数调用发生的时间，假设您记录每个事务。\n当您超越代码并进入货架商业 (COTS) 软件时，问题就开始了。软件可能会显示它的队列是10000，比手册上说它可以处理的多5000。但是您不知道用户 Joko 事务是否在该队列中。 COTS 软件指标不再与用户相关，更不用说单个交易了。红色爆炸图标标记上下文丢失的位置。\n从应用程序转移到基础设施导致了另一个上下文丢失。 Windows 或 Linux 不知道您正在运行什么应用程序。就操作系统而言，每个应用程序只是一个进程。它将报告每个进程的基本 CPU、内存、磁盘和网络利用率。更高级的计数器在操作系统级别、系统范围内报告。例如，您不知道您的进程是否经历过网络丢包。数据包计数器丢失是一个系统范围的指标。\n从单个 EC2 或 VM 迁移到共享基础架构会导致另一次上下文丢失。在公共云的情况下，您可能根本无法了解物理层。\n"},{"uri":"/vmware-operations-guide/zh/dashboards/chapter-1-design-considerations/3.1.3-interaction/","title":"3. 相互作用","tags":[],"description":"","content":"充分利用互动，同时确保它们保持逻辑性和一致性。首先使用任何绘图工具逻辑地设计仪表板，以便您可以看到信息流。\n丰富的交互将增加仪表板的功能。如果可能，请以对称交互为目标，因为仪表板消费者更容易理解。下面显示了驱动 4 个折线图的 4 个热图。它看起来很复杂，但使用时感觉自然。\n"},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/2.1.3-roll-up-vs-aggregation/","title":"3. 随着时间的推移聚合 vs 更高级别对象的聚合","tags":[],"description":"","content":"在我们介绍计数器之前，您需要了解各种单位以及它们是如何获得的：\n 随着时间的推移聚合 (例如。从 20 秒到 5 分钟) 更高级别对象的聚合.  一些常用单位是毫秒、MHz、百分比、KBps 和 KB。某些计数器以 MHz 显示，这意味着您需要与 ESXi 物理 CPU _static_频率[^1] 进行比较。在大型环境中，这在操作上可能很困难，因为您拥有来自不同代的不同 ESXi 主机（因此可能具有不同的 GHz）。这也是集群是最小的逻辑构建块的原因。如果您的集群具有频率不同的 ESXi 主机，这些基于 MHz 的计数器可能难以使用，因为虚拟机通过 DRS 获得 vMotion。\nCPU的毫秒数怎么样？它来自哪里，为什么？\n要回答这个问题，我们需要深入了解 ESXi VMkernel 调度程序。考虑时间的流逝和在那段时间内完成的 CPU 周期数量。与以 1 GHz 运行的内核相比，以 2 GHz 运行的 CPU 内核将完成 2 倍的 CPU 周期。超线程也是如此。当有对等线程同时竞争时，完成的周期更少。\n你认为的利用率或使用量或需求或使用量，如果你将它们视为循环，一旦你进行了这种小的范式转变，就会更容易。\n让我们让 VM CPU Ready。以下内容来自 ESXi vsish 命令。它表明原始的原始计数器实际上是一个运行数字。要计算给定时间段的 CPU 就绪，我们需要从第一个数字中减去最后一个数字。为了转换为百分比，我们对集合进行划分，在屏幕截图中为 20000 毫秒。\n补充单位是统计类型。有3种类型：\n三角洲 该值来自运行计数器。你看到的是两个时间点之间的差异。所有以毫秒为单位的单位都是增量类型。\n速度 该值衡量变化率，例如每秒的吞吐量。该速率始终是 20 秒周期内的平均值。 注：有以百分比为单位、以比率为统计类型的指标。我很困惑为什么。\n绝对 该值是一个独立的数字，与其他数字无关。绝对值可以是第 20 秒的最新值或 20 秒期间的平均值。\n随着时间的推移聚合 时间列的聚合非常重要。对于 vRealize Operations，平均值是指 5 分钟的平均值。 和 呢？为什么在汇总数字时数字会不断上升？\n对于那些累积更有意义的计数器，它实际上是平均值。让我们举个例子。 CPU 就绪时间在采样周期内累积。 vCenter 每 20 秒报告一次计数器，即 20000 毫秒。下表显示 VM 每秒具有不同的 CPU 就绪时间。它在第 5 秒和第 6 秒有 900 毫秒的 CPU 就绪时间，但在剩余的 18 秒内有较低的数字。\n在 20 秒的时间段内，VM 可能会累积每秒不同的 CPU 就绪时间。 vCenter 将所有这些数字相加，然后除以 20,000。这实际上是一个平均值，因为您在此期间失去了峰值。\n最新，另一方面，是不同的。它采用采样周期的最后一个值。例如，在 20 秒采样中，它取第 19 秒和第 20 秒之间的值。该值可以低于或高于整个 20 秒周期的平均值。与平均值相比，最新版本不太受欢迎，因为您会错过 95% 的数据。\n从 20 秒累积到 5 分钟或更长时间会导致进一步平均，无论累积技术是求和还是平均。这就是为什么对于早于 1 天的数据使用 vRealize Operations 比使用 vCenter 更好的原因，因为 vCenter 将数据进一步平均为 0.5 小时的平均值。\n由于源数据基于 20 秒，并且默认情况下 vRealize Operations 对这些数据进行平均，因此任何毫秒数据的“100%”都是 20,000 毫秒，而不是 300,000 毫秒。当您看到 3000 毫秒的 CPU 就绪时，实际上是 15% 而不是 1%。\n默认情况下，vRealize Operations 每 5 分钟获取一次数据。这意味着 不 适合对不持续 5 分钟的性能进行故障排除。事实上，如果性能问题只持续 5 分钟，您可能不会收到任何警报，因为收集可能恰好发生在这 5 分钟的中间。例如，假设 CPU 从 08:00:00 到 08:02:30 空闲，从 08:02:30 到 08:07:30 出现峰值，然后从 08:07:30 到 08 再次空闲： 10:00。如果 vRealize Operations 恰好在 08:00、08:05 和 08:10 进行收集，您将不会看到峰值，因为它分布在两个数据点上。这意味着，要让 vRealize Operations 在没有任何闲置数据的情况下 *** 整个*** 地接收峰值，则峰值 **可能** 必须持续 10 分钟。\nvRealize Operations 能够存储单独的 20 秒数据。但这会导致数据量增加 15 倍。在大多数情况下，您想要的是 15 个数据点中的峰值。 这是一组新的故障排除指标的用武之地。故障排除指标\nvCenter 中的集合级别不适用于 vRealize Operations。更改收集级别不会影响 vRealize Operations 收集的计数器。它使用自己的过滤器从 vCenter 收集所有计数器，您可以通过策略对其进行自定义。\n更高级别对象的聚合 聚合到更高级别的对象很复杂，因为没有无损解决方案。您试图通过在其中选取 1 个值来表示一系列值，因此您往往会丢失细节。技术的选择是平均值、中值、最大值、最小值、百分位数和计数。使用的默认技术是 average() 函数。平均的问题在于它会掩盖问题，除非它们很普遍。到 1000 台虚拟机的平均性能不佳时，您可能有一百台虚拟机处于不良状态。\n让我们举个例子。下表显示了 ESXi 主机。第一台主机的 CPU 就绪时间为 149,116.33 毫秒。这是一个坏数字吗？\n很难得出结论。该主机有 67 个正在运行的 VM，每个 VM 都可以有多个 vCPU。总共有 195 个 vCPU。每个 vCPU 可能会经历 20,000 毫秒的 CPU 就绪（这是最糟糕的情况）。\n如果将 67 个 VM 的 CPU Ready 相加，您会得到多少？\n你是对的，你得到了 ESXi 主机报告的相同数字。这意味着 ESXi CPU 就绪 = Sum（VM CPU 就绪），VM CPU 就绪 = Sum（VM vCPU 就绪）。\n因为它是虚拟机的总和，转换成 % 需要除以正在运行的虚拟机 vCPU 的数量。\nESXi CPU 就绪 (%) = ESXi CPU 就绪 (ms) / 总和（正在运行的虚拟机的 vCPU)\nCPU Ready 是否在 VM 之间平均分配？你怎么看？\n这取决于许多设置，因此您很有可能会得到以下内容。此热图显示了上述主机上的 67 个虚拟机，按 CPU 就绪着色，按虚拟机 CPU 配置调整大小。您可以看到较大的 VM 往往具有更高的 CPU 就绪状态，因为它们具有更多的 vCPU。\n在分析数百万个数据点时，您还需要考虑性能要求。每 5 分钟从 100K 对象中求平均值将需要大量资源。对于 VMware Horizo​​n，我们应用两步汇总技术来最小化计算成本。从数学上讲，它不太准确，因为小型 VDI 池或 RDS 场与大型 VDI 池同等对待。在操作上，仅仅因为它们较小并不意味着它们不那么重要。\n[^1]：实际上，CPU 频率因每个内核而异。它也随着时间而变化。为了便于记账，我们假设整个盒子都是静态的。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-7-availability-management/1.7.3-availability-reporting/","title":"3. 可用性状态","tags":[],"description":"","content":"你能发现上述计算的局限性吗？\n提示：它在 1 个月内测量。\n一个典型的月份允许 99.9% 的停机时间是多少分钟？\n大约43分钟，如果发生在高峰时段，这是一个很长的时间。您可能会失去很多业务，更不用说客户的不满了。\n上述计算的问题在于它是按月计算的。它没有考虑到所有组件同时关闭与不同时间之间存在很大差异。查看下表，其中每 5 分钟记录一次正常运行时间。\n上述系统有 3 层：Web、应用程序和数据库。\nWeb 层的大小为 8 个虚拟机，另外还有 2 个虚拟机以提高灵活性。应用层设计为3+1服务器组。数据库采用主动/被动设计。\n让我们逐步展示不同的场景如何影响可用性。\n9:00 - 9:05 am  1 个 Web 服务器已关闭。所有其他服务器都已启动。为简单起见，我们假设停机时间恰好为 300 秒。 Web 层的正常运行时间变为 9/10 = 90%。 总体而言，系统正常运行时间为 90%。 SLA 不受影响，因为 Web 层旨在处理 2 个故障。 尽管 SLA 不受影响，但重要的是要记录正常运行时间并不完美的事实。  9:05 - 9:10 am  1 个 Web 服务器 + 1 个应用程序服务器已关闭。所有其他服务器都在线。 Web 层的正常运行时间变为 9/10 = 90%。 应用层的正常运行时间变为 3/4 = 75%。 总体而言，系统正常运行时间为 68%。 SLA 不受影响，因为两个层都没有违反它们的阈值。  9:10 - 9:15 am  3 个 Web 服务器已关闭。所有其他服务器都已启动。 Web 层的正常运行时间变为 7/10 = 70%。 总体而言，系统正常运行时间为 70%。这比之前的 68% 高，但这次 SLA 受到影响，因为 Web 层不是设计来处理 3 次故障的。 从这里您可以看到正常运行时间和 SLA 可能会有所不同。 - 前者是绝对的和技术性的，而SLA是相对于设计和任何合同的。  9:15 - 9:20 am  与之前相同，但 1 个应用程序服务器已关闭。反映这种退化很重要，因此正常运行时间从 70% -\u0026gt; 53% 减少。 SLA 不关心它，因为它只关心系统是在运行还是出现故障。 在那5分钟里它是二进制的。  我们现在可以继续整个月的日程安排。我正在稍微修改示例以说明 SLA 和现实可能不同的观点。\n从上午 9:00 到上午 9:30，系统从未有 100% 的正常运行时间。在本月剩余的时间里，它具有完美的 100% 正常运行时间。\nSLA 仅经历了 5 分钟的中断。 所有其他停机时间都不会影响 SLA，因为系统已设计用于处理故障或计划停机。\nSLA 基于日历月。以2021年2月为例，有28天。这在 5 分钟内转化为 8064 次。\nSLA  (8064 - 1) / 8064 = 99.988% 如果 SLA 为 99.95，那么您将通过 2021 年 2 月。  现实  平均值 (34% + 3.75% + 0 + 0% + 34% + 34% + 100% + 100% + 100% + \u0026hellip;) 是的，我们只是对构成 2021 年 2 月的所有 8064 个数字求平均值。 结果是 99.939%  现实与 SLA 之间的差距提供了有价值的输入。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.3-continuous-compliance/","title":"3. 持续合规","tags":[],"description":"","content":"尽管根据网络安全指南配置环境很重要，但这只是起点。保持相同级别的配置至关重要。配置漂移随时间发生。我们如何确保改变后的环境仍然符合既定政策？在每个组织中，合规性测试都会定期进行，例如每周一次。检查之间的状态如何？考虑到以下情况，该组织每周日晚上10点安排合规检查。因此，检查会发现两者之间的任何偏差并相应报告。\n在上面的示例中，在第 1 周和第 2 周之间有几天没有报告配置漂移，在第 3 周和第 4 周之间有几天没有报告配置漂移。这可能会导致严重的安全故障或担忧。\nvRealize Operations 提供警报、策略和报告以根据这些基准验证 vSphere 资源，每 5 分钟提供一次 持续合规性 检查警报。它提供了多种方法来根据定义的基准检查合规性。这包括 VMware 推荐的建议、监管组织的基准测试，甚至使您能够定义自定义策略。请注意，这些是 vRealize Operations 中可用的三个不同类别的基准测试，并且没有相互依赖关系。它们仅出现在页面上的顺序如下所列，而不是首选项。它们的详细信息如下：\nVMware SDDC 基准测试 这些是预定义的 VMware 基准，用于根据各种 VMware 定义的安全建议来监控环境。这些进一步分为以下三个子类别：\n vSphere 安全配置指南 vSAN 安全配置指南 NSX-T 安全配置指南  自定义基准 构建您自己的自定义基准测试策略并根据这些自定义策略检查环境。\n监管基准 开箱即用的法规遵从性，特别是以下内容：\n CIS网络安全标准 DISA网络安全标准 FISMA 网络安全标准 HIPAA 合规性 ISO网络安全标准 PCI 网络安全标准   尽管 VMware SDDC 基准测试为虚拟化环境的安全配置提供指导，但监管基准测试服务于不同的目的。监管基准和 VMware 基准都为相同的对象提供了类似的指导，但监管机构对要求进行了认证。\n例如，假设我是健康行业的消费者。因此，我有特定的安全要求。我怎么知道我考虑的提供者是否有必要的安全措施？这就是监管基准派上用场的地方。这些是针对特定行业和要求的久经考验的指南。因此，如果提供商符合 HIPAA 基准，我可以确信该提供商将满足我的安全要求。\n现在想象一下采用 HIPAA 基准指南及其数百条建议，实施它，并不断检查以确保符合环境要求。这将需要大量的连续工作。接下来考虑实施 vRealize Operations 并启用 HIPAA 基准测试。您将获得一个显示合规性状态的仪表板卡片。对于差异，您确切地知道需要修复什么，并且可以立即修复。只需随时与您的客户分享报告，即可证明您符合要求。\n默认情况下，所有这些策略都未激活。对于 VMware SDDC 基准测试，您可以从同一页面启用它们。但是对于监管基准，您需要从存储库中启用它们。\n 这些基准测试是根据 vRealize Operations 中定义的“策略”启用的。这意味着您可以根据不同的基准检查不同的环境。例如，考虑一个由两个不同环境组成的组织。第一个环境需要符合HIPAA，第二个环境需要符合PCI。因此，为这两个环境创建两个不同的策略，然后根据这些环境及其各自的策略启用基准测试。例如，考虑一家医院。在医院中，他们存储需要符合 HIPAA 的环境的患者信息。同时，他们接受在线支付他们提供的服务。这需要一个需要符合 PCI 标准的环境。一种解决方案可能是构建一个由 vCenter 服务器管理的虚拟化环境，并设置两个不同的集群来满足上述要求。通过 vRealize Operations 集成，我们可以对这两个集群应用两种不同的策略，并分别应用两种不同的基准测试。这将确保环境满足所需的 HIPAA 和 PCI 合规性。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-5-cost-management/1.5.3-cost/","title":"3. 成本","tags":[],"description":"","content":"计算单位成本很重要，尽管它实际上并不存在。当您购买集群时，您没有为每 GHz CPU 支付 1 美元。您为整个设备（包括安装）支付了 100,000 美元。 1 美元仅用于计算目的，因此您不会以亏损告终。\n每个 VM 的单位成本取决于 过度承诺 比率, 因为硬件成本是一样的. 如果集群 A 有 2x 过度承诺 比率, 那么在相同的其他条件下，每个 VM 的成本要便宜 2 倍。\n过度承诺比率是您解释更高价格的方式，因此必须提前向您的客户披露。\n单位成本必须与 VM 相关联，而不是与 ESXi 相关联。它以 vCPU 表示，而不是以物理内核或 GHz 表示。您计划打包多少个 vCPU 决定了每个 vCPU 的成本。\n单位成本取决于硬件和软件。由于更大的硬件，新集群的成本应该更低。\n在相同的服务水平内，单价应保持不变。 回到航空业的例子，价格不取决于飞机的类型。\n节约成本 从财务的角度来看，只有推迟新采购才能实现真正的成本节约。你不能节省你已经花费的，会计明智的。成本节约实际上是成本避免。\n我们举一个简单的例子：\n 3 年前，您在超融合基础设施 (HCI) 解决方案上花费了 200 万美元。 已经很好用了，现在剩余容量为0%，需要购买新的HCI。这只会花费您 100 万美元，因为 HCI 解决方案的成本在过去 3 年中下降了一半。 通过勤奋而艰巨的回收过程，您设法释放了产能。因此，您不需要花费 100 万美元。您可以将此购买推迟到下一个财政年度。 您从这次填海中节省了多少：200 万美元或 100 万美元？  在会计方面，它只有100万美元。尽管三年前 HCI 花费了您 200 万美元，但具有相同容量的全新设备只需花费您 100 万美元。在会计规则中，您不应该混合来自不同日期的数字，更不用说来自不同会计年度的数字。折旧在这里不相关，因为成本基于重置成本。\n一百万美元当然是 估计。避免或花费的实际成本取决于供应商的报价和您的谈判技巧。请注意，实际成本远高于 HCI 成本。额外的成本可能会超过硬件成本。您需要包括所有加载成本，例如数据中心设施、实施服务、备份存储、管理服务、软件许可、管理等。\n仅开垦就可以 不是 降低成本. 删除笔记本中的文件可以节省多少钱？\n正确的。零。\n只有当它帮助您推迟购买新硬盘时，您才能真正节省成本。\n服务怎么样？我们喜欢将提高生产力称为成本节约。尽管这提供了商业价值，但这并不是一项硬成本节约。这是一种没有会计价值的软收入。只有在推迟购买额外资源/员工的需要，或管理服务合同的价值下降时，才会发生硬性储蓄。\n您可以通过关闭硬件电源来节省电力和冷却。\n对于拥有大量基础设施足迹的大型组织，技术更新是降低成本的好方法。从 100 个机架减少到 50 个机架肯定会降低资本和运营成本。\nIT 需要领先于业务。在计算成本节省时，包括承诺的项目和未来的增长。您还应该考虑太小的 VM，因为应用程序团队可能需要扩大它们。\n计算 CPU、RAM 和磁盘。如果可能，还包括网络。计算起来比较困难，因为它本质上只是互连。对于这三个 IaaS 资源中的每一个，计算需求和恢复。对于要求，不要忘记包括所有成本。当 VM 需要 100 GB 时，它会转化为更多，因为您将 DR、备份、快照等考虑在内。\n下表提供了一个示例。\n您需要为每个物理位置准备上表。仅仅因为您在新加坡拥有 10 TB 的 RAM 并不意味着亚美尼亚虚拟机可以使用它。\n优化成本 上述练习将有助于优化成本。当然，还有其他方法可以优化成本，因为成本涵盖的不仅仅是容量。它涵盖了人员、流程和架构。您可以通过提高流程效率来降低成本，通常是通过业务流程再造练习。您可以通过自动化提高流程效率来降低成本。例如。使用批准工作流删除关闭的 VM。\n下表总结了您可以执行以优化成本的活动。\n小型集群具有更高的 HA 开销，因此您可以通过整合它们来优化成本。\n复杂性是有代价的，但很难量化。例如，人为错误可能代价高昂，但您如何对其进行量化？\n请注意，标准化将降低复杂性。但这也意味着配置不够灵活，会增加成本。\n简化操作，例如不在同一集群中混合具有不同服务类别的 VM，将降低复杂性。但这也以更大的基础设施为代价。 T 恤尺寸也是如此。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-4-configuration-management/1.4.3-plan-vs-reality/","title":"3. 计划与现实","tags":[],"description":"","content":"您在生产中的实际配置应反映您当前的架构标准。多年来，您的架构或标准可能会发生变化，但应记录在案。然后，您可以使用配置仪表板来比较实际和预期标准。如果它们不同，则其中之一是错误的，需要解决。\n标准使操作更简单，并且通常是合规所必需的。例如，如果您有 VMware Tools 版本标准，您可以选择一个版本作为标准，但您可以在您的环境中使用其他 2 个版本，因为升级需要时间。您可以创建一个饼图来显示 VMware Tools 版本的分布。饼图中的每个切片都计算特定值的出现次数。您应该只看到三个切片。如果您看到三个以上，那么现实与您的标准不同。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.3-capacity-planning/","title":"3. 容量规划","tags":[],"description":"","content":"对于 IaaS 或 DaaS，容量管理早在部署硬件之前就开始了。它从一个商业计划开始，它决定了将提供什么级别的服务。每个服务等级（例如金、银、铜）都因服务质量而有所不同。这通常包括可用性（例如，黄金级为 99.99% 的正常运行时间，白银级为 99.95% 的正常运行时间）、性能和安全性/合规性。这在之前的 SLA 中有介绍。\n上表是通用指南。作为 IT 管理计划的一部分，您可以帮助他们定义和决定每个服务等级。此计划会话需要供应商输入，因为您希望优化成本。使用供应商折扣和许可模式来补充计划，而不是规定计划。\n在计划会议结束时，您可能会得到这样的结果。\n在此示例中，IT 管理部门决定仅提供两种业务产品：\n 白银：33% 的折扣和 2% 的性能损失 铜奖：67% 的折扣和 5% 的性能损失  Kim Ramirez 建议，从定价心理学的角度来看，提供黄金可能是有意义的，期望没有人会购买它，它只会起到银色看起来很划算。这也解决了一个潜在的困惑，如果客户只看到银牌和铜牌优惠，他们会想知道金牌在哪里。\n质量会产生成本，而成本反过来又会影响价格。 Gold VM 的每 vCPU 和每 GB 内存的价格更高，因为它具有更高的服务质量。需要规划合适的定价模型。 Silver Tier 上 16 个 vCPU VM 的成本确实比 Gold Tier 上 1 个 vCPU VM 的成本高。这是您想要驱动的行为。合适的层级，合适的尺寸。\n如果您希望您的客户提前调整大小，那么 64 个 vCPU 虚拟机的价格需要是 1 个 vCPU 虚拟机价格的 64 倍以上。如果定价模型是一条简单的直线，则不会有小规模的动机，也不会因过度提供而受到惩罚。您最终将在生产中强制调整规模，这是一个昂贵且耗时的过程。\n参考 成本管理 的定价示例，因为成本和价格是相辅相成的。\n因为你过度使用，所以你冒着争用的风险。要将其最小化，一种方法是控制 VM 的大小。您希望避免庞大的虚拟机支配过度使用的 ESXi 主机。下表提供了与每个服务类别关联的大小限制示例。\n相比之下，EC2 VM 的 AWS 免费套餐 只有 1-2 个 vCPU、1 GB RAM，因为它基于 t2.micro 和 t3.micro。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.3-plan-monitor-troubleshoot-optimize/","title":"3. 计划 监视器 故障排除 优化","tags":[],"description":"","content":"绩效管理有四个不同的过程：\n计划 这是您设定绩效目标的地方。确保目标与业务可交付成果一致。\n当您设计该 vSAN 时，您考虑过多少毫秒的磁盘延迟？例如，您将目标设置为在 VM 级别（不是 vSAN 级别和单个虚拟磁盘级别）测量的 10 毫秒。\n监视器 这是您比较计划与实际的地方。这就是为什么必须明确定义目标的原因。现实是否与您的架构应该提供的内容相匹配？如果没有，那么你需要修复它。\n故障排除 当现实比计划更糟或出现问题时，您会这样做，而不是在有投诉时。您想花时间进行故障排除，因此最好主动进行。并且悄悄地，没有人催促你获得结果。\n优化 作为监控的一部分，您可能不会发现问题，但您会发现使性能更好的机会。新版本提供性能改进是很常见的。同样，您要主动这样做，而不是等待投诉发生。\n 监视器 是 什么，故障排除 是 为什么。监视器是 标准操作程序 (SOP) 的一部分，故障排除是一个临时的、按需的过程。借助预定义的仪表板和警报，可以由 1 级团队执行监控，而故障排除则需要专家团队。专家组也是设定Level 1 团队使用门槛的团队。故障排除涉及日志分析，因为许多系统不会生成完整的指标，并且一个常见问题背后可能有许多不同的原因。最后，实际的根本原因甚至可能与问题没有密切关系。\n当您区分监控和故障排除时，日常操作就会变得更加系统化。下表显示了差异：\n    监视器 故障排除     问题 问题是什么？ 为什么会发生？问题的真正原因是什么？   自然 主动 反应式   柜台 一般1个柜台。而这个计数器也是SLA。这是您或您的客户检查的第一个柜台。 总是有很多柜台。有多层计数器，一个影响另一个。   SLA 是的，这意味着 SLA 适用 是的。如果违反 SLA，事情就变得很紧急。   关键绩效指标 是的，这意味着您在监控中使用 KPI 而不是单个指标。 是的，但作为起点。然后深入研究支持指标，这些指标通常是原始指标。   指标 初级计数器。作为 SOP 的一部分，您主动检查它 二级计数器。您只检查主要是否达到阈值。   频率 每天执行。作为 SLA 的一部分，黄金级将比青铜级具有更高的定期监控频率。 一经请求。   时间线 现在和未来。您考虑未来的负载并进行预测。 现在。未来无关紧要。你的重点是扑灭火灾或潜在的火灾。    在大多数情况下，最好使用 5 分钟的间隔进行监控，因为 1 分钟的不良指标可能不会对业务产生影响。另一方面，故障排除可能需要每秒粒度。但是，如果您的补救措施相同，这并不总是意味着您需要查看每个计数器。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/","title":"运行管理","tags":[],"description":"","content":"本书的第一部分解释了 VMware 云架构背景下的运营管理艺术。这是第 2 部分的先决条件。\n你建筑师 SDDC. 但是作为业务成果，您交给 CIO 的是 IaaS. 一个是系统，一个是服务。 我们可以根据生产中的实际结果来评估架构的好坏。 它会导致消防和指责风暴吗？或者您是否有一个和平行动，其中警报有意义且可操作？\n 第 1 - 章概述    1. 基于投诉的运营   2. 目的驱动架构   3. 多云基础设施运营   4. 开始思考如何结束   5. VCDX 关系到 VCOX   6. 餐厅类比   7. 服务水平协议   8. 支柱、流程和人员   9. 洞察力和警报    第 2 - 章绩效管理    1. 云管理员生活中的一天   2. 3个领域   3. 计划 监视器 故障排除 优化   4. 争用与使用   5. 性能与容量   6. 性能 SLA   7. 关键绩效指标和服务水平协议   8. 深度和广度   9. 领先指标   10. 基线分析   11. 优化性能   12. 根本原因分析    第 3 - 章容量管理    1. \u0026#34;好处\u0026#34; 劝告   2. 端到端容量   3. 容量规划   4. 需求模型   5. 分配模型   6. 可用容量   7. 投影   8. 峰值利用率   9. 存储容量   10. 优化产能   11. 开垦   12. 调整大小    第 4 - 章配置管理    1. 概述   2. 审核流程   3. 计划与现实    第 5 - 章成本管理    1. 敢比较   2. 价格   3. 成本    第 6 - 章合规管理    1. 概述   2. 网络安全方法   3. 持续合规   4. 政策如何运作   5. 监管基准   6. 自定义基准   7. 查看您的结果    第 7 - 章可用性管理    1. 独立系统”   2. 多组分系统   3. 可用性状态   4. 灾难避免和恢复    "},{"uri":"/vmware-operations-guide/zh/metrics/chapter-2-cpu-metrics/2.2.4-quiz-time/","title":"4. 小测验时间!","tags":[],"description":"","content":"到现在为止，我希望您意识到 4 个关键对象（来宾操作系统、ESXi 和集群）中的各种“利用率”衡量指标各不相同。每个人都有自己独特的行为。因此，您可以正确地假设它们不能很好地跨堆栈映射。让我们用一个例子来测试你的知识。\n来宾操作系统 仔细查看以下图表。这是我运行 Windows 10 的物理桌面。 CPU 有 1 个插槽 4 核 8 线程，因此 Windows 可以看到 8 个逻辑处理器。您可以看到 Microsoft Word 没有响应，因为其窗口变灰。任务管理器通过显示 3 个文档都没有响应来确认这一点。 Word 也消耗非常高的功率，如功率使用列中所示。\n它变得无响应，因为我在 400 页的文档上打开了更改跟踪并删除了数百页。它必须做很多处理，它不喜欢那样。不幸的是，在那之后我无法重现该问题。\n在操作系统方面，Windows 反应良好。我能够关闭所有其他应用程序，并启动任务管理器和 Snip 程序。我怀疑是因为 Word 不会消耗所有 CPU。因此，如果我们在 Windows 级别进行跟踪，我们将 不会 意识到存在问题。这就是为什么如果要监视应用程序，进程级监视很重要的原因。具体到挂起状态，我们应该监控状态而不是简单的CPU消耗。\n在 Windows 任务栏中，除了 Microsoft Word 和任务管理器之外，没有其他应用程序在运行。你能猜出为什么 Windows 级别的 CPU 利用率高于其进程的总和吗？我对为什么 Windows 显示 57% 而 Word 显示 18.9% 的猜测是 Turbo Boost。单个进程级别的 CPU 计数器不会考虑它，而操作系统级别的计数器会考虑。\n我把它放了 15 分钟，什么都没有改变。所以并不是说它需要更多时间来处理更改。我怀疑它遇到了 CPU 锁定，因此运行 Microsft Word 的 CPU 正在 100% 运行。由于 Windows 总体上仅报告 57%，因此跟踪 Windows CPU 中的峰值很重要。这就是 vRealize Operations 在 VM vCPU 中提供峰值的原因。\n虚拟机与 ESXi 仔细查看以下图表。必要时放大。\n上面的 vCenter 图表 1 显示了 VM 利用率计数器。这是一个带有 24 个 vCPU 运行受控 CPU 测试的大型 VM。电源管理是固定的，因此它以标称时钟速度运行。这消除了 CPU 频率缩放因子。\n它从 50% 的“利用率”开始，每个 vCPU 固定到不同的物理核心。然后它会随着时间缓慢上升，直到达到 100%。\n你能弄清楚为什么三个计数器的上升方式不同吗？他们测量什么？\n现在让我们看看对父 ESXi 的影响。它只有一个 VM，但 VM vCPU 与 ESXi 物理内核匹配。 ESXi 以 50% 的“利用率”开始，然后随着时间的推移缓慢上升，直到达到 100%。\n你能弄清楚为什么 3 个计数器的上升方式不同吗？他们测量什么？像往常一样，答案可以在 部分 4.\nESXi 利用率与争用 ESXi“利用率”与 ESXi“争用”无关。 4 个突出显示的区域是衡量指标不相关的例子，其中一些甚至相反。你能猜到为什么吗？\n像往常一样，回答 部分 4.\n  由\u0026hellip;提供 Valentin Bondzio\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/2.1.4-resource-management/","title":"4. 资源管理","tags":[],"description":"","content":"您需要了解 vSphere 用于管理共享资源的以下概念：\n 资源预留 资源限制 资源共享 使用权  资源预留代表一种保证。它会影响提供程序（例如 ESXi），因为这是进行预留的地方。但是，它在 CPU 和 RAM 上的工作方式不同。\nCPU 如果 VM 不使用该资源，那么就 VM 而言，它不会发挥作用。它仅在 VM 实际使用它的期间强制执行。\nRAM 如果尚未使用，则不会生效。这意味着 ESXi 主机不会为 VM 分配任何物理 RAM。但是，一旦 VM 请求内存并为其提供服务，就会保留物理 RAM。从那时起，即使虚拟机不再使用物理 RAM，ESXi 也会继续保留物理 RAM。从某种意义上说，尽管虚拟机闲置了好几天，页面还是被锁定了。消耗的测量指标包括这个以反映这种行为。即使它没有被使用，也没有其他虚拟机可以触及它。\n 不应使用限制，因为它对来宾操作系统不可见。结果是不可预测的，并且可能造成比减少 VM 配置更糟糕的性能问题。对于 CPU，它会影响 CPU Ready 计数器。对于 RAM，在 VMX 文件中，这是 sched.mem.max.\n与静态配置的预留和共享不同，使用权是动态计算的。它考虑了限制、保留和份额。对于 Shares，它当然必须考虑在同一主机上运行的其他 VM 的 Shares。虚拟机不能使用超过 ESXi 授权的内容。\nReservation, Share 和 Limit 是相对静态的。除非手动更改，否则它们不会波动。因此，它们的行为更像是一种财产，而不是一种衡量指标。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-7-availability-management/1.7.4-disaster-avoidance-and-recovery/","title":"4. 灾难避免和恢复","tags":[],"description":"","content":" 本页出租。这意味着我们需要一位贡献作者！\n 处理灾难恢复时有 3 个主要用例：\n避灾 您可以通过在延伸的 vSphere 集群上执行远程 vMotion 来避免灾难。\n 你有足够的 WAN 带宽吗？ vMotion 是否在预期时间内完成？ - 如果不是，是什么原因造成的？ vMotion 期间的性能影响是什么？由于管道是共享的，这也会影响其他虚拟机。  DR 测试 您正在按照监管机构或内部业务连续性计划的要求进行测试。您的生产 VM 仍在运行，因此您需要对网络进行冒泡。\n 您在恢复站点上是否有足够的资源？ 是否在预期时间内完成？如果不是，是什么原因造成的？  DR 实际 你正在做实际的恢复。这可以是计划的或计划外的。\n 你有足够的资源吗？ 对目标集群和数据存储有什么性能影响？  在大型环境中，您可以让多个集群参与主动/主动 DR，相互保护。这会创建复杂的关系，尤其是当您有数百个业务应用程序并且它们跨集群时。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.4-how-the-policies-work/","title":"4. 政策如何运作","tags":[],"description":"","content":"在介绍了 vRealize Operations 中提供的内容之后，让我们讨论这些策略的工作原理。他们在做什么？所有这些策略的基础是某些配置和警报设置。根据官方文档，“vRealize Operations 中的所有合规性标准，包括您定义的任何标准，都基于警报定义。仅计算合规性子类型的警报定义。自定义记分卡可以监控用户定义的警报。” 1。\n例如，“ISO 安全标准”以许多其他方式检查以下内容：\n 在 ESXi 主机上配置 SSH 服务以实现合规性 通过禁用SSH服务和shell服务并启用锁定模式来限制对主机的远程访问 在 vCenter Server 中提供复杂的密码 在 vCenter Server 中配置锁定  所有这些配置都在环境中检查。根据环境中的这些检查定义症状，并最终为这些症状设置警报。\n如果有任何警报，则表示设置策略中存在错误配置，需要更正。\n这也导致定义您自己的自定义症状的范围 -\u0026gt; 警报 -\u0026gt; 基准.\n  来源：VMware 文档\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.4-demand-model/","title":"4. 需求模型","tags":[],"description":"","content":"需求反映了生产中的现实，因为它基于集群和数据存储中资源的实际需求。它默认启用，无需任何配置，无法禁用。\n需求大于消耗您容量的活动负载。活动负载是可见的需求，您可以使用利用率指标对其进行监控。有不可见的需求，因为它目前没有使用。\n使用 vRealize Operations 中的分配模型和缓冲区设置来满足这种无形的需求。请注意，缓冲区在可用性之后应用。\n突然的需求 这可能会在共享环境中造成严重破坏。一组要求很高的 VM 可以共同影响集群或数据存储的整体性能。这方面的一个例子是年度销售或股市崩盘。在这种情况下，容量团队应设置适当的过载比率并通过分配驱动，因为大部分时间需求较低。\n潜在需求 许多关键虚拟机都受到灾难恢复的保护。在 DR 演习或实际灾难期间，此负载将“唤醒”并消耗掉。您应该将 Site Recovery Manager 计划纳入您的能力范围。\n潜在需求 许多新配置的 VM 需要时间来满足其全部预期需求。数据库达到最大规模，用户群达到目标，功能完成需要时间。新配置的 VM 往往处于空闲状态（可能是几个月）并且可能会突然增长。当这种情况发生时，将导致需求增加。\n未满足的需求 它分为两部分：VM 内部和 VM 外部。\n如果 VM 过小，未满足的需求将不会对底层基础架构可见。除非这是有意为之，否则在集群容量监控中包含小型虚拟机是明智之举。\n未满足需求的可见部分成为 IaaS KPI 和 SLA 的一部分，在性能管理章节中进行了介绍。\n 在容量背景下计算需求时还有另外两个考虑因素。\n 资源预留 资源限制  尚未消耗的预留会影响容量，但不会影响性能。使用餐厅类比，如果您的所有餐桌都已预订，但只有 20% 出现，则剩余容量为 0，但可以轻松为所有客户提供服务，实际需求仅为 20%。\nCPU 和内存的行为不同，因为当预留持有者不使用 CPU 预留时，它不会生效。\n需要考虑限制，因为需求不能超过强制限制。好的部分是需求计数器已经考虑到了这一点。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.4-contention-vs-utilization/","title":"4. 争用与使用","tags":[],"description":"","content":"在 VM 层，我们关心特定的 VM 是否被平台很好地服务。从 VM 所有者的角度来看，其他 VM 无关紧要。因此，这里的关键计数器是 VM 争用。基础设施指标无关紧要。只有当我们对没有争用感到满意时，我们才能继续检查 VM 的大小是否正确。大多数人首先检查利用率，因为他们习惯于在物理基础设施中进行监控。在虚拟环境中，我们应该首先检查争用。\n大多数原始指标可以分为 3 种类型：\n 他们衡量一些 坏（例如争用、延迟） 他们衡量一些 好的（例如利用率、消费） 它们说明某些内容（例如库存、配置）  因此，消费，也称为利用率，是一系列指标。它有许多不同的名称（IOPS、吞吐量、使用情况、需求、活动等）。它的对立面是争用类型的指标。利用率是计数器容量系列（剩余容量、剩余时间、VM 剩余、推荐大小）的主要来源。\n竞争是性能的主要计数器系列，而利用率是容量的主要计数器系列。 Performance \u0026amp; Capacity 以不同的方式使用这两种类型的计数器。了解每个需求对于优化性能和容量至关重要。\n大多数人关注 利用率，因为他们担心如果它很高，就会发生错误。那个“东西”就是争论。争用表现为不同的形式。它可以是队列、延迟、丢失、丢弃、中止、上下文切换。\n下图显示了三种不同的场景\n 你认为会发生什么。您从理论上讲，只有在利用率高时才会发生争用，而未使用的容量充当缓冲以防止发生未满足的需求。 在大多数环境中实际发生的情况。由于次优配置或限制，即使利用率不高，需求也未得到满足。 如果您的环境得到优化，会发生什么。您的利用率非常高，但仍将未满足的需求保持在承诺的 SLA 内。  不要将 “超高” 利用率指标混淆为性能问题。只要没有队列或争用，高利用率不会影响性能。仅仅因为 ESXi 主机正在经历膨胀、压缩和交换，并不意味着您的 VM 存在内存性能问题。您可以通过主机为其 VM 提供服务的程度来衡量主机的性能。虽然它与 ESXi 利用率有关，但性能指标根本不基于利用率。它基于争用指标。\n利用率不是性能的计数器。这是容量的计数器。利用率越高，完成的工作就越多，因此性能就越好。 100% 的利用率实际上是最好的性能，只要没有争用。由于我们可以明确地跟踪争用，性能计数器成为次要的，支持计数器。\n下图显示了典型 IaaS 中的所有层，重点是消费者端。\n争用高于利用率，因为这是您应该推动运营的因素。正如 Mark Achtemichuk 在 这篇文章，由竞争驱动。对于每一层，您都有一组指标。黑线显示争用是性能的主要计数器，而利用率是容量的主要指标。\n绿线显示争用计数器通过显示需要多少额外容量来为容量提供有价值的输入。例如，应该使用 CPU 中的队列数来确定要添加的 CPU 数量。\n蓝线表示下层的竞争直接影响上层的性能。例如，如果来宾操作系统遇到磁盘延迟，应用程序将感受到影响。这可能会对顶层产生涟漪效应。\n红线不是实线，因为它显示了一种误解。如果争用 = 0，那么 100% 的利用率实际上是最高性能。如果我们无法衡量争用情况，则添加缓冲区（例如 90% 的利用率），因为队列往往会以高利用率发展。另一方面，在低利用率的情况下性能可能很差。很多事情都会导致这种情况。这里只是一些。\n"},{"uri":"/vmware-operations-guide/zh/metrics/","title":"衡量指标","tags":[],"description":"","content":"第 2 部分（衡量指标）深入探讨了您最常使用的关键衡量指标，应将其视为第 3 部分的先决条件。\nvRealize Operations 附带了数以千计的衡量指标和属性，涵盖 vSphere、vSAN、客户操作系统等中的对象。如果我们一个一个地取一个对象，用衡量指标来记录衡量指标，那就是既枯燥又混乱。您很可能会感到失望，因为它没有解释您的问题是如何解决的。\n本文档从您开始。它侧重于您在运行多云操作时尝试解决的问题。它查看所有用例并从那里分解重量指标，这有助于您理解为什么重量指标以这种方式分层。 vRealize Operations 从受监控的系统中获取原始计数器，并制定更能满足您的操作需求的更高级别的计数器。\n 第 1 - 章概述    1. 衡量指标的细微差别   2. 来宾操作系统与虚拟机   3. 随着时间的推移聚合 vs 更高级别对象的聚合   4. 资源管理   5. ESXTOP    第 2 - 章 CPU 衡量指标    1. 来宾操作系统   4. 小测验时间!    "},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/2.1.5-esxtop/","title":"5. ESXTOP","tags":[],"description":"","content":"我从 esxtop 和 vRealize Operations 中了解了计数器。对我来说，esxtop 提供了原始指标，并深入了解 ESXi 如何进行会计处理。在 esxtop 中，您可以看到物理 (ESXi) 和虚拟 (world) 的计算方式不同。 esxtop 上有很多很棒的资料，尤其是来自 Valentin Bondzio，他在那里深入解释了计数器。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.5-regulatory-benchmarks/","title":"5. 监管基准","tags":[],"description":"","content":"让我们谈谈开箱即用的监管基准。如前所述，vRealize Operations 提供了下面提到的基准测试：\n 互联网安全中心 (CIS) 安全标准 国防信息系统局 (DISA) 安全标准 联邦信息安全管理法案 (FISMA) 安全标准 1996 年健康保险流通与责任法案 (HIPAA) 合规性 ISO网络安全标准 支付卡行业 (PCI) 安全标准  需要注意的有趣一点是，所有这些基准测试都适用于同一组对象，主要是 vCenter、ESXi、VM、分布式端口组和分布式虚拟交换机。你可能会问，如果它们在相同的环境中工作，安全设置相似，它们有什么不同？\n这些监管基准由监管机构针对特定用例开发和认证。假设 ESXi 主机有 100 个配置要进行。其中一个基准可能需要配置其中的 60 个，另一个可能需要 60 个要求的另一种组合。例如，假设一个基准测试只需要“root”密码需要设置一个到期时间。但另一个要求还需要根据定义的标准设置密码复杂性。\n您可以应用所有基准的所有建议并遵守所有这些建议。合规性检查的目的是根据监管基准进行认证，以便每个人都可以确保满足要求。如果没有合规性和认证，只需要信任口耳相传。对基准的遵守提供了信任和真实性。\nCIS网络安全标准 Internet 安全中心 (CIS) 控制和 CIS 基准提供 Internet 安全的全球标准，并且是保护 IT 系统和数据免受攻击的公认全球标准。 vRealize Operations 提供警报、策略和报告以根据 CIS 强化指南 1 验证 vSphere 资源。使用此内容验证以下资源：\n ESXi 主机 虚拟机  CIS 标准提供了两种不同的推荐区域，手动和自动。以下是可以自动化的 CIS 安全标准检查的配置示例：\n 确保为每个 VM 配置单个盐的默认值。默认情况下，salting 处于启用状态（Mem.ShareForceSalting = 2）并且每个 VM 都有不同的 salt。这意味着页面共享不会发生在 VM 之间（VM 间 TPS），而只会发生在 VM 内（VM 内）。 确保NTP时间同步配置正确。 确保 ESXi 主机防火墙配置为限制对主机上运行的服务的访问。 确保禁用托管对象浏览器 (MOB)：MOB 主要用于调试 vSphere SDK。由于没有访问控制，MOB 也可以用作获取有关作为未授权访问目标的主机的信息的方法。 确保不要使用默认的自签名证书进行 ESXi 通信。 确保 SNMP 配置正确：如果 SNMP 配置不正确，包含敏感信息的监控数据可能会被发送到恶意主机，用于帮助利用该主机。 如果未使用，请确保未配置 dvfilter API：如果 dvfilter 网络 API 已启用并在将来配置，攻击者可能会尝试将 VM 连接到它，这可能会提供对主机上其他 VM 网络的访问。 确保在将主机添加到 Active Directory 时使用 vSphere Authentication Proxy：如果您将主机配置为使用主机配置文件加入 Active Directory 域，则 Active Directory 凭据将保存在主机配置文件中并通过网络传输。为避免在主机配置文件中保存 Active Directory 凭据并避免通过网络传输 Active Directory 凭据，请使用 vSphere Authentication Proxy。 确保禁用 VDS 运行状况检查：一旦启用了 vSphere Distributed Switch 运行状况检查，它就会收集包含有关 host#、vds#port# 的信息的数据包，攻击者会发现此信息很有用。  CIS 安全标准执行更多此类检查，有关详细列表，请从其 下载基准 网站.\nDISA网络安全标准 DISA 隶属于国防部 (DoD)，是一个作战支援组织。不遵守 DISA 发布的指南可能会导致组织被拒绝访问 DoD 网络。此合规性包验证以下资源的合规性：\n vCenter ESXi 主机 虚拟机 分布式端口组 分布式虚拟交换机  来源: VMware 虚拟市场\nFISMA网络安全标准 FISMA 是美国立法，它定义了保护政府信息、运营和资产免受自然或人为威胁的综合框架。此合规性包验证以下资源的合规性：\n vCenter ESXi 主机 虚拟机 分布式端口组 分布式虚拟交换机  来源: VMware 虚拟市场\nHIPAA 合规性 HIPAA 提供数据隐私和安全条款以保护医疗信息。适用于 HIPAA 的 vRealize Operations 合规性软件包扩展了 vRealize Operations 的 SDDC 合规性功能。此合规性包验证以下资源的合规性：\n vCenter ESXi 主机 虚拟机 分布式端口组 分布式虚拟交换机  来源: VMware 虚拟市场\nISO网络安全标准 ISO/IEC 27001 是 ISO/IEC 27000 系列标准中最著名的标准，为信息安全管理系统 (ISMS) 提供了要求。此合规性包验证以下资源的合规性：\n vCenter ESXi 主机 虚拟机 分布式端口组 分布式虚拟交换机  来源: VMware 虚拟市场\nPCI 网络安全标准 PCI 安全标准强化指南解决了对消费者支付信息日益增长的威胁。 PCI 对于接受、处理或接收付款以预防、检测和响应可能导致违规的网络攻击的公司非常重要。此合规性包验证以下资源的合规性：\n vCenter ESXi 主机 虚拟机 分布式端口组 分布式虚拟交换机  来源: VMware 虚拟市场\n  来源: VMware 虚拟市场\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.5-allocation-model/","title":"5. 分配模型","tags":[],"description":"","content":"默认情况下，分配模型是 不 启用的，因为过量使用率因客户而异。您应该适当地配置它以考虑与该集群相关的所有类型的需求。通过使用两者，您可以考虑两种输入（真实需求和非真实需求）。\n分配的下一个用例是演示文稿和报告。通常有一些限制，例如合同义务或 SLA，要求容量不超过商定的比率。请注意，这些限制通常是非技术性的。\n一些客户喜欢根据过度使用来计划购买。确定适当的过度使用率，这是用于预测未来利用率的一个因素。过度使用率旨在提供对利用率的粗略估计。例如，4:1 的 CPU 过量使用率意味着平均每个 vCPU 只会以 25% 的利用率运行。\n分配模型有 3 个主要限制：\n虚拟机大小 过量使用比率中不考虑 VM 大小。它假设调度两个巨大的虚拟机就像调度许多小型虚拟机一样简单。与几个大型虚拟机相比，ESXi 调度程序可以处理更多的小型虚拟机，尤其是当它们在不同时间达到峰值时。\n过度配置的虚拟机 过度配置 VM 的问题很常见，尤其是在大型 VM 中。在生产环境中很难解决这个问题，因为它涉及停机时间，你有责任证明它不会影响性能。从政治上讲，这可能会使确定 VM 大小并证明成本合理的团队看起来很糟糕。最好的方法是首先通过使用累进定价来预防问题。这在本书的 定价 部分进行了描述。\nIaaS 工作负载 不考虑不采用 VM 形式的 IaaS 工作负载。 VMkernel、vSAN、NSX、vSphere Replication 和 vMotion 都需要考虑。另一方面，包含代理虚拟机是因为它采用虚拟机的形式，尽管它倾向于使用本地数据存储。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.5-performance-vs-capacity/","title":"5. 性能与容量","tags":[],"description":"","content":"容量和性能之间的关系因对象而异。消费者对象（例如 VM、K8S Pod）与提供者对象（例如 vSphere 集群、vSAN 集群）具有不同的性质。对于提供者对象，性能始终是自下而上的。您从在提供程序对象中运行的 VM 开始，然后聚合指标。容量总是自上而下的。你先看大局，然后再深入。例如，您从 vSphere 集群开始，然后深入到 ESXi。\n对于 IaaS 提供商，下表说明了性能和容量的差异。\n容量有 HA、Buffer、Overhead 和 Reservation。这些都与性能监控无关。在性能中，您不关心它们，因为性能与现实有关（实际发生的情况）。它们可能会导致性能问题，但不会在性能指标中考虑。\n性能和容量的混淆在于利用率。它们共享相同的原始计数器，但使用方式不同。性能是绝对的（实际值），容量是相对的（取决于设置）。下表显示了如何不同地使用利用率。\n以 ESXi Memory Consumed 为例，它是 ESXi 的主要利用率计数器。\n 从性能监控来看，100% 消耗不仅好，而且完美。您正在最大化缓存。只要没有膨胀和争用，这正是您想要的。 从容量监控来看，100% 消耗并不好，因为这意味着没有更多剩余容量。您需要停止供应新负载并开始购买新硬件的过程。此外，100% 是在扣除 HA 和缓冲区后测得的可用容量。它不是根据绝对体能来衡量的。  让我们举一个例子来看看争用和利用率有何不同。下面以集群对象为例。有两个计数器，每个计数器都以百分比表示。\n您希望利用率尽可能高，因为您已经为硬件付费了。因此，您从 0% 开始，但希望尽可能向上移动。\n你希望你的表现保持在 100%。你不希望它向下移动很远。事实上，10% 的降级可能很重要，因为这可能意味着 10% 的 VM 群体受到影响。在具有 2000 个虚拟机的大型集群中，这可能意味着 200 个虚拟机。\n性能取决于服务等级。 Gold 集群可能与 Bronze 集群具有相同的硬件，但在 Gold 集群上运行的 VM 面临的争用较少，因此它们的性能更好。\n让我们在现实生活中看看上面的内容。这是一个在过去 7 天内经常出现高利用率的集群。您可以清楚地看到峰值。集群有 14 个 ESXi 主机。\n这里的一个合乎逻辑的问题是对 VM 性能的影响是什么？他们得到了他们要求的 CPU 吗？该集群有 550 个正在运行的 VM。\n这就是争用计数器的用武之地。一个跟踪问题的深度，另一个跟踪问题的广度。\nCPU Ready \u0026gt; 1% 的虚拟机计数器百分比显示出几乎相同的模式。我们可以看到很大比例的 VM 人口受到影响。\n第二个计数器跟踪深度，给出集群中任何 VM 经历的绝对最差 CPU 就绪值。\n"},{"uri":"/vmware-operations-guide/zh/dashboards/","title":"仪表盘","tags":[],"description":"","content":"最后一部分介绍仪表板。在这 3 个部分中，这将是每个 vRealize Operations 版本中变化最大的部分。\n将来，我们应该添加报告和警报，因为这三个本质上是 vRealize Operations 与用户通信的方式。渴望接受挑战？\n 第 1 - 章设计注意事项   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.6-custom-benchmarks/","title":"6. 自定义基准","tags":[],"description":"","content":"您可以通过单击“添加自定义合规性”卡片来添加自定义基准。您可以创建一个新的或导入一个现有的。这不仅允许定义自定义基线，还允许它在其他环境中进一步重用。\n为自定义基线提供名称并添加可选描述。\n接下来，选择要作为合规性检查的一部分启用的警报定义。您可以单独检查所需选项或从基线开始并进一步自定义选项。您可以通过选择“定义器”过滤器来选择基线。\n选择警报后，选择将启用合规性检查的策略。\n这将定义并启用自定义基线。同样，将运行初始评估并针对它生成报告。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.6-usable-capacity/","title":"6. 可用容量","tags":[],"description":"","content":"正如本书前面提到的，可用性 是一个仅适用于容量的概念。没有可用的性能。可用容量是减去总容量和容量团队决定排除的部分后得到的非实数。这部分通常考虑可用性、隐身要求和辅助要求。这个数字不是真的，因为实际可用容量可能会超过这个数字。\n可用性 对于硬件来说，这意味着增加的部分是为了满足不可用期。常见示例是磁盘中的 RAID、存储阵列中的热备件和 vSphere 集群中的 vSphere HA。许多硬件部署成对出现（例如网络交换机），因为其中一个节点用于可用性，而不是容量。\n在 vSphere Cluster 中，您通常会设计至少一台主机作为备份，以便在不减少服务的情况下进行维护和升级。当这个宿主参与现实时，你在你的能力范围内将它排除在外。 vRealize Operations 从可用容量中排除 HA。\n辅助需求 这通常是开销，可能发生在使用者级别（例如虚拟机快照）或提供者级别（例如 vSAN 重新同步、VMkernel CPU）\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.6-performance-sla/","title":"6. 性能 SLA","tags":[],"description":"","content":"谷歌“性能SLA”VMware，你只会找到几篇相关的文章。字符串性能 SLA 必须在引号内，因为它不是性能和 SLA，而是 性能 SLA。是的，我正在寻找带有性能 SLA 字样的网页。如果您只是在没有报价的情况下使用谷歌搜索 VMware Performance SLA，您将得到许多不相关的结果。\n我只是在 2021 年 3 月 14 日再次尝试。Google 返回的结果不到 20K，高于 2015 年 10 月的 1.6K 结果。前 10 个如下所示。注意其中 8 个来自我的博客、书籍或演讲活动。来自 Sunny Dua 的一项，谈论我们提出的相同性能 SLA 概念，出现在前 10 名。最后一项来自 Michael Webster，他曾在 VMware 工作几年前。\n我检查了前 10 个结果。除了我自己的文章，谷歌只返回了少数相关文章。如果您仔细阅读，其余的实际上并不相关。相关文章提到了性能 SLA，但没有定义和量化性能 SLA 是什么。如果某件事没有量化，那就是主观的。如果界限不明确，就很难快速、一致地与客户达成正式协议。如果您与客户，尤其是付费客户存在分歧，请猜猜谁会赢。\n可用性 SLA 可在停机时为您提供保护。性能 SLA 在出现性能问题时为您提供保护。\nvSphere 的性能 SLA 在下表中定义：\n使用典型的 30 天月份\n你知道为什么你应该只使用 CPU Ready 而从 Performance SLA 中排除 CPU Co-Stop 和 CPU Contention 吗？\n我花了很多年才意识到这个错误。\n答案在本书末尾的 第 4 部分：测验答案 中。\n绩效管理的全部意义在于能够_在客户抱怨之前_知道问题。如果您不能在客户之前看到问题，那么您就没有进行绩效管理。 manage 这个词意味着积极主动。被动等待警报或投诉触发故障排除过程不是管理。 Proactive 需要一个比外部正式商定的 SLA 更严格的内部阈值。这就是 KPI 的来源。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/1.6.7-checking-the-result/","title":"7. 查看您的结果","tags":[],"description":"","content":"如下图所示，默认的合规页面清楚地展示了环境对不同策略的合规状态。 “合规卡”显示基于合规基准的环境状态。\n要查看有关某个主题的更多详细信息，请单击该主题的卡片。这为我们提供了环境的详细视图。\n请注意“合规警报列表”下的链接。这为我们提供了违规的详细信息。单击链接会将我们带到特定的警报详细信息。\n另请注意，对于任何选定的对象，我们都可以从“合规性”选项卡中检查与该对象相关的合规性。\n报告认为，我们需要进一步纠正这些问题，更好地做好合规工作。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.7-projection/","title":"7. 投影","tags":[],"description":"","content":"预测的准确性取决于数据量和周期长短。具有季度末高峰的工作负载自然至少需要 6 个月才能准确。如果有足够的数据，vRealize Operations 将考虑 6 个月以上的数据。虽然它对最近的数据给予了额外的重视，但如果出现突然但持续时间短的变化，它可能不足以影响预测。\n短期和一次性的瞬态峰值不应影响容量规划，因此在预测中影响可能并不明显。\n持续的峰值将持续更长时间并影响预测。如果峰值不是周期性的，由于指数衰减，对投影的影响将随着时间的推移而减少。\n周期性峰值表现出周期性模式或波。例如，每小时、每天、每周、每月、每月的最后一天等。可以有多个重叠的循环模式，它们也会被检测到。虽然您不应仅根据几天的数据做出容量决策，但您确实需要 5 分钟的粒度作为输入。应考虑每小时重复一次的 5 分钟高峰。\n如果您没有 3 个月而只需要总体尺寸，请考虑使用第 97 个百分位值。为什么是第 97 个百分位？它基于标准差原理。距离中点的两个 标准差 等于 95%，3 个标准差 = 99.7%。因此，第 97 个百分位数在 2 SD 和 3 SD 之间提供了良好的平衡。通常，它会捕获适量的峰值和异常值。\n剩余容量（%） 使用的是未来 3 天的预测值，因此它可能与当前使用的容量不同。由于是未来值，所以存在置信区间。您可以在激进（基于带的上限）和保守（基于实际轨迹）之间进行选择。另一方面，如果当前利用率超过可用容量，vRealize Operations 会将剩余容量的值设置为 0%。\n请注意，CPU 剩余容量 (%) 和剩余内存容量 (%) 在策略中显示为已启用，但无法使用。这是一个应该隐藏的内部指标。\n剩余时间 衡量容量耗尽前的天数。最长预测为1年，超过1年的时间只显示为1年。保守值基于剩余容量预测的上限。\n剩余虚拟机 衡量可以装入集群的平均大小的 VM 数量。平均 VM 大小是自动计算的，因此它会随着时间和集群而变化。 vSphere 数据中心和 vCenter 级别的其余 VM 只是子集群的总和。未计算这些级别的平均 VM 大小，因此您喜欢混合大小。此外，VM Remaining 值不会低于 0。数据中心可能会显示正的 VM Remaining 值，即使其成员集群之一短暂下降。\n推荐大小 基于规划窗口中的最高投影值，而不是窗口末尾的投影值。默认情况下，VM 的规划窗口为 60 天。这来自于30天配置缓冲+30天（剩余时间的默认阈值在绿色区域，如截图所示）。\n如果 VM 使用量随着时间的推移而增加，预测可能会随之而来，您将获得一个在未来 60 天内存在的数字。\n如果您的操作可以经常调整，请将剩余时间窗口更改为 0。这将提供 30 天的调整期。\n请注意，推荐的内存大小四舍五入到最接近的 GB。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.7-kpi-vs-sla/","title":"7. 关键绩效指标和服务水平协议","tags":[],"description":"","content":"我同意一组确定复杂对象（例如 VM 或应用程序）运行状况的指标在 100% 的情况下永远不会准确。这很正常，就像在现实生活中一样。我们进行年度健康检查，进行各种测试，结果将是一系列指标（例如您的坏胆固醇水平）。从年轻到年老，它们对您来说是否 100% 准确？结果是否对您所在城市的每个人都 100% 准确？不，但它们已经足够好了，而且肯定比没有好得多。除了绝对值之外，值随时间的相对变动也能让您洞察力。例如，如果 KPI 在一个安静的星期天早上下降，而环境不应该有已知活动，那么可能有不好的事情发生？\n在这本书中，我对 KPI 的定义严格按照性能，因为性能这个词有特定的含义。对我来说，KPI 作为一个术语不适用于可用性管理和容量管理。我们应该将决定可用性的关键指标称为KAI，将决定容量的关键指标称为KCI[^1]。这将防止混淆，因为实现级解决方案要求我们明确术语。\n本书没有使用包括非绩效在内的更广泛的 KPI 定义，因此我们可以在实现中精确。对于整体业务 KPI, Norman Dee 写了一系列的博客文章 这里.\n要使 KPI 支持 SLA，它使用的阈值必须与 SLA 使用的阈值相同。\n假设您有三类服务，其中 Gold 是最高和最贵的。\n黄金级应该比青铜级表现更好。这是期望，所以我们需要在实际生产中反映这一点。 Gold absolute 性能应该更好，因为它被设计得更好。一开始它的价格更高是有原因的。\nKPI 这种绝对性能的测量范围是 0 - 100%，因此很容易理解，100% 是最好的。从数学上讲，KPI 实际上是无单位的。我可以选择另一个范围，例如 0 - 4，它不会有任何区别。使用百分比和 0 - 100 只会更容易记住。\nKPI 按原样报告原始性能。\n大多数 KPI 是内部的。它们用作故障排除的起点。\n对于每种类型的对象，旨在将所有绩效指标整合到一个 KPI 中。假设您有 1000 个要监控的 AWS EC2。您有一堆指标，并将它们考虑为 2 个 KPI。您如何知道哪个 EC2 有问题？您需要显示 2 组热图或表。这意味着您需要手动将第一个表与第二个表相关联。它不可扩展。\n当您滚动到更高级别的对象时，上述内容也带来了挑战。\nSLA 虽然 Gold 的表现应该比 Silver 好，但对于 Gold SLA 来说可能还不够好。尽管黄金在绝对意义上比青铜快，但它自己的 SLA 也可能会失败。相对以二进制来衡量。通过或失败。因为它是一个二进制文件，它无法衡量它通过的好坏或失败的坏。这是 KPI 对其进行补充的一个领域。\nSLA 通常在一个日历月内进行衡量，这意味着 5 分钟的一次故障不构成正式的 SLA 故障。\nSLA 是外部的，因为它写在合同中。\n 下表显示了 KPI 和 SLA 之间的关系。两者都采用相同的指标和阈值作为输入，但由于目的不同，它们的分析方式不同。\n所有三个服务类别共享相同的 KPI 集，这些 KPI 是绝对的。快就是快。这是事实，无论您贴上什么商业标签。\n 要定义您的 KPI，请获取每个 KPI 指标并准确定义速度，并将其分为四个区域。为简单起见，每个区域都给出了 100% 的四分之一。 理想情况下，将 Gold SLA 设置在最高范围，即 KPI 的绿色范围。 理想情况下，将 Silver SLA 设置在绿色以下的范围内，即 KPI 的黄色范围。如果它们在绿色范围内，则您已经超额交付（或正在超额交付）。您应该通过销售更多 VM 或购买更便宜的硬件来优化成本。 期望青铜在橙色范围内。如果它们在绿色到黄色范围内，则您交付过多。 没有应该在红色范围内。这是您的关键警报被触发的地方。由于 KPI 的真正目的是启用主动运营，因此您希望尽量减少处于红色区域的情况。  在前面的例子中，白银范围被赋予了一个宽带。虽然这在数学上是可能的，但在操作上它会产生不必要的复杂性。将一种颜色映射到每个服务类别要容易得多。此外，拥有 3 级以上的服务会使您的操作复杂化并增加您的成本。\n让我们看一个例子来说明：\n VM 磁盘延迟的金牌 SLA 为 8 毫秒，铜牌为 26 毫秒。 Gold VM 007 的磁盘延迟为 9 毫秒。青铜级 VM 747 的磁盘延迟为 25 毫秒。黄金级的绝对值表现更好。但是，相对而言，Gold 级未通过 SLA，而 Bronze 级通过其 SLA。  如果您有一个没有 SLA 的免费层级，那么它们位于红色区域中是可以的。商业云提供商提供免费层。它们被有意设计为更慢且更不可靠，因为它们希望您升级和付费。\n内部的 SLA 对于每个 SLA，可以有_许多_个关联的 KPI，因为并非所有指标都应在合同中，而几乎所有性能指标都需要监控。\nvRealize Operations 对 vSphere IaaS 内部 SLA 使用以下阈值。这些数字在产品中是固定的。\n以上是严格的门槛。使用了高标准的性能，因为它是基础设施团队消费的内部 KPI。它不是外部的、正式的 SLA。内部和外部之间需要有一个缓冲，给运营团队反应的空间。缓冲区是您的误差范围。\n高标准的另一个原因是它必须适用于关键任务环境。如果阈值对于此类环境不够好，您将不会得到早期警告。\n单个阈值用于保持操作简单。这意味着生产环境中的性能预计会比开发环境中的得分更高。开发环境的性能显然会比生产环境差。单个阈值有助于区分不同服务类别提供的 QoS（服务质量）差异。你付出的少，你的表现就会变差。您支付半价；你得到了一半的性能。\nIaaS 的上述四个要素（CPU、内存、磁盘、网络）在每个收集周期都进行评估。默认收集周期为 5 分钟，这是 SLA 监控的适当平衡。基于 1 分钟收集周期的 SLA 将过于紧张，会导致成本增加或阈值降低。\n以下示例采用 vRealize Operations 8.2，表明 IaaS 为该虚拟机提供了良好的服务。它获得了过去 24 小时内要求的四种 IaaS 资源，只有一个例外。每次 VM 未获取资源时，图表都会计数。未在所有四个上提供服务的 VM 将在图表中注册值 4。\n下面的例子显示了相反的情况。在许多实例中，VM 没有获得至少四种 IaaS 资源中的一种，而在一个实例中没有获得两种。该图表还显示了 7 天，因此可以看到模式或峰值。\n既然我们可以测量每个虚拟机，我们可以在 ESXi 主机或集群级别汇总指标。以下公式对集群中所有正在运行的 VM 求平均值。您希望看到接近 100% 的数字，因为预期集群可以很好地为所有 VM 提供服务，而不仅仅是其中的 99%。在具有 1000 个虚拟机的集群中，99% 可能意味着 10 个虚拟机没有得到很好的服务。只需一台虚拟机即可投诉！\n以下示例显示集群正在努力为其所有 VM 提供服务。\nKPI 我们之前分享过 SLA 只考虑通过或失败。它不衡量你通过的有多好或你失败的有多糟糕。这就是 KPI 补充 SLA 的地方。 KPI是在VMware Horizo​​n监控中实现的，所以我就以它为例。\nKPI 定义为 0 - 100%。当我们使用 4 种颜色时，我们将它们平均分配。所以绿色只是 75% - 100%，红色只是 0% - 25%。如果您创建了不均等的分布，则某些波段将必须比其他波段更窄。对于不均匀的波段，在为构成 KPI 的每个指标定义阈值时，您还需要格外小心。\n以下 KPI 使用 4 个指标作为其输入。每个指标都有一组绿色、黄色、橙色和红色的阈值。\n现在我们有了每个指标的阈值，我们可以将每个指标转换为绿色 - 红色。当整个范围由单个数字定义时，Horizo​​n 适配器也能够处理。当您想要定义 green = 0 时，这很有用。这意味着单个数据包丢失会将指标置于黄色范围内。\n我们如何翻译？\n让我们举一个例子。以磁盘延迟 (%) 指标为例。它的范围从 0 到 40 毫秒，使用以下映射表映射到 0 - 100%。\n通过上面的映射，我们可以精确地分配值。举些例子：\n 9 毫秒的磁盘延迟转化为 77.5% 的 KPI 值，这是绿色的。原因是绿色范围从 75% 到 100%，其中 0 ms 等于 100%，10 ms 等于 75%。所以每毫秒大约是 2.5%。 42 毫秒的磁盘延迟转化为 0%。它高于 40 毫秒的上限阈值。由于我们不显示负数，任何高于限制的都显示为 0%  我们对每个指标重复计算。 KPI 只是指标的平均值。\n将来，我们可以添加_加权平均值_，以便您获得更好的领先指标。简单平均的问题是单个红色可以超过许多绿色，KPI 不会显示问题。\n[^1]：你看，我并不反对行话。只要它们实际用于现场操作。如果它只是一个目标，那么就不需要用术语来标记，否则我们必须为每一种类型的目标创建术语。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.8-peak-utilization/","title":"8. 峰值利用率","tags":[],"description":"","content":"我们从客户那里得到的一个常见要求是需要调整峰值。我们经常看到定义峰值实际是什么的错误，因为默认情况下，平均值 会妨碍。\n因此，让我们详细说明峰值。\n您如何定义峰值利用率或争用而不会过于保守或激进？\n峰有两个维度。您可以跨时间或小组成员衡量它们。\n我们以一个有 8 台 ESXi 主机的集群为例。下图显示了 8 个 ESXi 利用率。\n当天集群的最高利用率是多少？\n此问题的问题在于一天有 1440 分钟，因此每个 ESXi 主机至少有 288 个计数器（基于 5 分钟的报告周期）。因此，该集群当天有 288 x 8 = 2304 个指标。真正的峰值必须是这 2304 个指标中最高的。\n要获得这个真正的峰值，您需要跨组成员进行测量。对于每个样本数据，从利用率最高的主机获取利用率。在我们的集群示例中，在上午 9 点 05 分，主机 1 的利用率是所有主机中最高的。假设它达到 99%。那么我们认为上午9:05集群 峰值 的峰值利用率也是99%。\n您对每个采样周期（例如，上午 9:10、上午 9:15）重复此过程。您可能会在不同时间获得不同的主机。您不会知道哪个主机提供了峰值，因为它会不时发生变化。\n这个真正的高峰有什么问题？\n是的，它可能太敏感了。仅需要 2304 个指标中的 1 个。如果要忽略异常值，则需要使用百分位数。例如，如果您执行第 99 个百分位数，它将删除最高的 ~23 个数据点。\n请注意，最常用的方法是采用群集中所有 8 台 ESXi 主机的 average 利用率。所以你失去了真正的峰值，因为每个数据点都变成了平均值。集群要达到80%的平均利用率，至少一台ESXi主机必须达到80%以上。这意味着您不能排除主机接近 100% 的可能性。\n相同的逻辑适用于 VM。如果具有 64 个 vCPU 的虚拟机达到 90% 的利用率，则某些内核可能会达到 100%。这种方法会导致漏报，因为它在任何给定时刻取“成员”的平均值，然后随着时间的推移（例如，过去 24 小时）取峰值。\n这种“平均问题”在监控中基本上无处不在，因为它是聚合的默认技术。更深入的阅读请查看 这个 分析 Tyler Treat。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.8-depth-vs-breadth/","title":"8. 深度和广度","tags":[],"description":"","content":"您从以下屏幕截图中注意到了什么？\n请注意，最大值比平均值高出 10 倍以上。平均值相对于最大值也非常稳定。即使最大值变得更糟，它也没有移动。一旦集群无法应对，您就会看到这样的模式。几乎所有的 VM 都可以服务，但 1-2 服务不好。最大值很高，因为始终有一个 VM 未提供服务。\n小心 当您查看集群和数据存储等父对象的计数器时，average 是聚合中使用的默认计数器。查看以下集群级别图表。你注意到一个问题吗？\n这是正确的。在过去 7 天内完全没有性能问题。集群运行良好。\n这个集群运行了 100 多个虚拟机。您在上面看到的是在集群级别聚合的所有这些 VM 的平均体验。如果只有少数虚拟机有问题，但大多数都没有，则上述内容无法显示。\n您需要的是一个集群级别的指标，用于跟踪是否有任何 VM 发生争用。我们有这个，结果很明显。\n相同的模式，但比例是 6000%！\n下图解释了这种事情是如何发生的。\n上图显示了 6 个具有不同磁盘延迟的对象。粗红线显示 6 个对象中最差的延迟随时间变化。\n绘制所有 6 个对象中的最大值，并取平均值，给我们两个不同的结果，如下所示：\n该图表显示平均值可能仍远低于阈值，但一个或多个对象受到影响。平均数是稳定的。 只有当集群无法为大约 50% 的虚拟机提供服务时，平均数量才会变高。因此，平均值是一种糟糕的汇总技术。这是一个滞后指标。\n主动监控需要从多个角度进行洞察。当您听说 VM 遇到性能问题时，您的下一个问题自然是：\n 有多糟糕？您想衡量问题的深度。严重性还可以提供根本原因的线索。 问题持续了多久？有什么模式吗？ 有多少虚拟机受到影响？还有谁受到影响？您想衡量问题的广度。  注意你没有问 “什么是 平均 性能？”​​。 显然，在这种情况下，平均为时已晚。当平均表现不佳时，可能有一半的人口受到影响。\n第三个问题的答案会影响故障排除的过程。事件是孤立的还是普遍存在的？如果它是孤立的，那么您将更仔细地观察受影响的对象。如果这是一个普遍存在的问题，那么您将查看在受影响的 VM 之间共享的公共区域（例如集群、数据存储、资源池、主机）。\n在计算问题的广度时，需要使用严格的阈值。没有这个，您将无法捕捉刚好低于阈值的值。另一方面，如果设置得太低，则会收到很多预警。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.9-storage-capacity/","title":"9. 存储容量","tags":[],"description":"","content":"存储容量不同于计算容量，这本身就是一个挑战。与 vSphere 集群的基本计算能力不同，存储的形状各不相同。两个主要是数据存储和 vSAN，因为很少使用本地数据存储和 RDM。我们将单独讨论 vSAN 容量，因为它有其独特的因素，例如 FTT，需要考虑计算。\n数据存储容量 与计算能力类似，存储能力由两个因素驱动：\n争用 如果数据存储无法为现有虚拟机提供服务，这意味着它们的延迟越来越严重，您是否要添加更多虚拟机？你是对的，不管剩余空间如何，数据存储都已满。\n这里的关键计数器是延迟和未完成的 IO。\n利用率 还剩多少磁盘空间？精简配置使这具有挑战性。它要求我们同时使用需求模型和分配模型来正确回答数据存储的剩余容量。\n 看看下面的两个数据存储。\n哪个剩余容量较低？您会选择哪一个来部署额外的 VM？\n两者都具有相同的 10 TB 可用物理容量，如黑线所示。两者都有相同的分配模型，基于 2:1 的过量使用。但它们有不同的使用率和实际过度使用率。数据存储 1 使用了 5 TB，但已使用 25 TB 进行精简配置。数据存储 2 实际使用了 8 TB，但使用 12 TB 进行了精简配置。红色箭头表示风险。\n    总容量 已用容量      需求模型 10 TB 数据存储 1 = 5 TB\n数据存储 2 = 8 TB 数据存储 1 = 50%\n数据存储 2 = 80%   分配模型 20 TB 数据存储 1 = 25TB\n数据存储 2 = 12 TB 数据存储 1 = 125%\n数据存储 2 = 60%    数据存储 1 的实际使用率较低，但风险较高，因为它的空间多于可回收和过度使用的空间。您应该使用两个容量模型中较低的一个。在这种情况下，您应该选择 Datastore 2。\n精简配置以新配置的 VM 的形式带来了另一种复杂性，因为它们的增长是不可预测的。它们可能会闲置数月并突然增加其存储消耗。随着它们的成熟，它们的增长变得相对更可预测，具体取决于业务应用程序。\n最后是复垦。我添加了一个绿色箭头来表示您可以拥有不同的可恢复值。在上面的示例中，数据存储 1 恰好具有更多可回收空间。\n容量汇总 现在我们知道了如何计算单个数据存储的容量，我们可以解决聚合问题。\n数据存储可能属于一个数据存储集群。由于数据存储集群将数据存储分组到一个更大的池中，我们可以将它们视为一个逻辑池。这简化了容量计算。\n它还可以在具有许多数据存储的大型环境中简化容量管理，因为您可以将集群视为一个整体。它使信息和可视化更紧凑，更易于管理。从数据存储集群，构建一个向下钻取。\n对于过度使用率，我们应该在数据存储集群级别允许较低的过度使用率，以说明数据存储之间的分布不是粒度的事实。下图说明了原因。\n将其汇总到数据中心或 vSphere 怎么样？\n这是不可取的。 vCenter 中的不同数据存储可能有不同的用途，例如 NSX Edge 和业务工作负载。它们的容量不可互换。是的，这意味着我们甚至不应该计算总容量。如果您在全球拥有 1,000 个数据存储，并且每个数据存储有 1 TB 的可用空间，那么您没有 1 PB 的空间。\n那么你可以卷起什么？\n您可以总结 VM Remaining。这只是每个数据存储上剩余的虚拟机总数。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.9-leading-indicators/","title":"9. 领先指标","tags":[],"description":"","content":"您希望能够在早期发现性能问题，此时只有一小部分用户或应用程序受到影响。为此，您需要一个领先指标。领先指标通过提供预警来补充滞后指标，让您有更多时间做出反应。\n平均值是一个滞后指标。大组的平均值往往较低，因此需要用峰值进行补充。另一方面，绝对峰值可能过于极端，包含异常值。\n下表显示了 Max() 找出极端（异常值）而平均值无法检测到问题的位置。这就是 95% 或 99% 更有意义的地方。\n这些是对average() 和maximum() 进行补充的技术。根据情况，您应用适当的技术。\nWorst() 这将返回组的最差值。它适用于成员数量较少的情况，例如集群中的 ESXi 主机。\n如果要忽略异常值，请使用 Percentile 函数。\n在某些情况下，您可能同时需要最差和百分位数以获得更好的可见性。\nPercentile() 它类似于 Worst() 函数，但它在消除最坏的百分比后返回数字。例如，如果取第 99 个百分位数，则消除最差的第 1 个百分位数并取最高值。\n成员数量必须支持百分位函数。如果只有 20 个成员，那么每个成员对应 5 个百分位。你不能做 99%，因为这需要至少 100 名成员。\n您需要相应地调整 percentile() 带，考虑到数组中的成员数量。例如，如果您取 1 个月数据的第 99 个百分位数，您将消除最糟糕的 7.4 小时。另一方面，如果您取 1 天数据的第 95 个百分位，您将消除最糟糕的 1.2 小时。\nCount() 这与 Worst() 或 Percentile() 不同，因为您需要先定义阈值。例如，如果您对性能不佳的 VM 进行计数，您需要定义什么是坏的。这就是为什么 Count() 要求您定义红色、橙色、黄色和绿色的波段。然后您可以跟踪红带上的对象数量，因为您预计该数字始终为 0。在某些情况下，等到对象到达红色区域可能为时已晚，因此请考虑用橙色区域中的成员计数来赞美它。\n当成员数量非常大时，Count() 比 average() 效果更好。例如，在具有 100K 用户的 VDI 环境中，受影响的 5 个用户为 0.005%。使用计数更容易监控，因为您可以看到它如何转化为现实生活。\nDisparity() 当成员穿制服并打算平均分担负载时，您还可以跟踪他们之间的差异。这揭示了当平均水平仍然良好时，该组的一部分何时遭受痛苦。\n使用差异 您期望平衡的示例是：\n VM vCPU 之间的使用情况。如果 VM 有 32 个 vCPU，您不希望前 8 个受到影响，而后 16 个没有使用。 集群中 ESXi 之间的使用 场中 RDS 主机之间的使用 在 Pod 中的 Horizo​​n Connection Server 之间的使用 vSAN 磁盘组中磁盘的使用情况  有两种计算不平衡的选项：\n 除以总数。这是一个固定数字，因为总数是一个常数。 除以最大值（最高）。这是一个动态数字，因为最大值在波动。不平衡是相对的，因为它取决于 Max 指标的值。  这两个用例都有其目的。由于以下原因，我们首先使用：\n 这是最常见的。第二个用例用于低级应用程序分析或调整，而不是一般的 IaaS 操作。 也更容易理解。 不平衡绝对值低时，不会导致高数。请参阅下面的图表  以下计算表明，使用相对不平衡会导致较高的数字，这可能会产生误导，因为实际不平衡仅为 10%\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.10-optimized-capacity/","title":"10. 优化产能","tags":[],"description":"","content":"优化容量意味着您可以 100% 的利用率运行，而不会浪费或影响性能。您可以通过两种方式进行优化：消费者和提供者。\n在消费者级别（进程、来宾操作系统、容器、VM），可以优化以下内容：\n在提供者层（ESXi、集群、数据存储和数据存储集群、分布式交换机和端口组、硬件），您可以优化以下内容：\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.10-baseline-profiling/","title":"10. 基线分析","tags":[],"description":"","content":"您如何分析您的环境以设置阈值？你如何确定什么是可以接受的？最近几个月的实际价值是多少？\n以上所有问题都可以通过分析您的环境来回答。\n假设您在 10 个集群中有 5000 个虚拟机。所有这些集群都提供相同级别的服务。您想证明 5% 的 CPU Ready for VM 是否是一个很好的阈值，或者您想知道这些 VM 在过去 3 个月内经历的实际 CPU Ready。\n您希望至少分析最近 3 个月的数据，以便不排除该期间内的任何峰值。由于 vRealize Operations 每 5 分钟存储一次此计数器，因此您一天将拥有 288 个数据点，3 个月内将拥有 26,298 个数据点。\n步 1 对于每个集群，您可以测量任何 VM 所经历的最差 CPU Ready。\n一个拥有 500 个虚拟机的集群将用任何在 5 分钟间隔内遇到最高 CPU 就绪状态的虚拟机来表示。因此，您每 5 分钟分析 500 个指标并取最坏的结果。\n步 2 你做上述3个月。\n由于 3 个月内有 26,298 个数据点，这意味着您分析了 13,149,000 个数据点\n步 3 在 13+ 百万中取最差的可能会给你一个异常值。\n为了解决这个问题，在比较第 100、99 和 95 的值后，取第 99 个百分位数。平均值不适用，因为您希望接近峰值。\n您将此记录为过去 3 个月内为该集群准备的最差 CPU。\n步 4 您对每个集群重复步骤 1 - 3。\n 以上为您提供了问题的深度。正如以前所涵盖的那样，您需要用问题的广度来补充这一点。该步骤是类似的，除了在步骤 1 中计算虚拟机体验 \u0026gt; 2.5% CPU 就绪的百分比。\n为什么是 2.5% 而不是 5%？\n为了让您获得更好的可见性，因为 \u0026gt;5% 的数字可能太小了。\n对所有集群执行上述操作后，您可能会得到这样的结果。\n如果您想查看最近 3 个月 VM CPU Ready 的实际分布怎么办？您可以通过创建条形图并指定分布桶来实现。在下面的示例中，我指定 0% - 1%、1% - 2%，直到 5%，因为这些是我感兴趣的范围。\n请注意，在这种情况下，我将值设置为第 99 个百分位数，因为取 Max 可能会给出异常值。\n如果你想看更多的例子，我应用这个基线技术来计算 CPU Context Switch 和 CPU 运行队列。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.11-reclamation/","title":"11. 开垦","tags":[],"description":"","content":"开垦带来许多好处，其中一些列在下面\n有6个填海区，从最简单到最难。当然，每个人的逻辑都不一样。\n非 VM 文件是最简单的，因为它们不归其他人所有。他们是你的！非 VM 对象（例如模板和 ISO）应存储在每个物理位置的 1 个数据存储中。当然，只能回收磁盘，不能回收CPU和RAM。\n孤立文件是数据存储中不再与任何 VM 关联的文件。隔离的 VM 和隔离的 VMDK 甚至没有在 vCenter 中注册。如果是，它们可能会以斜体显示，表示有错误。他们也可能没有所有者。\n对于孤立的 RDM（原始设备映射），从存储阵列检查是否有任何 ESXi 挂载它。\n快照不是备份。如果它们保存的时间过长，它们确实会导致 VM 出现性能问题。保留它们只是为了在更改期间提供保护。一旦验证更改成功，保留快照会对虚拟机造成损坏。快照更容易回收，因此 vRealize Operations 将它们单独列出。\n修剪和取消映射 当 Guest OS 删除一个文件或其中的一部分时，它不会将值替换为 0，而只是离开该块。这样更有效，也可以恢复。但这会导致底层 VMDK 增长。同样的事情发生在数组级别。这就是 修剪和取消映射 的用武之地。\nvRealize Operations 通过 ESXi 主机上的 2 个衡量指标跟踪取消映射操作。第一个是 Unmap IO，它跟踪取消映射 SCSI 指令的数量。例如，如果值为 100，则表示 ESXi 已向其数据存储发送了 100 个取消映射请求。所以把它看作是 IOPS，除了 IO 不是写/读实际块，而是更多请求删除（取消映射）后端数组中的块。此值是自 vSphere 每 20 秒报告一次后 20 秒的总和，然后在 5 分钟内求平均值。在下面的示例中，您可以看到主机在过去 30 天内频繁发送 unmaps 命令。\n第二个指标是 Unmap Size，它跟踪上述操作的总未映射空间。该值以 MB 为单位显示。\n您可以在每个数据存储上跟踪这两个操作，但不能按数据存储聚合它们。\n要详细了解 vSAN 中的 TRIM 和取消映射，请阅读 这篇详细的文章 这篇文章是由 Patrick Kremer.\n此问题仅发生在精简配置的磁盘上。因此，如果要检查可以回收多少空间，请创建一个视图，将 Guest 中的值与 VMDK 级别显示的值进行比较。\n无电源虚拟机 关闭虚拟机更加困难，因为现在有了虚拟机的所有者。在删除它们之前，您需要与 VM Owner 打交道。这是他们用所有者的电子邮件或业务部门标记的地方。\n汽车为什么要刹车？\n所以他们可以走得更快！\n使用断电作为空闲 VM 的刹车。如果将空闲和关闭电源视为一个连续体，则可以更早地关闭空闲虚拟机。您可以获得 CPU 和 RAM 回收的好处。这也是一个更安全的过程，因为如果您发现虚拟机实际上正在被使用，您只需重新打开它即可。\n一个主要的 警告 如果这样做，群集中剩余虚拟机的平均利用率将变得更高。因此，您可能无法达到收支平衡所需的过度使用率。\n运行虚拟机的2个方面 就像有两个大小调整公式（一个用于访客操作系统，一个用于 VM）一样，运行 VM（空闲与否）也有两个回收公式。该公式很复杂，因为它有两个不同的阶段：\n前 确定 *** 如果 *** VM 属于该类别。例如，VM 是否符合空闲 VM 的条件？这应该查看 VM 内部，因为这是工作负载运行的地方。在 ESXi 级别进行测量可能会产生不正确的结果，因为其中包括不是由 VM 生成的负载。\n之后 确定 什么 可以回收。由于正在回收的是 ESXi 资源，因此来宾操作系统内部的使用无关紧要。 Guest 内部的队列不会影响管理程序，因此在 ESXi 层没有任何可回收的内容。所有计数器都来自 ESXi。来宾操作系统计数器不适用，因为我们不会从来宾内部回收。\n所以你需要应用两种不同类型的逻辑。\n空闲虚拟机 空闲 VM 是一个很好的目标，因为您现在可以在关闭电源时声明 CPU 和 RAM。您还不能声明磁盘，因为您还没有删除它们。请注意，您并没有回收真正的 CPU 周期，因为它一开始是空闲的。空闲虚拟机实际上不消耗任何 ESXi CPU 周期。因此，回收仅运行 1 个 vCPU 的 10 个 vCPU 虚拟机不会为您提供 9 个 vCPU。你正在回收空白的空气。对于内存，您将回收真实的 ESXi 内存，因为空闲 VM 往往会将其消耗的内存保留在 ESXi 上。\n让我们看看公式的第一部分，在这里我们决定 VM 是否空闲。如果您在很长一段时间内测量空闲状态，那么很少使用的 VM 可能会显示为空闲状态。例如，如果虚拟机每周只有 2 小时（从业务角度来看）有生产力，则意味着剩余的 166 小时应归类为空闲。那是 98.8% 空闲。\n请注意，较长的时间窗口会提高准确性，但也会延长移入和移出空闲 VM 定义所需的时间。\n您可以通过创建列表视图来应用上述逻辑。注意极端情况，例如具有月末处理的 VM。即使您将 99% 设置为 1 个月，逻辑仍然可能错误地将活动 VM 标记为空闲。 1% 活跃意味着它在 30 天内总共只活跃了 8 小时（0.3 天）。请注意，这是一个总数，而不是连续的 8 小时。它在 30 天内累积。理想情况下，您需要进行每日检查，这意味着它必须每天都处于闲置状态。\n连续闲置 30 天，然后活动 8 小时的 VM，只需 8 小时即可标记为非闲置。没有累积 8 小时 CPU \u0026gt; 100 MHz 的 VM，显然需要更多时间。因此，VM 可能会在激活后的几天内被错误地标记为空闲。\n设置为 99% 的缺点是我们必须等待整整 30 天才能决定。在某些极端情况下，VM 可能永远不会被标记为空闲。看一个场景：\n 一台虚拟机一直处于活动状态并已投入使用数月。两年后，随着新版本的发布，该应用程序将被淘汰。 结果，VM 处于空闲状态，因为它只是在等待被删除。但是因为我们将其设置为 99%，逻辑将等待整整 30 天才能做出决定。 在此期间，由于 AV 和操作系统补丁等基本服务仍在运行，因此会消耗 CPU/RAM。如果这些非应用程序工作负载在 30 天内加起来超过 8 小时，VM 将永远不会被标记为空闲。  从 vRealize Operations 7.5 开始，空闲虚拟机的固定阈值为 100 Mhz。这意味着在 2 GHz ESXi 上运行的单个 vCPU 虚拟机的利用率为 5%。这也意味着在同一 ESXi 上的 20 个 vCPU 上为 0.25%。根据定义，静态空闲的原因是绝对的，与 VM 的大小无关。非常大的 VM 是相对的。\n虽然 VM 使用了 CPU、RAM、磁盘和网络，但我们只使用 CPU 作为空闲的定义。没有必要考虑所有 4 个并要求所有 4 个都是免费的，因为它们是相互关联的。处理网络数据包和执行磁盘活动需要 CPU 周期。来自网卡和磁盘的数据也必须复制到 RAM 中，复制工作需要 CPU 周期。\n请注意具有失控 CPU 的 VM 的极端情况限制，其中 CPU 很高但没有有意义的内存访问、网络传输 (TX) 和磁盘处理。空闲的 VM 将无法检测到它。这是一个角落案例，所以我认为不值得复杂化。另外，CPU失控通常发生在一个进程中，可能是单个线程。使用 CPU 使用率差异 (%) 指示器来检测。\n闲置必须被定义，所以它是可衡量的，而不是主观的。将其宣布为正式政策，这样您就不会与客户发生争议。\n闲置必须考虑它在这个阈值下持续了多长时间。\n虚拟机在几个月内不会不间断地使用 CPU。有时候懒惰是正常的。月底处理工资单的虚拟机可以闲置29天。\n根据定义，空闲意味着它没有执行有用的业务工作负载。仅执行非业务工作负载（例如 AV 扫描、定期 Windows 更新）的 VM 应被视为空闲。\nvRealize Operations 使用可回收空闲衡量指标来指示虚拟机是否空闲。如果连续 N 天的计数器空闲指示器 = 1（N 的默认值为 7 天），则该值设置为 1（真）。这是一个每日计数器，每天显示一次，如下例所示：\nIdleness Indicator 是一个属性，因此只有在更改时才会显示值。它是滚动计数器，每 5 分钟计算一次，但每个值都需要过去 24 小时。正如您在以下示例中看到的那样，只有在发生更改时才存储其值。\n如果 CPU 使用率连续 24 小时 \u0026lt;100 MHz，则空闲指标值 = 1。\n在某些环境中，使用新配置的 VM 可能需要一些时间。在关闭 VM 之前检查 VM 的创建日期。\n##超级虚拟机\n超大虚拟机的逻辑不同于空闲虚拟机的逻辑，因为空闲虚拟机的定义不依赖于虚拟机的大小。空闲虚拟机的定义只是衡量虚拟机是否产生足够的工作负载。\n空闲具有绝对定义（在 vRealize Operations 7.5 中为 100 MHz）。超大 VM 取决于 VM 的大小。运行 7 个 vCPU 的 64 个 vCPU 虚拟机非常大，而运行 7 个 vCPU 的 8 个 vCPU 则不是。\n空闲以 GHz 为单位定义，超大以 % 定义。\n虚拟机容量不足 根据 CPU 和 RAM 的总容量和建议的大小值计算。\n如果对于至少一个容器（CPU 或 RAM），建议大小 \u0026gt; 总计\n增加CPU的最小值为1 vCPU，内存为1 GB\n虚拟机太大 如果可以回收CPU或内存，说明虚拟机容量过大。\n根据 CPU 和 RAM 的总容量和建议的大小值计算。\nVM 可回收 CPU 根据虚拟机的槽数和核心数计算\n= 在最低限度 (( 可回收插座 * 每个插槽的核心数 + 剩余插槽中的可回收核心), CPU内核数 - 2) 如果 CPU Reclaimable 值 \u0026lt; MHz Per Core 值，则不会建议回收\n虚拟机可回收内存 = 总容量 - 推荐尺寸 必须=\u0026gt; 1 GB，回收后的剩余容量应=\u0026gt; 2 GB\n开垦方法 Active VM 在政治上是最难的，因为它们服务于业务工作负载。首先关注大型虚拟机。分别使用 CPU 和 RAM，因为拆分它们时更容易处理。分而治之。如果两者都降低，并且应用程序团队声称对性能产生影响，则需要同时恢复两者。无论闲置情况如何，从小型虚拟机中获取 CPU 和 RAM 都是徒劳的。无法进一步减少具有一个 vCPU 的空闲 VM。关注大型虚拟机，原因已涵盖 这里.\n在减少超大虚拟机或关闭空闲虚拟机时，请注意大型虚拟机。举个例子来比较：\n 减少 20 个大型虚拟机。平均减少 10 个 vCPU。 减少 100 个小型虚拟机。平均减少 2 个 vCPU。  在这两种情况下，您都回收了 200 个 vCPU。但是大型 VM 选项带来更多好处并且更容易实现。原因如下：\n 每次缩小规模都是一场战斗，因为您正在通过“少即是多”改变范式。此外，它需要停机时间，这需要审批和变更请求流程。 现在，使用 20 核以上的至强处理器，从 4 个 vCPU 缩减到 2 个并不多。 没有人喜欢放弃他们得到的东西，尤其是如果他们得到的很少。通过专注于大的，你花费 20% 的努力来获得 80% 的结果。 大型 VM 对其他 VM 也不利，而不仅仅是对它们自己。它们可以影响其他大小的虚拟机。 ESXi VMkernel 调度程序必须为所有 vCPU 找到可用内核，即使它们处于空闲状态。因此，其他 VM 可能会从核心迁移到核心，或从套接字迁移到套接字。 esxtop 中有一个计数器可以跟踪此迁移。 大型虚拟机的性能往往较慢。 ESXi 可能没有所有可用的 vCPU。大型虚拟机速度较慢，因为必须调度它们的所有 vCPU。计数器 CPU CoStop 对此进行跟踪。 大型虚拟机会降低整合率。与大型 VM 相比，您可以使用较小的 VM 打包更多的 vCPU。  未使用的虚拟机 未使用的 VM 不会闲置，但它们不再提供业务价值。应用程序团队可能已停止使用它，但仍继续运行该应用程序，以备将来需要时使用。 VM 不会空闲，因为它仍然会生成 CPU 活动。活动可以是业务工作负载、IT 工作负载或两者兼而有之。\nIT 工作负载有多种形式。来宾操作系统升级、更新和补丁可以是具有不同模式的 3 种不同工作负载。 VMware Tools 补丁、防病毒扫描、入侵检测扫描和基于代理的备份是其他常见示例。在一个高安全性的环境中，可以有很多与安全相关的代理在运行。\n业务工作负载可以是批处理作业、报告或监控。没有人再使用该应用程序，但该应用程序继续运行。这比运行纯 IT 工作负载更难识别。\n未使用的虚拟机很难检测到，因为基础设施团队缺乏业务背景，并且模式差异很大。关闭虚拟机前需要进行所有者验证。这就是将 VM 与部门或所有者相关联的能力很重要的原因。我们在第 1 部分中讨论了以业务为中心的基础架构的重要性。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.11-optimized-performance/","title":"11. 优化性能","tags":[],"description":"","content":"优化性能很困难，因为当利用率/吞吐量为 100% 时才能实现最佳性能。由于相互依赖的许多方面，在该级别上运行需要完美的掌握水平。\n垂直依赖 堆栈中有层，下层的问题会影响上层。\n水平依赖 IaaS 的四个要素不是独立的。当 CPU 暂停时，就来宾操作系统而言，RAM 和磁盘会随着时间的推移而出现延迟。\n流依赖 由于流量，NSX Edge 群集上的 NSX Edge 虚拟机中的问题可能会影响位于另一个群集上的业务虚拟机。如果您不了解流程，则可能会浪费时间在错误的集群上进行故障排除。\n版本依赖 “什么与什么一起工作”背后有正当的理由。并非所有组件的所有版本都能很好地协同工作，这是一个已知问题。驱动程序、固件等可能会导致互操作性问题，这可以表现为性能。\n消费者层 消费者层由虚拟机和容器（通常在虚拟机内运行）组成。客户操作系统存在于其中，反过来又为进程运行提供了一个平台。因此，如果您正在运行容器，则会添加一个新层进行监控。如您所见 此处，添加新层会改变相邻层中的指标。如果您有容器监控方面的专业知识，请给我发电子邮件！\n在流程级别，用于故障排除的有用信息似乎有限。下面展示了 Windows Sysinternal，一个很好的 Windows 故障排除工具。如您所见，它们只是利用率计数器。\n更多关于 CPU 上下文切换 被覆盖这里.\n由于提供了各种计数器，我们在 vSphere 虚拟机级别具有更好的可见性。下表列出了您可以为解决问题而执行的指标和相关操作。\n我没有将 AWS EC2 或 Azure VM 放在这里，因为可见性相当有限。\n现在让我们把来自客户操作系统和虚拟机的所有计数器放在一起。为了完整起见，我也添加了利用率计数器，因为 5 分钟的平均值可能太长了。\nKPI 计数器对于某些用户来说可能过于技术化，因此 vRealize Operations 8.2 包含一个让他们入门的起点。它带有彩色编码仪表板。如果您认为仪表板小部件不符合您的要求，您可以调整它们的阈值。只有在您分析您的环境之后才这样做，而不仅仅是基于理论。\n提供者层 在任何给定时刻，正在运行的 VM 始终驻留在 ESXi 主机上。由于 DRS 和 HA，更容易在集群级别进行监控。由于一个集群可以有数百个 VM，因此您需要能够代表集群中所有正在运行的 VM 的体验的综合指标。 vRealize Operations 8.2 提供以下衡量指标：\n正在运行的 VM 还使用数据存储服务或具有 原始设备映射 (RDM) 磁盘.\n以下是提供者层的潜在问题列表：\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/1.3.12-rightsizing/","title":"12. 调整大小","tags":[],"description":"","content":"由于各种原因，过度配置是现实生活中 SDDC 中常见的不当做法。 P2V 是一个常见原因，因为 VM 刚好与物理服务器的大小相匹配。另一个原因是供应商的规模调整保守，然后由应用团队进一步添加。\n我见过大型企业客户试图进行大规模调整，以减少许多虚拟机的大小，但当虚拟机性能受到影响时却适得其反。\n由于性能至关重要，您应该从这个角度解决它。尽管逻辑看起来很奇怪，但要让 VM 所有者知道正确调整大小实际上可以提高性能需要花费大量时间和精力。胡萝卜比大棒更有效，尤其是对有钱人。在大多数情况下，节省资金是一个弱论点，因为 VM 所有者已经为 VM 付费了。\n调整大小对于 VM 很重要，比对物理服务器更重要。以下是一些好处：\n 来宾操作系统内的进程可能会遇到较少的乒乓问题。 Guest OS 可能不知道物理主板的 NUMA 性质，并认为它具有统一的结构。它可以在自己的 CPU 内移动进程，因为它假定它没有性能影响。如果将 vCPU 分散到不同的 NUMA 节点，例如在具有 2 插槽和 20 核的盒子上安装 20 个 vCPU，则可以体验乒乓效应。 降低 NUMA 效应的风险。降低 RAM 或 CPU 分布在单个插槽上的风险。由于 NUMA 架构，性能不会那么好。 降低共同停车和准备时间。即使应用程序并未使用所有 vCPU，Guest OS 仍会要求管理程序提供所有 vCPU。 更快的快照时间，尤其是在包含内存快照的情况下。 更快的启动时间。如果 VM 没有预留空间，vSphere 将创建一个与配置的 RAM 大小相同的交换文件。如果存储子系统很慢，这会影响启动时间。 更快的 vMotion。 Windows 和 Linux 使用内存作为缓存。它拥有的越多，使用的就越多，其他条件都一样。  过度配置的严重程度 如果您有数千个大型虚拟机，您如何轻松地向高级管理层传达许多大型虚拟机没有使用过去几个月提供给他们的 CPU 的信息？\n您需要展示一个令人信服的图表，该图表显示每 5 分钟数百个大型 VM（您定义为具有 \u0026gt; 16 个 vCPU）的利用率，因此您的演示文稿中不排除一个短峰值。\n您需要做的第一件事是创建一个动态组来捕获所有大型 VM。为 CPU 创建 1 组，为 RAM 创建一组。然后，您可以在过去 3 个月内每 5 分钟绘制一次它们的利用率。\n在完美的世界中，如果所有大型 VM 的大小都合适，您会看到哪种情况？\n这是正确的。场景 2。由于该组有数百名成员，因此其中一个大型 VM 很可能正在使用为其提供的 CPU。平均而言，它们应该在 40 - 50% 左右徘徊，因为在任何给定的 5 分钟间隔内，有些人可能空闲，而另一些人可能很忙。\n我们用于 CPU 和 RAM 的技术是相同的。我会以 CPU 为例。\n创建组后，下一步是创建两个 超级指标:\n最大() 这些大型虚拟机之间的最大 CPU 工作负载。\n您预计这个数字会徘徊在 80% 左右，因为所有大型虚拟机，只需要 1 个虚拟机就可以使折线图达到峰值。\n如果您的最大线始终为 ~100% 平坦，则您的过程可能会失控。\n如果您有许多大型虚拟机，那么在任何给定时间，其中一个往往会被高度利用。\n如果这个数字很低，就意味着浪费严重！\n在最低限度() 这些大型虚拟机之间的平均 CPU 工作负载。\n您希望这个数字徘徊在 40% 左右，这表明调整大小是正确的。\n如果图表在整个月内保持低于 20%，则所有大型 VM 都太大。\n 为什么不需要创建最小值？\n在任何给定时间都必须有一个空闲的虚拟机。\n两个折线图向我们展示了过度配置的程度。你能说出一个限制吗？\n它位于柜台本身。我们无法区分 CPU 使用率是否是由实际需求引起的。真正的需求来自应用。虚幻的需求来自基础设施，例如：\n 来宾操作系统重新启动。 AV 全扫描。 进程失控。如果应用程序是多线程的，这可能会导致 100% 的 CPU 需求。如何区分失控的进程和合法的高工作负载是一个挑战。  公式的两个方面 虚拟机大小是一个经常被误解的术语，因为实际上有多个用例，每个用例都有自己需要考虑的因素。不同的场景需要不同的指标。它不是万能的，所以有不止一种公式。以下是一些流行的用例：\n 您的应用团队需要额外的 vCPU。在这种情况下，管理程序开销无关紧要。调整 NSX Edge vCPU 的大小时，您无需为开销添加额外的 vCPU。它是在 Linux 之外完成的。 您正在将 VM 迁移到 CPU 速度为 2 倍的新 ESXi。例如，从 2 GHz ESXi 到 4 GHz。在其他条件相同的情况下，您可以将 VM 大小减少 2。16 个 vCPU 变为 8 个。但是您担心在来宾操作系统内造成队列，因为应用程序可能需要 16 个慢线程与 8 个快速线程。 您正在将许多 VM 批量迁移到另一个集群，而没有更改它们的配置。考虑 2 个 VM。两者都运行 Windows Server 2019，具有 64 个 vCPU。两者都运行得很热，但其中之一的 IO 很重。它发送大量网络数据包并执行大量磁盘 IOPS。第二个虚拟机在 ESXi 上的占用空间大不相同。它的要求要高得多。所有这些 IO 处理都需要由其他物理内核处理。在这种情况下，您需要考虑外部占用空间。来宾操作系统中的队列无关紧要。 你的老板要求你适当地向客户收费，说明他们的实际要求。你会以同样的方式为上面的两个虚拟机充电吗？你可能出于实际原因，悄悄地平均分配成本，但你知道你不公平。 您正在计划对集群 X 进行技术更新。它有 24 个 ESXi 和 1000 个虚拟机。您希望将基础架构减少到 12 个 ESXi，因此您可以提高 CPU 速度并为每个插槽添加内核。您是考虑单个 VM，还是确实看到它们作为一个组的行为？答案是后者，因为 1000 VM 不会同时达到峰值。您是否考虑过 Windows 或 Linux 内部发生的情况，或者您是否看到它们在 ESXi 上的足迹？正确答案是后者，因为内部发生的事情无关紧要。  从以上 5 个用例中，我们至少需要两个不同的公式：\n 来宾操作系统大小调整。不包括 VM 开销，包括来宾操作系统队列 虚拟机大小调整。包括 VM 开销，不包括来宾操作系统队列     规则 描述     这不仅仅是利用率 它需要考虑未满足的需求。 CPU想运行，但不能。内存在客户操作系统内存中有很多页面错误。   不仅仅是需求 大小基于来宾操作系统需要什么才能正常运行，而不仅仅是基于它当前的需求。适用于 RAM，如果没有缓冲区，Guest OS 无法以最佳方式运行。\n在容量方面，我们不仅根据需求进行调整，而且还根据性能进行调整。虽然我们可以仅使用 In Use 来满足对内存的需求，但这可能会以牺牲性能为代价。唯一比内存更快的是CPU。因此请确保 CPU 不等待数据。这是通过尽可能多地缓存来完成的，因为很难预测程序需要哪些数据。   包括峰值 考虑繁忙或高峰期，因为那是 VM 最需要工作的时候   考虑大局 一次 5 分钟的突发时间太短，无法确定整个接下来的 3 个月。考虑长期模式。仅此一项就使确定尺寸成为一门艺术，因为您需要了解工作量的性质.   不包括 IT 负载 排除来宾操作系统不执行业务工作负载的时间。有一些 IT 工作负载会导致高利用率。常见的有客户操作系统重启、客户操作系统更新、防病毒完全扫描、基于代理的完整备份。只要这些任务不会阻止来宾操作系统执行有用的工作，您就可以排除它们。例外情况是您的 VM 也需要在这些非工作时间运行。所以它取决于虚拟机。\n这是困难的部分，因为它需要了解足迹（读取：进程名称）    向上和向下调整大小应该有相同的公式。\n 唯一的区别是他们有不同的界限。下限适用于缩小规模，而上限适用于扩大规模。 为了缩小规模，Guest OS 需要最少的 RAM 才能运行。 对于扩大规模，请考虑 NUMA 边界。此外，VM 不应大于 ESXi 主机上的逻辑处理器总数，否则它甚至无法启动。事实上，它应该更小，因为您要考虑 VMkernel 开销。  从上面可以看出，调整大小很复杂。以上只是来宾操作系统。我们还没有考虑其他需要调整大小的东西，例如容器和业务应用程序。\n调整大小的艺术有两个部分：时间和度量。\n 首先，我们计算给定时间点的值。输入值的正确性很重要，否则你有 GIGO 效果。 其次，我们随时间绘制数千个这些值，并随着时间的推移对其进行投影。预测必须考虑高峰周期，这意味着它必须面向保守的规模。它还必须考虑商业周期。如果您有年度销售额，请考虑年度数据。  您将在下面看到 CPU 和 RAM 需要不同的方法。\n来宾操作系统 CPU 大小调整 您排除了所有 VM 开销，因为来宾操作系统不使用它。例如，在确定 Windows 或 Linux 应配置多少 CPU 时，不应包括管理程序执行的所有 IO 开销。对于磁盘大小调整，快照不是 VMDK 大小调整的一部分。\n   规则 描述     排除超线程 无论速度和吞吐量如何，来宾操作系统都在运行。效率较低，它只会运行更长时间。它可能会运行 90%，而不是 5 分钟的 40%。如果超过 100%，那么 Guest OS 内部会出现队列。\nDemand 和 Usage 计数器不合适，因为它们的值受 CPU 频率和 HT 的影响   排除 CPU 频率 如上。此处唯一的例外是初始大小调整，此时 VM 尚未创建。应用团队可能需要 32 个 vCPU，频率为 3 GHz。如果您拥有的是 2 GHz，则需要提供更多的 vCPU.   排除空闲时间 CPU 没有运行。是否因为来宾 OS CPU 正在等待来宾 OS IO 无关紧要。最终结果是来宾操作系统没有运行其 CPU。虽然使 IO 子系统更快会导致更高的 CPU 利用率，但这是一个单独的范围。   排除 CPU 上下文切换 这是你无法控制的。此外，无法将其值转换为正确的大小公式。此外，过多的 vCPU 或 IO 可能会导致高上下文切换。来宾操作系统只是在其 vCPU 之间进行平衡。 利用率可能高，但是如果CPU做大量上下文切换，效率就低.   包括 Co Stop \u0026amp; Ready 来宾操作系统实际上想要运行。如果没有阻塞，就会使用CPU。添加/减少 CPU 不会改变这些等待的值，因为它代表了其他地方的瓶颈。但是，它确实说这是 CPU 需要的，我们需要反映这一点。 Guest OS 编号会不准确，因为它的时间被冻结，因此没有“无数据”。   包括 VM 等待、交换等待 当 CPU 等待 RAM 或 IO（磁盘或网络）时，来宾操作系统变为空闲。所以这和 Ready 和 CoStop 的情况是一样的。   包括重叠 来宾操作系统实际上想要运行，但被 VMkernel 中断。请注意，这已经是 CPU Run 的一部分，因此如果我们使用 CPU Run 计数器，则在数学上是不必要的。   包括客户操作系统 CPU 运行队列 如果 Windows 或 Linux 不能满足需求，这是主要的计数器跟踪。   排除管理程序开销 MKS、VMX、系统。虽然它是需求的一部分，但它不是来自客人内部的需求。 VM CPU Used、Demand 和 Usage 计数器包括 VM 级别的系统时间，因此它们不合适。    基于以上所有内容，确定客户操作系统大小的公式为：\n来宾操作系统所需 CPU (vCPU) = (Run + CoStop + Ready + VM Wait + Swap Wait) / 20000 ) + CPU 运行队列因子 结果是 vCPU 的数量。它不是以 % 或 GHz 为单位的。我们正在调整客户操作系统的大小，而不是虚拟机。\n我们需要除以 20,000，因为 20,000 毫秒代表单个 vCPU 的 100%。 此处 解释了有关此单元的更多信息。\n来宾操作系统 CPU 运行队列指标需要进行一些转换才能使用。让我们举个例子：\n VM 有 8 个 vCPU。 整个 VM 的 CPU 运行队列 = 28。 VM 可以处理 8 x 3 = 24 个队列。 缺少 28 - 24 = 4 个队列。 每个额外的 vCPU 可以处理 1 个进程 + 3 个队列。 结论：我们添加了 1 个 vCPU。  与 CPU Usage 相比，没有 CPU 运行队列因素的 Guest OS Needed 差异趋于 10% 以内。使用率更高，因为它包括系统时间和涡轮增压。在 HT 和 CPU 频率降低的情况下，使用率会更低。\n这是一个使用率较高的示例。\n以下是使用率较低的示例：\n一旦我们知道客户操作系统需要什么，我们就可以计算推荐的大小。这是一个预测，需要很多价值。理想情况下，建议是 NUMA 感知。 在确定尺寸后 应用。您调整大小，然后调整以考虑 NUMA。此调整取决于 ESXi 主机。因此，如果您的 vSphere 集群不同，它可能因集群而异。\n来宾操作系统推荐大小 (vCPU) = 向上取整 NUMA（投影（需要来宾操作系统 (vCPU)） 对于基本的 NUMA 兼容，使用 1 个插槽多核，直到超出插槽边界。这意味着您使用 2 个 vCore 1 vSocket，而不是 2 个 vSocket，每个 vSocket 有 1 个 vCore。\n随着 Windows 2008 的发布，切换硬件抽象层 (HAL) 由操作系统自动处理，并且随着 64 位 Windows 的发布，单处理器和多处理器机器没有单独的 HAL 的概念。这意味着一个 vCPU 是一个有效的配置，您不应该将两个 vCPU 设为最小值。\n如果集群中混合了具有不同 NUMA 节点大小的 ESXi，则应在整个集群中使用最小的 NUMA 节点大小。例如，12-vCPU VM 应该是 2 插槽 x 6 核而不是 1 插槽 x 12 核，因为这更适合双插槽 10 核和双插槽 12 核主机。请注意，主机和 VM 上的内存量可能会更改该建议，因此该建议假设内存不是您的方案中的限制因素。\n请注意，该数字以 vCPU 为单位，而不是 GHz，而不是 %。原因是调整是在整个 vCPU 上完成的。事实上，在大多数情况下，它应该是偶数，因为当您跨越 CPU 插槽的大小时，奇数在 NUMA 中不起作用。\n请注意，当您更改 VM 配置时，可能需要更改应用程序设置。这尤其适用于管理自身内存（例如数据库和 JVM）并安排固定数量威胁的应用程序。\n您可以在 VM 上启用热添加，但请注意对 NUMA 的影响。\n参考: 调整大小 by Brandon Gordon.\n虚拟机 CPU 大小调整 需要针对迁移用例或退款用例调整 VM 大小。\n   规则 说明     包括超线程 当 VM 在运行对等线程的线程上运行时，其 CPU 周期会减少。   包括CPU频率    包括VM开销    排除来宾操作系统队列    包括VM队列     基于上述所有内容，确定 VM 大小的公式为：\n所需的 VM CPU (vCPU) = (已使用 + CoStop + 就绪 + VM 等待 + 交换等待) + 系统 / 20000 ) 唯一需要转换为 GHz 的时候是需要迁移到另一个时钟速度不同的 ESXi 时。为了转换为 GHz，我们将数字乘以标称的静态时钟速度。您还可以通过考虑 CPU 生成和速度 来增强这一点，尽管如果处理不当，这可能会带来新问题。如果应用程序在使用许多慢线程而不是少数快速线程时运行得更好，则在 vCPU 减少后，它可能会表现不佳。\n一旦我们知道 VM 需要什么，我们就需要进行项目和推荐。我们应用与客户操作系统相同的技术。\n来宾操作系统内存大小 来宾操作系统内存的准确性在虚拟化世界中一直是争论的焦点。看看下面的使用图。它有两个条，显示为细条和粗条。它们显示不同的阈值。\n细条是所有利用率指标（例如 CPU 和内存）的通用指南。较粗的条特定于内存利用率。\n当您将资金花在基础设施上时，您希望最大限度地利用它，最好是 100%。毕竟，您需要为整个盒子付费。在内存的情况下，使用整个硬件甚至是有意义的，因为内存的真正目的只是磁盘缓存。\n上面的第一条显示利用率范围 (0% - 100%)。绿色范围是您希望利用率下降的地方。低于 50% 标记以蓝色显示，象征寒冷。如果利用率低于 50%，公司就是在浪费钱。因此，位于绿色区域下方的并不是更绿色的区域；这是一个浪费区。另一方面，高于 75% 会带来 性能 可能受到影响的风险。因此我设置了一个黄色和红色的阈值。绿色区域实际上是一个相对 窄的 带。\n现在让我们将上述概念应用于内存利用率。\n一般来说，应用程序倾向于在任何给定时间处理其 工作集 的一部分。该过程并非一直都在触及其所有内存。结果，剩下的就变成了缓存。这就是为什么活动 + 缓存超过 95% 是可以的。如果您的 ESXi 显示为 98%，请不要惊慌。事实上，ESXi 会等到它通过 99% 才会触发 气球 进程。 Windows 和 Linux 也在这样做。现代操作系统正在为您缓存所有这些页面。因此，您希望将免费页面保持在低位。\n   规则 说明     包括高速缓存 来宾操作系统使用 RAM 作为高速缓存。如果根据实际使用情况调整操作系统的大小，它将既没有缓存也没有空闲内存。它将开始分页为 Cache 和 Free 腾出空间，这可能会导致性能问题。因此，这个提议的计数器的名称不应称为需求，因为它包含的不仅仅是未满足的需求。这是操作系统在没有大量分页的情况下运行所需要的。因此，要使用的计数器的名称是 Memory Needed，而不是 Memory Demand。   不包括页面文件 包含页面文件会导致大小过于保守，因为 Windows 和 Linux 甚至在它们的 In Use 计数器中都有缓存。 Guest OS 使用虚拟 RAM 和物理 RAM。当由于内存映射文件没有真正的需求时，它们会主动分页和预取页。这使得无法确定未满足的需求。 Page Vault 不区分真实需求和活跃需求。   不要回到VM指标 因为我们正在调整客户操作系统的大小，所以我们只使用客户操作系统。没有回退到 VM，因为它不准确。   排除延迟 RAM 争用衡量延迟，因此不适用。我们测量的是磁盘空间，而不是延迟。空间，而不是速度。利用率，而不是性能。    与 CPU 不同，Windows 和 Linux 在内存方面有更多不同。\n对于 vRealize Operations 的特定实施，请查看 这篇文章 by Brandon Gordon.\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/1.2.12-root-cause-analysis/","title":"12. 根本原因分析","tags":[],"description":"","content":"有很多事情可能会出错，尤其是在制作过程中和休假前夕。另一方面，您可以更改的设置相对有限。\n我假设您已经遵循了配置最佳实践，因为这本身就是一个很大的话题。您需要查看并应用 Windows、Linux、vSphere、NSX、vSAN、服务器硬件和网络硬件性能最佳实践。如果您使用 Horizo​​n，那么您还需要应用其最佳实践，以及您的 VDI 架构中使用的第 3 方技术。在具有多个版本和供应商的大型环境中，可能很难确保整个堆栈兼容。这是一项永无止境的工作，因为您需要跟上版本和产品的生命周期。\n假设你已经完成了所有的配置检查，那么你能做的剩下的事情就相当有限了。对于性能问题，它基本上归结为容量，虚拟机容量或基础设施容量。\nvMotion 作为一个主题不断出现。如果您的应用程序团队有顾虑，这篇 文章深入探讨了它的工作原理和 这 介绍了 vSphere 7 中的增强功能。\n根本原因分析 报告因客户而异，即使他们解决的问题本质上是相同的。报告中排名第一的内容应该是什么？\n报告的主要内容应该是设置为跟踪以防再次出现问题的警报。如果不设置此警报，您将无法检测到问题，并且可能会浪费宝贵的时间。\n根本原因很可能与症状不同。它可能完全发生在不同的对象上，并且错误消息可能看似无关。根本原因通常以日志消息开始，这意味着它没有作为正式警报冒泡到屏幕 (UI) 中。当供应商支持团队向您推荐要捕获的特定日志消息时，您如何验证它是正确的？\n您需要确保警报有效。这意味着它不应导致误报。\n让我们举个例子。这是一个 VDI 大规模断开连接问题，其中 \u0026gt;100 个用户的会话同时断开连接。分析认为问题出在“正在恢复DV端口的流量”，所以当它再次出现时我们需要捕获这个消息。\n您需要做的第一件事是验证上述警报。使用 Log Insight 之类的工具，您可以针对整个环境交叉检查消息，尤其是健康环境（在本例中为未受影响的用户）。理想情况下，您可以交叉检查整个星期，而不仅仅是在事件发生期间。\n以下是我在过去五个工作日内对所有用户进行交叉检查的结果。它发生了 1000 多次，这意味着“恢复 DV 端口上的流量”不是我应该基于警报的消息。他们太多了，并且在办公时间之后有一个明确的模式。\n"},{"uri":"/vmware-operations-guide/zh/","title":"VMware 操作指南","tags":[],"description":"","content":""},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.1-complaint-based-operations/","title":"1. 基于投诉的运营","tags":[],"description":"","content":"您如何知道基础设施即服务 (IaaS) 平台（无论是在本地还是在云中）正在为其工作负载提供 好 ？如果您依赖投诉，那么您将运行基于投诉的运营。\n不幸的是，从被动转变为主动是一项复杂的工作，尤其是在有许多角色和角色的大型组织中。 这需要 运营转型 和范式转变. 让客户同意【服务水平协议】并不容易 SLA (SLA) 当你已经承诺他们“好”多年时。本书旨在提供实用指导，您可以使用当前版本的 vRealize 产品实施这些指导。\n这 指标 下内容可帮助您评估 IaaS 的成熟度。\n您的客户是否责怪您的基础设施？ 如果答案是肯定的，请花点时间思考原因。您可能会在运营中依赖投诉，因此您实际上是在鼓励他们。没有抱怨，没有问题。这就是为什么它被恰当地命名为基于投诉的操作。\n您依赖投诉的原因是运营没有其他衡量成功的方法。您尚未定义 IaaS 的性能。\n这是本书的目标。\n成熟运营的标志是您拥有完整、正确、准确的服务水平协议 SLA. 完整意味着您拥有性能 SLA 和合规性 SLA，而不仅仅是可用性 SLA。正确意味着 SLA 是在每个付费虚拟机上衡量的，而不是在基础架构级别。这也意味着您使用了正确的指标。准确意味着必须每 5 分钟进行一次测量，因为任何超过此时间的间隔都可能会漏掉问题。\n您的 IaaS 是否比公共云或混合云便宜？ 基础设施的商品化意味着您的 IaaS 正在与类似平台（例如 VMware Cloud on AWS 和 Amazon Web Services）进行比较。\n否则，您的 CIO 可能会质疑您的商业价值。拥有内部建筑师的原因是可以在考虑薪水后降低成本。\n服务台是否提供良好的一级防御？ 如果服务台只是将问题传递到下一个级别，则需要查看原因。\n帮助台是您的第一道防线。他们不像你那样技术化。为他们配备一个简单的仪表板，以便他们可以通过发现以下内容来处理 VM 所有者的投诉：\n 是不是IaaS服务不好VM导致的问题？ 如果是，基础设施的哪一部分：CPU、RAM、磁盘、网络？ 如果不是，如何证明令人信服？  当利用率 不 高时，你能证明新基础设施的合理性吗？ 这不是指新项目带来的额外资金。这是指现有集群/存储上的现有工作负载。\n容量是根据利用率和性能来衡量的。如果不能很好地为 VM 提供服务，则集群容量已满。由于购买硬件需要时间，因此您需要一个 警报 系统来检测这种性能下降。\n您是否被许多过度配置的虚拟机所困扰？ 这是一个指标，表明您是作为系统构建商而不是服务提供商运营的。作为系统构建者，您正在干预每个系统（阅读：应用程序）。您调整它们的大小并与应用程序团队争论他们实际上是您的客户。你很忙，因为有很多应用程序，你有很多人。\n如果您作为内部云服务提供商运营 CSP, 您不会“妨碍”业务。您使用有效的定价模型来推动正确的行为。 公有云提供商会不会阻止应用团队购买 40 个 CPU 虚拟机，而他们只需要 2 个 CPU？ AWS EC2 他们没有，所以你也不应该。\n故障排除是否意味着所有部门都参与其中？ 您是否有所有团队（网络、存储、服务器、操作系统、应用程序）都遵循的流程？该过程是否以根本原因分析结束？\n作为 RCA 的一部分，您是否设置了警报，以便在再次出现相同问题时可以更快地检测到它？如果未配置警报，RCA 将不会关闭。警报也很重要，因为它会触发 RCA 过程。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.2-purpose-driven-architecture/","title":"2. 目的驱动架构","tags":[],"description":"","content":"当您构建 IaaS 或桌面即服务时 (DaaS), 你的目标是什么？ 我不是指设计方面的考虑，例如可用性和性能最佳实践。我的意思是你的架构必须交付的 业务结果，从为架构付费的人来看。\n从逻辑上讲，答案取决于销售的产品。从广义上讲，您可以出售应用程序或基础设施。\n对于应用程序，下表显示了各种服务。\n在 DaaS 的情况下，目标是确保最终用户获得高质量的桌面体验，同时保持每个用户的低价格。我们将对此进行更多讨论 这里.\n让我们深入了解 IaaS 业务。 IaaS 有三种变体。每个销售不同的项目，所以目标不可能相同。\n   服务 你在卖什么 例子     IaaS 2个变种:\n虚拟机: VMware 企业客户中最常见的服务。 大多数服务都是“免费”提供的，很少或没有报销.\n资源: 计算或存储资源块，例如 100 GHz CPU 和 100 GB RAM. AWS EC2 是企业外最受欢迎的.   HWaaS 硬件即服务.\n这不是 IaaS，因为客户购买了整个物理 ESXi 主机并拥有自己的 vCenter Server。 VMC.    IaaS 最流行的变体是虚拟机即服务。在此变体中，业务目标是确保应用程序和 VM (VM) 运行 且经济高效。\n成本部分很容易量化。你知道你在硬件、软件、服务和薪水上的花费。 运行良好 中的“井”是困难的部分，因为存在很大的未知数。\n我们以 IaaS 为例。假设您正在为 2 个数据中心的 10,000 台虚拟机进行架构设计。你想象一下，第一个月有 2000 台虚拟机，上半年有 5000 台虚拟机，第一年最后是 10,000 台。您是否了解这10,000台虚拟机中每台虚拟机的基本信息，以便您可以构建基础架构为它们提供良好的服务？\n 他们几岁？它们的 vCPU、RAM 和磁盘配置是什么？ 他们有多激烈？ CPU 利用率、RAM 利用率、磁盘 IOPS、网络吞吐量？ 他们的工作量模式是什么？每日、每周、每月、无模式等。  答案显然是否定的。甚至应用程序团队也不知道，因为某些应用程序可能尚未开发。他们的供应商可能也不知道，因为用法尚不清楚。\nSDDC 将为所有 10,000 台虚拟机提供良好服务的承诺类似于您设计的高速公路将为所有汽车、公共汽车和摩托车提供良好服务的承诺，我们无法预测将使用多少虚拟机以及使用多少虚拟机他们将使用它的频率的虚拟机。 我们将在 Performance 部分详细介绍这一点。\n那么我们如何保证您的 IaaS 将为您的客户提供良好的服务？\n我们可以使用性价比。您与客户分享的原则是所有服务行业都使用的常识：\n 你想要便宜；它不会很快。你想快点；它不会便宜。\n 这是您将 服务等级 与 服务水平协议 一起. 最高级别的服务可提供最佳的正常运行时间和性能，但也是有代价的。 所有这些属性在 SLA 中都有很好的定义，没有任何歧义。合同不受解释。您预先定义所有关键指标，向您的客户保证您有信心按承诺交付。\n然后，您可以构建 IaaS 来提供上述服务类别。服务水平成为您的业务产品。有了这个，你就可以开始思考结局了。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.3-multi-cloud-operations/","title":"3. 多云基础设施运营","tags":[],"description":"","content":"如果您的组织正在努力运行多云操作，请不要气馁。单个私有云（您可以完全控制）已经很难运行，更不用说运行多个不兼容的基础架构了。复杂性是由于架构缺乏成熟度。 涉及的组件太多了，如图 图表 由云原生计算基金会提供。\n但最终，结构会慢慢成熟并成为商品。 CIO 将开始关注运营，因为业务将需要使用 SLA 进行适当的治理。\n无论底层系统架构如何，CIO 仍然需要管理成本、容量、合规性、性能和可用性。 运营支柱不会因为你改变管道而改变。 我们将涵盖更多这些支柱 这里.\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.4-begin-with-the-end-in-mind/","title":"4. 开始思考如何结束","tags":[],"description":"","content":"对我来说，架构是第一天，运营是第二天。第 1 天发生在第 2 天之前。架构是指详细的工作，包括构建和调试系统。虽然高级市场结构 [^1] 是在第 0 天（规划）定义的，但真正的架构工作是在第 1 天完成的。\n但是，如果我们深入思考，第 2 天会影响第 0 天，这就是计划。原因是最终状态驱动您的计划。您的计划驱动您的架构。所以它是 2 -\u0026gt; 0 -\u0026gt; 1，而不是 0 -\u0026gt; 1 -\u0026gt; 2。\n让我们用一个例子来说明第 2 天如何影响第 0 天，进而影响第 1 天。\n假设您是内部云提供商并计划按 VM 收费。您计划提供两种类型的产品：\n 金牌：适用于生产工作负载。性能优化。 银：适用于非生产工作负载。成本优化。  对于 金子，您计划不过度使用 CPU 和 RAM。如果 1 个 CPU 通常使用 4 GB RAM，那么 40 核 ESXi 主机将只需要 160 GB。如果您购买具有 1 TB RAM 的主机，那么您最终可能无法出售剩余的 864 GB，因为您没有可出售的 vCPU。这意味着您的硬件规格会受到影响。这是第 2 天如何影响第 0 天的示例。\n对于 银，您计划为 CPU 过量使用 4:1，为内存过量使用 2:1。\n 您假设 1 个 vCPU 通常使用 4 GB RAM。您的客户可以购买更多或更少的内存，因此 CPU 和 RAM 之间的 4:1 比率只是您的规划指南。 您计划使用重复数据删除 + NSX + vSphere Replication 来运行 vSAN。您还需要大量 IO VM，这需要内核处理。对于所有这些支持的非业务工作负载，您分配了 8 个内核和 64 GB RAM。 -如果您购买 64 核 ESXi，剩余 56 核，您将能够销售 224 个 vCPU。 这 224 个 vCPU 将需要 896 GB RAM。由于您过量使用 2:1，因此 VM 需要 448 GB。您需要的总 RAM 为 448 + 64 = 512 GB。 这意味着您需要的硬件规格是 64 核和 512 GB RAM。如果您购买的 RAM 超过此数量，您可能无法出售这些额外的 RAM，因为您可能没有 vCPU 伴随它们。  以上 2 个示例展示了如何在不考虑平均 VM 配置文件和计划的过载率的情况下确定硬件规格。\n您还在研究黄金可用区的概念，因为它们托管关键任务业务服务。 您公司的 业务连续性 政策规定，如果整个集群发生故障，您计划限制受影响的 VM 数量。 如果您限制为 300 个生产虚拟机，那么您的集群大小不应太大，因为您将无法充分利用资源。我见过许多运行 1000-2000 个虚拟机的 32 节点生产集群。\n在您的服务产品中，您可以让客户检查自己的 VM 运行状况，以及底层平台如何为他们的 VM 提供服务。这意味着您的架构需要知道如何将租户与其虚拟机相关联。您需要有一个标记标准，例如业务单位、部门、联系人姓名。\n您的 CIO 希望向他的同事提供实时信息，以了解 IT 如何为业务服务。这需要您考虑关键绩效指标 KPI (KPI)[^2]. 您如何知道 IaaS 对其消费者而言执行得足够快？您如何证明您符合服务水平协议 SLA (SLA) 你承诺了？\n从性能管理的角度来看，vSphere 集群是资源的最小逻辑构建块。虽然资源池和 VM 主机关联可以提供更小的切片，但它们操作复杂，无法提供承诺的 IaaS 服务质量。资源池无法提供差异化​​的服务类别。例如，您的 SLA 规定黄金的速度是白银的两倍，因为它的收费高 200%。资源池可以给Gold两倍的份额。无法提前确定这些额外的份额是否会转化为一半的 CPU 就绪状态。\n在您的运营中反映您的业务非常重要。创建一个层次结构，运营团队和租户可以在其中轻松找到相关的 VM。这些用户将由业务应用程序驱动，因此您的 IaaS 需要围绕此进行设计。以下结构将业务单位显示为顶级文件夹。每个业务单元可以有 1 个或多个部门（业务单元 C 跨越下图中的 3 个部门）。每个部门都有多个业务应用程序。业务应用通常由多层组成（例如，Web 层、应用层、数据库层）。\n上述限制为重组。您需要重命名，将文件夹移动到新的父文件夹并删除该文件夹。例如，如果业务单位 B 与业务单位 C 合并，并且合并的实体有一个新名称，则需要重命名并删除另一个名称。\n最后但并非最不重要的是，您需要考虑问题。真正的问题发生在第 2 天，因为当时您有一个用于创收交易的业务工作负载。不要设计你不想解决的问题。考虑运行您的架构所需的角色和技能。为每个组件提供必要的可见性 [^3]，并定义构成健康、风险和效率的内容。\n我希望上面的例子表明第 2 天是您想要开始的地方。从头到尾，有句名言 引用.\n您是否注意到上述讨论中遗漏了什么？\n是的，我没有涵盖 自动化。\n这是为什么？\n对我来说，那是建筑的一部分。你不应该自动化你无法操作的事情。因此，自动化不是运营的一部分。自动化是您架构的一个特性，这意味着您在设计系统时已经考虑了自动化。例如，它就像一架具有许多自动化功能的飞机。有线飞行。这是飞机的特点。如何操作飞机，让乘客安全、舒适、准时到达目的地，这就是操作。\n[^1]：营销结构。对缺乏细节的基于 PowerPoint 的图表的简单参考。 [^2]：我理解SLI、SLO、SLA、KAI和KPI的区别。出于 PCMCIA 的原因（人们无法管理计算机行业首字母缩略词），不使用 SLI 和 SLO。精度很好。但是使用过多的行话会增加复杂性。 [^3]：有些人使用了可观察性这个术语，并导致与监控不必要的混淆。这是 PCMCIA 的另一个例子。如果我们真的要分开头发，那么可调试性这个词就更有价值了，因为可以观察到系统并不意味着它是可调试的。\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.5-vcdx-vs-vcox/","title":"5. VCDX 关系到 VCOX","tags":[],"description":"","content":"架构和运营是两个同样大的领域。虽然我们在设计系统时当然会考虑运维，但它不是架构的一部分。这本书是一个操作示例。请注意，它深入到指标中，因为故障排除是操作的核心。\n架构和运营在其他行业也有所不同。设计航天飞机的人不是操作它的人。你需要成为一名宇航员才有资格操作航天飞机。设计 F1 赛车的人不是驾驶它的人。需要不同的专业知识。 它们相辅相成，相互依存，如 阴阳.\n由于基础设施正在成为一种服务，您需要知道如何构建服务（例如，IaaS、数据库即服务、桌面即服务）。\n IaaS 提供哪些服务？你如何定义服务？ 你用什么指标来量化它的质量？ 有多少服务？您如何区分优质服务和普通服务？  您还需要了解按需提供的服务类型。服务架构师走出去与客户会面以了解他们的需求。您现在和将来需要什么样的性价比？从那里，您可以构建相应的服务来预测需求。\n作为业务架构师，您不仅知道运行服务的成本，还知道如何以及何时实现盈亏平衡。您不对盈亏负责，因为您不是云服务提供商的 CIO 或 CEO，但您确实是他们的战略顾问。您知道如何定价，如何定价，最重要的是您的价格具有竞争力（至少您可以提供商业理由）。\n从我与客户的互动中，我注意到基础架构架构师并没有领导 Day 0 阶段。他们为规划阶段提供输入，但不是驱动它的首席架构师。基础架构架构师倾向于关注 技术 位，CFO 和 CIO 不太重视（因此他们花在这上面的时间较少）。他们也不架构操作。我看到许多经验丰富的 VMware 架构师并没有将他们的影响力扩展到架构之外。我认为这是一个失去的机会，因为第 1 天和第 2 天实际上是同一方的一部分。把它想象成 莫比乌斯带.\n受 VCDX 计划的启发，多云运营领域可能需要 VCOX 计划。我们需要编写指南。这就是我开源本书的原因，因此所有运营专家都可以协作并产生最佳运营实践。\n服务架构师和业务架构师是基础架构架构师的下一步。 我在 2014 年的一次演讲中分享了一位厨师和他的烹饪故事。 VMUG session.\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.6-the-restaurant-analogy/","title":"6. 餐厅类比","tags":[],"description":"","content":"我们已经描述了数据中心管理的各个方面是如何发生变化的。如果您需要更多信息，请参阅本章。这些根本性的变化也将改变您的 IT 业务。您现在是服务提供商。尽管您的工程或技术知识仍然很重要，但您的客户会根据您的业务服务水平来衡量您。尽管他们关心您的系统架构及其功能，但他们衡量的是您的服务质量。\nSunny Dua1 在解释正式服务水平协议的必要性时，我们使用餐厅类比 SLA (SLA). 这个比喻引起了许多客户的共鸣。人类总是与食物有关！\n从本质上讲，一家餐厅有 2 个区域，通常有明确的分界线：\n 用餐区。 厨房。  将您的 IaaS 业务想象成餐厅业务。它有一个用餐区，您的顾客住在那里，还有一个厨房，您可以在那里准备食物。猜猜哪个更重要？\n你是对的。用餐区。\n如果就餐区一切顺利，顾客得到准时和优质的服务，他们付给你的钱，这对企业来说是个好日子。你是否在热厨房里跑来跑去是一个单独的内部问题。客户不需要知道它。\n我们使用类比来传达这样的信息，即您需要首先关注客户，然后才是您的 IaaS。如果您很好地照顾您的客户，并且他们对您的服务感到满意，那么您在 IaaS 中遇到的问题就是次要的内部问题。\n “用餐区”是消费者层。看下图。这是您客户的虚拟机所在的位置。 “厨房”是提供者层。这是您的基础架构层，VMware 和硬件驻留于此。  公共云是厨房的一部分。仅仅因为您不再拥有基础设施并不意味着您不能承担管理责任。企业 IT 的结构意味着基础架构团队最终要承担责任。\n两层楼之间显然有一条分界线。您的客户不应关心您的 SDDC 或 EUC 的详细信息。 VM Owner 并不关心您是否在数据中心灭火。因为他们不在乎，无论您使用的是较旧的 VMware Cloud Foundation 还是最新的，您都不希望他们给您发号施令。您选择的硬件品牌和规格也是如此。\n应用程序团队成为共享服务云平台的消费者。根据 SLA，应用程序团队可以被视为拥有对基础设施的专用访问权，或者他们可以降低性能以换取性能损失。为了保证性能 SLA，集群中运行的 VM 不应受到任何其他 VM 的影响。性能必须与 ESXi 中运行的唯一虚拟机一样好。\n让我们专注于厨房区域，因为它也在经历转型。 服务器、Windows 或 Linux 团队通常拥有共享平台的所有权，并演变为平台团队。 随着超融合基础设施 HCI, 的发展，存储正在被吸收到平台中。 网络团队的边界也正在与网络虚拟化相结合。 许多网络服务（例如防火墙和负载平衡器）都是虚拟化的。\n  Sunny和我有着悠久的历史. 我们都来自这个领域，最终成为了产品经理。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.7-service-level-agreement/","title":"7. 服务水平协议","tags":[],"description":"","content":"企业级云和非企业级云之间的区别在于 SLA。云提供商可以声明他们拥有最好的技术、最有经验的专业人员、最具创新性的流程、行业认证等，以证明他们是最好的。如果他们害怕在他们的合同中用 SLA 来支持它，那么所有这些都将无济于事。 SLA 使客户能够追究云提供商的责任，因为它会带来经济损失。\n一旦定义了 SLA，客户就想知道它将如何交付。这就是流程、架构、认证等的用武之地。什么总是在如何之前。\nIaaS 的 4 个 SLA IaaS 企业应提供三个 SLA，因为客户需要全面覆盖。\n   SLA 描述     可用性 这是最基本的SLA。它是最古老和最知名的。事实上，这在很大程度上是给定的。事实上，商定的数字是多少并不重要。如果这该死的事情失败了，你最好在有人抱怨或事情变得更糟之前迅速提出来！   性能 SLA 仅仅因为发生了一些事情并不意味着它会很快。虚拟机是可以启动的，但是如果服务太慢，那就关掉就好了。 性能 SLA 涵盖了这一点并解决了基于投诉的操作 CBO 通过定义什么是快速的。 它涵盖了CPU、内存、磁盘和网络，因此使用了四个指标。   遵守 这为行业法规或认证提供了安全合规性。   服务 以上三个SLA是由技术提供的。它们需要得到人类提供的服务的补充。这应该涵盖主动和被动服务。两个流行的例子是响应时间和解决时间。    KPI vs. SLA KPI 和 SLA 齐头并进。\n   首字母缩略词 描述     SLA 您与客户签订的正式商业合同。通常，这是在 IaaS 提供商（基础架构团队）和 IaaS 消费者（应用程序团队或业务部门）之间进行的。 正式的 SLA 需要运营转型 OT. 它需要的不仅仅是技术更改，因为您需要查看合同、价格（不仅仅是成本）流程、人员等。如果违反 SLA，它往往会受到经济处罚，例如下一个计费周期的信用。   KPI 这包括 SLA 指标，以及在违反 SLA 指标之前提供预警的相关附加指标。一个给定的 SLA 有很多 KPI，而 KPI 是 SLA 的先决条件。如果您没有适当的 SLA，那么在提交 SLA 之前先从内部 KPI 开始。 首先了解并分析 你的IaaS的实际性能。 使用 此处 中描述的分析技术，我分析了超过一百万个数据点。    SLA 是 每月 计数器，而不是每天或每年。您使用整个月的数据来计算它。\n时间线很重要。在下表中，请注意一年中的 99.999% 实际上比一周中的 99.95% 容易。您的客户不会接受年度柜台，因为他们可能面临长时间停机。你不会接受每日柜台，因为没有错误的余地。月度计数器在服务质量和提供服务的成本之间提供平衡。它还使报告更容易，因为您只需要跟踪日历月。\n每添加一个“9”，您的停机时间窗口就会减少 10 倍。这就是为什么每个小数会花费更多的钱，因为可能需要不同的结构。\n即使您每月测量一次 SLA，仍然难以满足。看看下表。为简单起见，我们将使用可用性 SLA 而不是性能 SLA，因为 up 或 down 是一个简单的二进制文件。\n如果您承诺 99.99%，那么您每个日历月只有 4.0 分钟到 4.5 分钟的停机时间。这意味着您的架构必须能够检测到问题，然后在短短几分钟内完成相应的修复。这是一个狭窄的操作空间。\n适用于可用性但不适用于性能的独特节省宽限期是计划停机时间。没有计划的性能停机时间这样的事情。特定于 IaaS，您可以建议计划停机时间不包括在 SLA 中，只要它快速且很少完成即可。 VM 硬件升级、工具升级和 Windows 升级等计划活动可以包含在计划停机活动中。客户造成的停机时间不包括在内，无论是否有意。这就是为什么您需要两个计数器：一个用于 SLA，一个用于实际。实际上，每次停机都会被记录下来，无论它是否属于 SLA 的一部分。\n影响可用性但不影响性能的挑战是恢复时间。您的系统可能会在 1 分钟内检测到 VM 已关闭，但是整个操作系统启动并正常运行之前的重启过程需要 5 分钟，因为它需要执行文件系统一致性检查。\nKPI 是对 SLA 的补充，因为它跟踪的强度更大，涵盖更多的计数器和事件。使用 vRealize Log Insight 处理更多时间敏感事件，因为 vRealize Operations 每 5 分钟测量一次。\n从上表中，请注意不包括来宾操作系统计数器，因为它是“应用程序 KPI”或 VM KPI 的一部分，而不是 IaaS KPI。它们会影响 VM 性能，但 IaaS 无能为力，这意味着修复是在来宾 OS 层完成的。\nKPI 还通过为您的运营转型提供垫脚石来补充 SLA。这是真正的业务 SLA 操作的必要步骤。\n你从你站的地方走。首先使用 KPI。随着时间的推移，确定您的实际可用性\n服务水平 下表显示了服务级别的基本和一般准则。考虑到技术和业务需求，您将实施的实际模型肯定会有所不同。 在 容量管理部分, 让我们回顾一个实际的例子。\n上表由他们的 SLA 进一步定义，因为您需要量化 10% 惩罚的确切含义。\n金子 级别的 SLA 高于 银 级别。为此，这意味着它们是根据相同的基准进行衡量的。\n 对于可用性，您可以根据理想情况衡量所有课程，即没有停机时间。 对于性能，您可以根据相同的阈值来衡量它们，这是一个严格的（读取：快速）数字。 对于合规性，您可以根据理想情况来衡量它们，即完美的合规性。 对于服务，您根据理想来衡量它们，这是最好的服务。  性能 SLA 让我们详细说明性能 SLA，因为它比其他两个更复杂。\n根据上图，您提供 99.9% 金子 和 99% 银 作为相应的 SLA。\n对于黄金高于白银，这意味着两者都是根据_相同的原始阈值_来衡量的。换句话说，银色环境中的虚拟机期望它不会像黄金环境中的虚拟机那样频繁地得到它需要的东西。如果 VM Owner 在性能方面想要更多 可靠的 服务，那么只需支付更多费用并升级到 金子 集群。\n这种方法比为每一层设置不同的性能阈值更容易。假设您设置了以下内容：\n 金子: 虚拟机内存争用： 0.5% 银: 虚拟机内存争用： 1.5%  你已经注意到问题了吗？\n很难解释服务类别之间的增量或差距。为什么银价只有一半，价值却是原来的三倍？不应该是成比例的吗？\n还有第二个问题。如果你设置_不同的_标准，白银的表现可能会比黄金好，因为它的标准较低。这会造成混乱。\n在操作上，设置单一阈值更容易。无需使用 vRealize Operations 策略。由于 SLA 阈值相同，您还可以在同一集群或数据存储中使用混合类 VM。\n我们将详细介绍性能 SLA 中使用的计数器 这里.\n差异化服务 IaaS 建立在商品硬件上，并作为实用程序提供。话虽如此，有很多方法可以让您的服务与竞争对手区分开来。使用服务级别来区分高质量的服务。下表列出了一些示例。\n   服务 描述     备份 黄金级 提供应用程序级别的备份。它还提供更频繁的完整备份，并为客户提供自助式个人文件恢复。   高可用性 黄金级 提供应用程序级别的监控。客户还可以要求他们的 VM 的特定启动顺序，并要求 VM-Host 关联规则以最小化风险。   灾难恢复 黄金级提供较低的 RPO 和 RTO。客户还有权进行年度实际测试，其中生产工作负载从 DR 站点运行。   快照 黄金级 提供更长的快照和更大的快照。   操作系统管理 黄金级 提供了打补丁的灵活性。客户可以指定补丁延迟和自定义补丁包请求，其中并非所有来自 Microsoft 或 Red Hat 的补丁都适用。   虚拟机管理 黄金级 提供更新工具和 VM 硬件的灵活性。允许客户推迟更新   监控服务 黄金级虚拟机将受到主动监控，而不仅仅是依靠警报。黄金层提供对运行客户虚拟机的底层物理基础架构的更深入的可见性。客户有权获得较低的内部指标，例如 vMotion 眩晕时间和 VMkernel 延迟。黄金层提供自助服务监控。客户可以自己登录到一个门户网站，在那里他们可以监控自己的虚拟机。他们可以启动预定的停机时间。客户将通过电子邮件和消息网络收到警报。   支持 黄金级提供更快的响应时间、更长的工作时间和更快的解决时间。   网络 黄金级 提供优先网络。客户可以选择定期 ping 服务，以确保其应用程序之间的网络延迟保持在商定的阈值内。   谭 黄金级 配备一名技术客户经理，作为客户的单点联系方式    "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.8-pillar-process-people/","title":"8. 支柱、流程和人员","tags":[],"description":"","content":"你管理什么，实际上？你的客户希望你照顾什么？你如何管理你需要管理的东西？\n最基本的是您需要了解环境。有数以千计的对象（例如 VM、应用程序、防火墙）具有复杂的关系和相互依赖关系。库存给你这个。这就是为什么它是下图中的第一个框的原因。我有一家大型电信公司告诉我，他们的整个 DC 可能会宕机（比如计划的 DR 练习），但 vRealize Operations 不会，因为这就是他们监控宕机时间的方式。\n一旦你知道你在管理什么，你就可以继续确保他们健康。如果没有问题，那么您将着手解决潜在的问题。如果没有风险，那么您会寻求优化。\n健康 健康实际上很难定义，因为它取决于上下文和对象。 英语中的“健康”这个词本身就需要解释一下。 因此，最好定义并映射到操作的支柱。 系统健康是当前的运行状态。 它涵盖了已经发生和/或仍在进行中的实际问题。\n有两个问题会影响健康：\n 可用性 性能  可用性和性能可以相互排斥，但两者都会影响健康。如果没有其他问题，您可能会遇到 1 个问题。\n风险 风险就是未来。它涵盖了潜在的问题。目前没有问题，但如果你不采取行动，就会增加它成为问题的风险。\n有 3 个问题会在运营中产生风险：\n 遵守 配置 容量  在上述所有问题中，由于不存在实际性能、可用​​性或安全问题，因此健康不会受到影响。您面临的是风险，因为您的应用程序和操作会继续进行，就好像什么都没发生一样。您的客户可能不会注意到，您的业务也不会受到影响。\n效率 效率就是优化。目前没有问题，也不存在将来出现问题的风险。您希望进行优化，因为它可以降低成本并提高性能。\n 浪费（超大、未使用的 EC2、空闲、未映射的磁盘空间、孤立文件等） 成本。将您的成本与其他云提供商进行比较，因为 IaaS 本质上是一种商品。 绿色运营符合效率，因为可持续运营需要精益运营。  运营支柱 运营管理的最佳实践要求您区分支柱和流程。支柱是您需要管理的，而流程是您管理它们的方式。\n每个支柱都是一个单独的管理单元。它们代表单独的学科并且彼此兼容。每个支柱的复杂性取决于技术，例如，vSAN 容量比中央阵列更具动态性。在 vSAN 中，更改存储策略可能会导致突然激增。 流程是每个支柱内的活动。它需要角色和职责，这些都记录在政策中。\n第 0 天是您计划和定义预期结果的阶段。一些公司执行压力测试和负载测试，因此他们知道实际负载实际发生时会发生什么。没有计划和测试，你不知道现实会是什么，因为你没有定义“好”。\n第 1 天是您构建系统和启动服务的阶段。这包括配置各种操作输入，例如成本驱动因素（例如应用许可证成本、电费）。由于本书的重点是第 2 天，因此上表中不包括第 1 天。\n监控和故障排除是活动。 他们不是你管理的东西。 在监控中，您有标准操作程序 SOP (SOP), 它定义了哪些角色执行哪些检查。 你首先专注于洞察力，然后才是警觉。故障排除不仅仅是简单的“发现”，也不仅仅是收集事实。它侧重于原因，然后制定解决方案以防止未来发生事故。事件意味着某些东西已经死亡、缓慢或被破坏。您对可用性、性能和安全性进行故障排除。\n库存是你拥有的东西，而不是你计划的东西。您计划具有特定配置的容量。库存仅说明您拥有的东西。无需进行故障排除或优化。\n优化带来了许多实际的好处和真正的业务成果。这里是其中的一些：\n我敢肯定还有更多。用你的真实世界经验给我留言！\n相互依存 运营管理的支柱是相互依存的。了解关系与了解每个支柱一样重要。关系很重要，因为症状和根本原因通常是两个不同的事情。性能问题可能是由配置问题引起的，例如配置过时或版本不兼容。\n以上图为参考，让我们详细说明每个支柱。\n可用性 运营管理中最基本的部分，因为如果整个环境出现故障，其余的 7 个运营支柱实际上都无关紧要。\n有一系列可用性解决方案，从快照、备份、HA、FT 和 SRM。每个都会对容量和性能产生影响。\n可用性考虑 HA（高可用性）设置。因此，计划内停机（例如 ESXi 处于维护模式）不会影响可用性值。\n可用性如果做得好，不会影响容量和性能，因为它已经作为设计的一部分考虑在内。是的，这意味着您需要包括由 DR 事件引起的潜在工作负载。\n可用性 SLA 越高，服务的价格就越高。每增加 9 个可用性就会有很大的增加。五个 9 的可用性比四个 9 的成本高得多。\n性能 \u0026amp; 容量 性能和能力是密切相关、相互依存的，但又不完全相同，因此经常被另一个误认为。\n在较大的组织中，它们通常由两个不同的团队管理。容量团队不参与日常运营，因为他们专注于更长期的资源可用性。容量 规划 是在不影响性能的情况下最大化利用率。它还考虑了潜在的工作负载和未来的需求，这是性能 未 考虑的。\n容量团队可能不具备对性能进行故障排除的技术技能。另一方面，日常运营处理数据中心的“地板上的东西”。他们的主要重点是满足应用程序的需求。它是消费者驱动的，而容量是提供者驱动的。\n性能受能力影响，因为能力不足往往是性能不佳的原因。\n容量受性能影响，因为它需要先考虑争用计数器，然后再考虑利用率。如果您不能满足现有需求，那么您将不会配置新的工作负载，因此容量实际上已满。利用率计数器可能还不高，但这是次要考虑因素，因为您在弄清楚原因之前停止添加新工作负载。\n性能比容量更具有时间敏感性和重要性。管理性能第一，容量第二。 使用餐厅类比, 您首先关注用餐区，然后是厨房。\n性能和容量是相反的关系。在最低容量下实现最高的整体性能，因为此时 VM 或 Infra 交付的工作量最大。\n成本 \u0026amp; 价格 随着硬件成为商品，基础设施变得无形，价格自然成为所有 IaaS 供应商的共同标准。普遍的预期是每个虚拟机的价格在不同的云提供商中是相似的。提供差异化​​定价的一种方法是 SLA。\n虽然价格应该高于成本，但它可以独立于成本设置。使用折扣和累进定价为正确的条款和条件设置正确的价格。渐进式定价也将阻止首先配置大型未使用的虚拟机。与这些 VM 已经投入生产相比，它更容易处理。\n成本与容量密切相关。 IaaS 的利用率越高，每个 VM 的成本就越低。成本与容量是分开的，因为它可以在不减少容量的情况下进行优化。\n成本和容量也可以相互独立。您可以通过技术更新在不增加成本的情况下增加容量。您可以通过降低非容量成本（例如您为服务支付的费用）来降低成本而不减少容量。\n性能 SLA 越好，客户愿意支付的价格就越高，因此术语价格/性能。\n合规与网络安全 网络安全是相关的，但与合规性不同。网络安全涵盖攻击等问题（无论是内部员工还是外部威胁）。合规性处理可能暴露安全漏洞或符合特定标准集的配置设置或值。\n根据内部和行业标准衡量合规性。它也是连续测量的。\n配置 \u0026amp; 清单 清单与配置相关，但不完全相同。配置会影响性能、成本、容量和合规性。 因此，它是关键点之一 优化评估. 需要在整个堆栈中检查设置，尤其是较低的堆栈，因为堆栈中的问题会影响其上方的堆栈。\n清单是对你所拥有的东西的记录。配置是你所拥有的属性。清单使用一小部分设置，因为重点是计算对象的数量。大多数属性/设置与库存无关。\n清单一般会问我们在哪儿有什么？因此，它专注于数量，而不是规格。例子：\n 集群中的虚拟机数量是清单的一部分。它不是配置的一部分。 群集中的 ESXi 主机数是清单的一部分。但它也是配置的一部分，因为这是该集群的设计。集群配置了 8 个 ESXi 主机是有原因的，偏差可能需要在文档中解释。  清单具有库存盘点等概念，通常涉及实物。配置没有。\n角色和职责 保持运营良好运行需要许多角色。有些直接参与日常运营，而另一些则专注于大局。在小型组织中，角色由相同的少数人扮演，相互支持。你可以让 3 人做任何没有结构的事情，或者 300 人有明确的界限。无论如何，工作仍然需要完成，因此记录所有角色和职责。\n1 级操作 处理生产环境。定期检查整体环境。使用洞察力和警报。通常不需要读取日志。\n负责关闭警报。只有在知道根本原因时才应关闭警报，而不是在症状消失时关闭。在不知道发生原因的情况下关闭警报会阻止吸取教训，并可能适得其反。\n按照 SOP 执行简单的故障排除。 SOP 理想情况下是自动化的，采用输入参数，因此如果手动步骤的数量或频率很高，人为错误的可能性就会降到最低。\n关注健康，即可用性和性能。\n2 级操作 当级别 1 无法解决问题时激活。对于解决的每个问题，此角色应更新故障排除指南，以便可以授权级别 1。 专注于洞察力，而不是警觉。放眼大局，尽量避免发生警报。\n比 1 级更高级。可能专注于某些领域（例如 vSAN、网络）。\n执行高级故障排除，这通常需要进行日志分析。\n领导或参与运营管理工具的评估。设计和维护 vRealize 仪表板和警示。\n关注健康、风险和效率。\n建筑学 看看未来。评估新技术并评估是否需要技术更新。\n容量 规划产能的供应方，与架构师一起工作。\n计划产能的需求方，与业务线或销售团队合作。\n不参与日常工作。 ESXi 主机进入维护模式是一个操作问题，而不是容量管理问题。\n遵守 将合规性设置设置为商定的内部和行业标准。\n验证运营团队是否及时、正确地处理了不合规警报。向上级管理层报告和讨论合规状态。\n关注风险（配置、合规性）。\n信息技术管理 这里可以有多个级别，一直到 CIO。\n看大局，尤其是价格和成本。\n一般不参与故障排除和架构。\n主要关注点是合规性和成本。作为设计的一部分，性能并不像建筑师承诺的那样好。\n运营管理的输入 有两种类型的计数器会影响您的日常操作。竞争是性能的主要计数器，而利用率是容量的主要计数器。第三种类型只是提供信息，例如说明您拥有的东西。\n虽然争用是您关心的问题，但利用更受关注，因为它更易于监控且更易于解释。有一种趋势是监控利用率，就好像这是运营的支柱一样。 相同争用, 利用率不是您管理的事情. 是的，您监控利用率，但出于某种原因进行监控。这只是衡量您关心的事物的一种方式。就其本身而言，它没有任何意义。意义取决于目的。不同的目标会导致不同的解释和利用指标。利用率对性能和容量的影响不同。对于性能，您应该查看实际和真实的利用率。对于容量，根据可用容量（在 HA 和缓冲区之后）衡量利用率。\n虽然它们具有负相关性，但在低利用率时仍会发生争用。当 ESXi 主机未以高利用率运行时，集群中的虚拟机可能会争用资源。不平衡和不正确的集群配置是导致低利用率争用的两个典型原因。 在性能管理一章中进一步解释了利用和争用。 性能 管理.\n分配补充了需求，因为新配置的 VM 往往处于空闲状态（可能长达数月）。此外，需求模型无法检测到未来的负载，因为它尚不存在。分配模型应该用来补充需求模型。这将在此处进一步解释。 这里.\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/1.1.9-insight-vs-alert/","title":"9. 洞察力和警报","tags":[],"description":"","content":"许多操作都是从警报开始的。根据警报采取行动，从而在日常操作中产生反应。为了扭转这种情况，vRealize Operations 提供了洞察力。洞察力是警报的补充，而不是替代。警报错过了大局，因为它只能看到已触发的内容。对于达到此阈值的对象，其下方可能有很多对象。对于警报，可能有许多支持指标显示潜在的根本原因。想想冰山。海平面以上的小部分，可见的部分，是一个警报。重要且无形的部分是洞察力。\n如果症状消失，警报可能会自动关闭。当没有警报与没有问题相关联时，这鼓励“懒惰操作”。 Insight 没有“自动关机”这个概念，因为它不涉及服务台工单。它记录了出现问题的事实，某些事情可能会引起警报。理想情况下，您希望在触发警报之前检测并解决问题。\n有一种常见的误解，认为洞察力只是针对同一指标使用不同阈值的警报。所以insight基本上是一个阈值较低的警报。这是有效的，但不完整。以这种方式实施洞察可能会导致警报风暴和大量票证。与警报相比，Insight 最好使用不同的指标，因此您可以获得不同的视角。\n洞察力应该集中在根本问题上。它还有助于为您争取时间，以便您可以在用户抱怨之前解决问题。在以下示例中，警报使用 SLA 指标和阈值。 Insight 使用更精细的指标和支持指标。例如，vMotion 眩晕时间不是您的 SLA 的一部分。\n警报计划 您的目标是最大限度地减少警报风暴，同时提供最大的覆盖范围。这需要仔细规划警报定义、症状和阈值。 对于每个警报，问问自己：看到警报的人将采取什么补救措施？\n 如果答案是什么，那为什么会有警报？使用仪表板可以提供更好的画面。 如果答案是什么，可以自动化吗？小心简化的逻辑，因为计算机没有常识。 如果答案升级到下一个级别（例如第 2 级支持），则询问下一个级别的团队他们更喜欢警报还是仪表板。如果他们的答案是他们需要查看上下文，那么仪表板更有意义。  您希望通过警报监控哪些区域？运营管理有 7 个支柱，因此在设计警报定义时很容易混淆。\n可用性 您可以通过跟踪软错误、主动更换硬件和确保软件堆栈兼容性来最大限度地减少被动操作。\n表现 您不是通过使用较低的阈值，而是通过跟踪预警指标来最大限度地减少反应性操作。有关示例，请参见上图。\n容量 这通常被误认为是性能问题，因为高利用率是一个常见的警报。\n遵守 这是配置检查的一个子集，因此该限制是官方安全标准。\n配置 配置比合规性更广泛。配置错误会导致可用性、性能、容量和安全性。例子：\n 可用性。软件版本之间的不兼容可能会导致中断。 容量。禁用 CPU SMT 将减少逻辑处理器的数量。 安全。过时的软件可能包含已知的安全漏洞  成本 您通常不会在此处设置警报，因为使用仪表板进行洞察是更好的监控解决方案。\n清单 您通常不会在此处将警报设置为库存，它只是您拥有的物品的帐户。没有好坏之分。\n 管理警报不同于最小化警报。管理层正在处理已触发的警报。最小化允许我们从一开始就防止警报。使用洞察力最大限度地减少警报定义，因为警报应保留用于紧急和重要的问题。\n在无法最小化警报的情况下，您可以降低其严重性。您不是通过降低阈值来做到这一点，而是通过监控预警事件。比如CPU和网络硬件级问题的预警。您跟踪此软错误并执行主动替换。\n在严重程度无法降低的情况下，您可以减少生产过程中发生的警报数量。您可以通过主动更换作为绿色区域期间计划停机时间的一部分来做到这一点。例如，固态驱动器 (SSD) 在写入次数方面没有无限的使用寿命。制造商有一个耐用性编号。如果您有数千个磁盘，您可以创建一个仪表板来跟踪此限制并为那些接近其限制的磁盘安排活动更换。\n"},{"uri":"/vmware-operations-guide/zh/metrics/chapter-1-overview/","title":"第 1  - 章概述","tags":[],"description":"","content":"第1章 概述 vSphere 计数器比物理机计数器更复杂，因为有许多组件以及由虚拟化引起的不一致。虚拟化后，基础架构的 4 个元素（CPU、RAM、磁盘、网络）的行为 不同。\n新层造成的复杂性，因为它会影响其下方和上方的相邻层。所以净效应你需要学习三层。 T这就是为什么从监控和故障排除的角度来看, 容器 技术需要更深入的知识，因为边界更不严格。 想想所有的 问题 您拥有 vSphere 资源池性能故障排除功能，现在可以在进程级别进行细化！\n"},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-1-overview/","title":"第 1 - 章概述","tags":[],"description":"","content":"第1章 概述 第一章 运营管理概论, 让我们从为什么反应式操作 常见 开始, 以及所需的范式转变用于主动和预测性操作。\n 1. 基于投诉的运营   2. 目的驱动架构   3. 多云基础设施运营   4. 开始思考如何结束   5. VCDX 关系到 VCOX   6. 餐厅类比   7. 服务水平协议   8. 支柱、流程和人员   9. 洞察力和警报   "},{"uri":"/vmware-operations-guide/zh/dashboards/chapter-1-design-considerations/","title":"第 1 - 章设计注意事项","tags":[],"description":"","content":"第1章 设计注意事项 在设计一套讲述故事的仪表板时需要考虑许多因素。\n 1. 仪表盘|警报 |报告   3. 相互作用   "},{"uri":"/vmware-operations-guide/zh/metrics/chapter-2-cpu-metrics/","title":"第 2 - 章 CPU 衡量指标","tags":[],"description":"","content":"第2章 CPU 衡量指标 这 细微差别 您之前看到的是由于附加层的性质。下面的信息图显示了虚拟化带来的多个元素。它帮助我理解衡量指标，因此分享。\nVM 的 CPU 计数器与来宾操作系统中的不同。例如，vCenter 提供了 5 个计数器来说明 VM CPU 的利用率，但没有一个直接映射到 Windows/Linux CPU 利用率。 ESXi 中的 CPU 计数器也不仅仅是其正在运行的 VM 和 VMkernel 的总和。\n以下屏幕截图显示了 VM 的 CPU 计数器。与Windows等Guest OS相比，您是否注意到缺少什么和增加了什么？继续并打开 Windows PerfMon 或 SysInternal 并进行比较，您会很快发现主要差异。\n马上，您会注意到 Windows 中不存在流行的计数器，例如 Ready、CoStop 和 Overlap。原因是 VM 和来宾 OS 具有不同的优势。\n当 VMkernel 取消调度 VM 以处理同一物理线程或内核上的其他内容（例如其他 VM、内核中断）时，来宾操作系统不知道它为什么会被中断。事实上，它会遇到运行在物理核心上的特定 vCPU 的冻结时间。再次安排时间时，时间会跳跃。由于这种独特的可见性，在正确的层使用正确的衡量指标很重要。以下是来宾操作系统可以看到和看不到的内容：\n不同的有利位置导致不同的计数器。这会在您根据 VM 内部发生的情况确定大小时产生复杂性，但根据 ESXi 上 VM 占用空间之外发生的情况进行回收。换句话说，您调整来宾操作系统的大小并回收 VM。\n这两层都需要监控，因为每一层都测量不同的性能问题。因此，必须安装 VMware Tools，因为 VMkernel 无法提供对来宾操作系统的可见性。默认情况下，VMware Tools 每 20 秒向 ESXi 主机报告有关来宾的统计信息。\n 1. 来宾操作系统   4. 小测验时间!   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-2-performance-management/","title":"第 2 - 章绩效管理","tags":[],"description":"","content":"第2章 绩效管理 性能是关于确保工作负载获得必要的资源。 KPI 可用于识别性能问题并在违反 SLA 之前发出预警。\n 1. 云管理员生活中的一天   2. 3个领域   3. 计划 监视器 故障排除 优化   4. 争用与使用   5. 性能与容量   6. 性能 SLA   7. 关键绩效指标和服务水平协议   8. 深度和广度   9. 领先指标   10. 基线分析   11. 优化性能   12. 根本原因分析   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-3-capacity-management/","title":"第 3 - 章容量管理","tags":[],"description":"","content":"第3章 容量管理 容量管理的核心是平衡供需。这是关于以尽可能低的成本满足需求。\n 1. \u0026#34;好处\u0026#34; 劝告   2. 端到端容量   3. 容量规划   4. 需求模型   5. 分配模型   6. 可用容量   7. 投影   8. 峰值利用率   9. 存储容量   10. 优化产能   11. 开垦   12. 调整大小   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-4-configuration-management/","title":"第 4 - 章配置管理","tags":[],"description":"","content":"第 4 章 配置管理 配置管理旨在确保实际配置设置与预期或要求的值相匹配。硬件和软件产品的配置必须与文档化的系统架构相同。偏差可能导致安全或合规性问题、性能下降或可用性风险。\n 1. 概述   2. 审核流程   3. 计划与现实   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-5-cost-management/","title":"第 5  - 章成本管理","tags":[],"description":"","content":"第五章 成本管理 随着硬件成为商品，基础设施变得无形，价格已成为所有 IaaS 提供商的通用标准。应用程序可以跨多个云运行，因此以更便宜的价格运行应用程序。\n 1. 敢比较   2. 价格   3. 成本   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-6-compliance-management/","title":"第 6 - 章合规管理","tags":[],"description":"","content":"第六章 合规管理 一般而言，合规 表示遵守规则，例如规范、 政策, 标准或法律。 在本书的上下文中，合规性与组织建立的安全标准的一致性有关。 本章介绍如何使用 vRealize Operations 确保您的组织始终满足安全团队要求的安全策略。\n 1. 概述   2. 网络安全方法   3. 持续合规   4. 政策如何运作   5. 监管基准   6. 自定义基准   7. 查看您的结果   "},{"uri":"/vmware-operations-guide/zh/operations-management/chapter-7-availability-management/","title":"第 7 - 章可用性管理","tags":[],"description":"","content":"第七章 可用性管理 可用性 是系统的特征，旨在确保商定的操作性能水平，通常是正常运行时间。 我们努力实现更高的正常运行时间或更高的解决方案可用性，可以是业务服务或基础设施服务。\n高可用性很难设计。 每增加 9 个（如可用性从 99.999% 上升到 99.9999%）通常需要不同的架构。 对于非技术人员，从可用性的角度来看，很容易看到“嘿，这只是另一个小数”。 正确的观点是，从非可用性的角度来看，停机时间窗口实际上已经下降了 1000%。 您只有 1 分钟的停机时间，而不是 100 分钟的停机时间，所以突然间每一秒都很重要。 如需更深入的阅读，请查看 高可用性 这篇文章由 Ivan Pepelnjak.\n 1. 独立系统”   2. 多组分系统   3. 可用性状态   4. 灾难避免和恢复   "},{"uri":"/vmware-operations-guide/zh/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/vmware-operations-guide/zh/tags/","title":"Tags","tags":[],"description":"","content":""}]